{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/commitDetails/commitDetails.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CommitDetailsApp",
          "members": [
            {
              "kind": "method",
              "name": "onInitialize",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "_api",
              "type": {
                "text": "HostIpcApi"
              },
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "_hostIpc",
              "type": {
                "text": "HostIpc"
              },
              "privacy": "private",
              "readonly": true,
              "default": "new HostIpc(this.appName)",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "_logger",
              "type": {
                "text": "LoggerContext"
              },
              "privacy": "private",
              "readonly": true,
              "default": "new LoggerContext(appName)",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "_promos",
              "type": {
                "text": "PromosContext"
              },
              "privacy": "private",
              "readonly": true,
              "default": "new PromosContext(this._hostIpc)",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "_telemetry",
              "type": {
                "text": "TelemetryContext"
              },
              "privacy": "protected",
              "readonly": true,
              "default": "new TelemetryContext(this._hostIpc)",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "State"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "'editor' | 'view'"
              },
              "privacy": "protected",
              "readonly": true,
              "default": "(document.body.getAttribute('data-placement') ?? 'editor')",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "onBind",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Disposable[]"
                }
              },
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "onInitialized",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "onMessageReceived",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "IpcMessage"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "onThemeUpdated",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "ThemeChangeEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "_focused",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "_inputFocused",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "bindDisposables",
              "type": {
                "text": "Disposable[] | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "bind",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "log",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "optionalParams",
                  "type": {
                    "text": "any[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "getState",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "State | undefined"
                }
              },
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "sendCommand",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "command",
                  "type": {
                    "text": "TCommand"
                  }
                },
                {
                  "name": "params",
                  "type": {
                    "text": "IpcCallParamsType<TCommand>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "sendRequest",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<IpcCallResponseParamsType<T>>"
                }
              },
              "parameters": [
                {
                  "name": "requestType",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "params",
                  "type": {
                    "text": "IpcCallParamsType<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "setState",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "Partial<State>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "bootstrap",
              "default": "undefined",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            }
          ],
          "superclass": {
            "name": "App",
            "module": "/src/webviews/apps/shared/appBase"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CommitDetailsApp",
          "declaration": {
            "name": "CommitDetailsApp",
            "module": "src/webviews/apps/commitDetails/commitDetails.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/home/context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "stateContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "stateContext",
          "declaration": {
            "name": "stateContext",
            "module": "src/webviews/apps/home/context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/home/home.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "homeBaseStyles",
          "default": "css` * { box-sizing: border-box; } :not(:defined) { visibility: hidden; } [hidden] { display: none !important; } /* roll into shared focus style */ :focus-visible { outline: 1px solid var(--vscode-focusBorder); outline-offset: -1px; } b { font-weight: 600; } p { margin-top: 0; } ul { margin-top: 0; padding-left: 1.2em; } `"
        },
        {
          "kind": "variable",
          "name": "homeStyles",
          "default": "css` .home { padding: 0; height: 100vh; display: flex; flex-direction: column; gap: 0.4rem; overflow: hidden; } .home__alerts { flex: none; padding: 0 2rem; position: relative; } .home__alerts:not([has-alerts]) { display: none; } .home__main { flex: 1; overflow: auto; padding: 0.8rem 1.2rem; } .home__main > *:last-child { margin-bottom: 0; } .home__aux, .home__header { flex: none; } .home__header { border-top: 1px solid var(--vscode-sideBarSectionHeader-border); border-bottom: 1px solid var(--vscode-sideBarSectionHeader-border); padding: 0.4rem; } .home__aux:has(gl-promo-banner:has(gl-promo:not([has-promo])):only-child) { display: none; } summary { font-size: 1.3rem; font-weight: normal; text-transform: uppercase; color: var(--vscode-foreground); cursor: pointer; } details[open] summary { margin-block-end: 0.8rem; } gl-home-header { margin: 0; } gl-repo-alerts:not([has-alerts]) { display: none; } `"
        },
        {
          "kind": "variable",
          "name": "buttonStyles",
          "default": "css` .button-container { margin: 1rem auto 0; text-align: left; max-width: 30rem; transition: max-width 0.2s ease-out; } @media (min-width: 640px) { .button-container { max-width: 100%; } } .button-container--trio > gl-button:first-child { margin-bottom: 0.4rem; } .button-group { display: inline-flex; gap: 0.4rem; } .button-group--single { width: 100%; max-width: 30rem; } .button-group gl-button { margin-top: 0; } .button-group gl-button:not(:first-child) { border-top-left-radius: 0; border-bottom-left-radius: 0; } .button-group gl-button:not(:last-child) { border-top-right-radius: 0; border-bottom-right-radius: 0; } `"
        },
        {
          "kind": "variable",
          "name": "alertStyles",
          "default": "css` .alert { position: relative; padding: 0.8rem 1.2rem; line-height: 1.2; margin-bottom: 1.2rem; background-color: var(--color-alert-neutralBackground); border-left: 0.3rem solid var(--color-alert-neutralBorder); color: var(--color-alert-foreground); } .alert__title { font-size: 1.4rem; margin: 0; } .alert__description { font-size: 1.2rem; margin: 0.4rem 0 0; } .alert__description > :first-child { margin-top: 0; } .alert__description > :last-child { margin-bottom: 0; } .alert__close { position: absolute; top: 0.8rem; right: 0.8rem; color: inherit; opacity: 0.64; } .alert__close:hover { color: inherit; opacity: 1; } .alert.is-collapsed { cursor: pointer; } .alert.is-collapsed:hover { background-color: var(--color-alert-neutralHoverBackground); } .alert.is-collapsed .alert__description, .alert.is-collapsed .alert__close gl-tooltip:first-child, .alert:not(.is-collapsed) .alert__close gl-tooltip:last-child { display: none; } .alert--info { background-color: var(--color-alert-infoBackground); border-left-color: var(--color-alert-infoBorder); } .alert--warning { background-color: var(--color-alert-warningBackground); border-left-color: var(--color-alert-warningBorder); } .alert--danger { background-color: var(--color-alert-errorBackground); border-left-color: var(--color-alert-errorBorder); } `"
        },
        {
          "kind": "variable",
          "name": "navListStyles",
          "default": "css` .nav-list { margin-left: -1.2rem; margin-right: -1.2rem; display: flex; flex-direction: column; gap: 0.1rem; align-items: stretch; margin-bottom: 1.6rem; } .nav-list__item { display: flex; flex-direction: row; align-items: center; gap: 0.8rem; padding: 0.4rem 2rem; } .nav-list__item:hover, .nav-list__item:focus-within { background-color: var(--vscode-list-hoverBackground); color: var(--vscode-list-hoverForeground); } .nav-list__item:has(:first-child:focus) { outline: 1px solid var(--vscode-focusBorder); outline-offset: -1px; } .nav-list__item:has(:active) { background-color: var(--vscode-list-activeSelectionBackground); color: var(--vscode-list-activeSelectionForeground); } .nav-list__item:has(.is-disabled) { cursor: not-allowed; } .nav-list__link { flex: 1; display: flex; flex-direction: row; align-items: center; gap: 0.8rem; color: inherit; } .nav-list__link:hover, .nav-list__link:focus { color: inherit; text-decoration: none; } .nav-list__link:focus { outline: none; } .nav-list__link.is-disabled, .nav-list__link.is-disabled:hover { opacity: 0.5; pointer-events: none; text-decoration: none; } .nav-list__icon { flex: none; opacity: 0.5; } .nav-list__label { flex: 1; font-weight: 600; } .nav-list__desc { color: var(--color-foreground--65); font-variant: all-small-caps; margin-left: 1rem; } .nav-list__group { width: 100%; display: flex; justify-content: flex-start; } .nav-list__group .nav-list__label { width: auto; } .nav-list__access { flex: none; position: relative; left: 1.2rem; font-size: x-small; outline: none; white-space: nowrap; --gl-feature-badge-color: color-mix(in srgb, transparent 40%, currentColor); --gl-feature-badge-border-color: color-mix(in srgb, transparent 40%, var(--color-foreground--50)); } .nav-list__item:hover .nav-list__label { text-decoration: underline; } .nav-list__item:hover .is-disabled .nav-list__label { text-decoration: none; } .nav-list__item:hover .nav-list__desc { color: var(--color-foreground); } .nav-list__item:focus-within .nav-list__access, .nav-list__item:hover .nav-list__access { --gl-feature-badge-color: currentColor; --gl-feature-badge-border-color: var(--color-foreground--50); } .nav-list__title { padding: 0 2rem; } .t-eyebrow { text-transform: uppercase; font-size: 1rem; font-weight: 600; color: var(--color-foreground--50); margin: 0; } .t-eyebrow.sticky { top: -8px; } `"
        },
        {
          "kind": "variable",
          "name": "walkthroughProgressStyles",
          "default": "css` a, a:hover, a:focus, a:active { text-decoration: none; } .walkthrough-progress { display: flex; flex-direction: column; gap: 2px; padding: 2px 4px 4px; margin-top: 4px; align-items: stretch; cursor: pointer; border-radius: 4px; } .walkthrough-progress:focus-within, .walkthrough-progress:hover { background-color: var(--gl-walkthrough-hover-background); } .walkthrough-progress__title { display: flex; justify-content: space-between; align-items: center; color: var(--color-foreground--85); } .walkthrough-progress__button { --button-padding: 1px 2px 0px 2px; position: absolute; right: 0.4rem; } .walkthrough-progress__bar::-webkit-progress-bar { border-radius: 2px; background: var(--color-alert-neutralBackground); } .walkthrough-progress__bar::-webkit-progress-value { background: var(--vscode-progressBar-background, blue); transition: 0.1s ease-in; border-radius: 2px; } .walkthrough-progress__bar { pointer-events: none; border-radius: 2px; width: 100%; background: unset; height: 4px; flex-shrink: 0; z-index: 2; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "homeBaseStyles",
          "declaration": {
            "name": "homeBaseStyles",
            "module": "src/webviews/apps/home/home.css.ts"
          }
        },
        {
          "kind": "js",
          "name": "homeStyles",
          "declaration": {
            "name": "homeStyles",
            "module": "src/webviews/apps/home/home.css.ts"
          }
        },
        {
          "kind": "js",
          "name": "buttonStyles",
          "declaration": {
            "name": "buttonStyles",
            "module": "src/webviews/apps/home/home.css.ts"
          }
        },
        {
          "kind": "js",
          "name": "alertStyles",
          "declaration": {
            "name": "alertStyles",
            "module": "src/webviews/apps/home/home.css.ts"
          }
        },
        {
          "kind": "js",
          "name": "navListStyles",
          "declaration": {
            "name": "navListStyles",
            "module": "src/webviews/apps/home/home.css.ts"
          }
        },
        {
          "kind": "js",
          "name": "walkthroughProgressStyles",
          "declaration": {
            "name": "walkthroughProgressStyles",
            "module": "src/webviews/apps/home/home.css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/home/home.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlHomeApp",
          "members": [
            {
              "kind": "field",
              "name": "_activeOverviewState",
              "type": {
                "text": "ActiveOverviewState"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_inactiveOverviewState",
              "type": {
                "text": "InactiveOverviewState"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_header",
              "type": {
                "text": "GlHomeHeader"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "badgeSource",
              "type": {
                "text": "object"
              },
              "privacy": "private",
              "default": "{ source: 'home', detail: 'badge' }"
            },
            {
              "kind": "method",
              "name": "createStateProvider",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "HomeStateProvider"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "State"
                  }
                },
                {
                  "name": "ipc",
                  "type": {
                    "text": "HostIpc"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "attribute": "name",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "'editor' | 'view'"
              },
              "default": "'editor'",
              "attribute": "placement",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_ipc",
              "type": {
                "text": "HostIpc"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_logger",
              "type": {
                "text": "LoggerContext"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_promos",
              "type": {
                "text": "PromosContext"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_telemetry",
              "type": {
                "text": "TelemetryContext"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "bootstrap",
              "type": {
                "text": "State"
              },
              "privacy": "private",
              "attribute": "bootstrap",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "method",
              "name": "onThemeUpdated",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "ThemeChangeEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "State"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "disposables",
              "type": {
                "text": "Disposable[]"
              },
              "privacy": "protected",
              "readonly": true,
              "default": "[]",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_focused",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_inputFocused",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_sendWebviewFocusChangedCommandDebounced",
              "type": {
                "text": "Deferrable<(params: WebviewFocusChangedParams) => void>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_stateProvider",
              "type": {
                "text": "StateProvider<State>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "method",
              "name": "onPersistState",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "State"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "method",
              "name": "onWebviewFocusChanged",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "focused",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "method",
              "name": "onWebviewVisibilityChanged",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "visible",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "onFocusIn",
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "onFocusOut",
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "superclass": {
            "name": "GlAppHost",
            "module": "/src/webviews/apps/shared/appHost"
          },
          "tagName": "gl-home-app",
          "customElement": true,
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "fieldName": "name",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "name": "placement",
              "type": {
                "text": "'editor' | 'view'"
              },
              "default": "'editor'",
              "fieldName": "placement",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "name": "bootstrap",
              "type": {
                "text": "State"
              },
              "fieldName": "bootstrap",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlHomeApp",
          "declaration": {
            "name": "GlHomeApp",
            "module": "src/webviews/apps/home/home.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-home-app",
          "declaration": {
            "name": "GlHomeApp",
            "module": "src/webviews/apps/home/home.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/home/stateProvider.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "HomeStateProvider",
          "members": [
            {
              "kind": "field",
              "name": "disposable",
              "type": {
                "text": "Disposable"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "provider",
              "type": {
                "text": "ContextProvider<{ __context__: State }, ReactiveElementHost>"
              },
              "privacy": "private",
              "readonly": true,
              "default": "new ContextProvider(host, { context: stateContext, initialValue: state })"
            },
            {
              "kind": "field",
              "name": "_state",
              "type": {
                "text": "State"
              },
              "privacy": "private",
              "readonly": true,
              "default": "state"
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "State"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "dispose",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HomeStateProvider",
          "declaration": {
            "name": "HomeStateProvider",
            "module": "src/webviews/apps/home/stateProvider.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/rebase/rebase.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/settings/settings.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SettingsApp",
          "members": [
            {
              "kind": "field",
              "name": "_scopes",
              "type": {
                "text": "HTMLSelectElement | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "_observer",
              "type": {
                "text": "IntersectionObserver | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_activeSection",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private",
              "default": "'general'"
            },
            {
              "kind": "field",
              "name": "_changes",
              "privacy": "private",
              "default": "Object.create(null)"
            },
            {
              "kind": "field",
              "name": "_sections",
              "privacy": "private",
              "default": "new Map<string, boolean>()"
            },
            {
              "kind": "field",
              "name": "_updating",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "method",
              "name": "onInitialize",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "onBind",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Disposable[]"
                }
              },
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "onMessageReceived",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "IpcMessage"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "applyChanges",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "getSettingsScope",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "'user' | 'workspace'"
                }
              }
            },
            {
              "kind": "method",
              "name": "onInputBlurred",
              "privacy": "private",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLInputElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onButtonClicked",
              "privacy": "private",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLButtonElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onInputChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLInputElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onInputChecked",
              "privacy": "private",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLInputElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onInputFocused",
              "privacy": "private",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLInputElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onInputSelected",
              "privacy": "private",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLSelectElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onTokenMouseDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "scrollToAnchor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "anchor",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "behavior",
                  "type": {
                    "text": "ScrollBehavior"
                  }
                },
                {
                  "name": "offset",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_scrollTimer",
              "type": {
                "text": "ReturnType<typeof setTimeout> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "scrollTo",
              "privacy": "private",
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "behavior",
                  "type": {
                    "text": "ScrollBehavior"
                  }
                },
                {
                  "name": "offset",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "evaluateStateExpression",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "expression",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "changes",
                  "type": {
                    "text": "Record<string, string | boolean>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getCustomSettingValue",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean | undefined"
                }
              },
              "parameters": [
                {
                  "name": "path",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSettingValue",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "T | undefined"
                }
              },
              "parameters": [
                {
                  "name": "path",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateState",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setAdditionalSettings",
              "privacy": "private",
              "parameters": [
                {
                  "name": "expression",
                  "type": {
                    "text": "string | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setEnablement",
              "privacy": "private",
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "Record<string, string | boolean>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setVisibility",
              "privacy": "private",
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "Record<string, string | boolean>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updatePreview",
              "privacy": "private",
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "HTMLSpanElement"
                  }
                },
                {
                  "name": "value",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onObserver",
              "privacy": "private",
              "parameters": [
                {
                  "name": "entries",
                  "type": {
                    "text": "IntersectionObserverEntry[]"
                  }
                },
                {
                  "name": "_observer",
                  "type": {
                    "text": "IntersectionObserver"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onActionLinkClicked",
              "privacy": "private",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onJumpToLinkClicked",
              "privacy": "private",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLAnchorElement"
                  }
                },
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onSectionHeaderClicked",
              "privacy": "private",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onSettingExpanderCicked",
              "privacy": "private",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "_e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "toggleJumpLink",
              "privacy": "private",
              "parameters": [
                {
                  "name": "anchor",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "active",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderAutolinkIntegration",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderAutolinks",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_api",
              "type": {
                "text": "HostIpcApi"
              },
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "_hostIpc",
              "type": {
                "text": "HostIpc"
              },
              "privacy": "private",
              "readonly": true,
              "default": "new HostIpc(this.appName)",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "_logger",
              "type": {
                "text": "LoggerContext"
              },
              "privacy": "private",
              "readonly": true,
              "default": "new LoggerContext(appName)",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "_promos",
              "type": {
                "text": "PromosContext"
              },
              "privacy": "private",
              "readonly": true,
              "default": "new PromosContext(this._hostIpc)",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "_telemetry",
              "type": {
                "text": "TelemetryContext"
              },
              "privacy": "protected",
              "readonly": true,
              "default": "new TelemetryContext(this._hostIpc)",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "State"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "'editor' | 'view'"
              },
              "privacy": "protected",
              "readonly": true,
              "default": "(document.body.getAttribute('data-placement') ?? 'editor')",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "onInitialized",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "onThemeUpdated",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "ThemeChangeEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "_focused",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "_inputFocused",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "bindDisposables",
              "type": {
                "text": "Disposable[] | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "bind",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "log",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "optionalParams",
                  "type": {
                    "text": "any[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "getState",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "State | undefined"
                }
              },
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "sendCommand",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "command",
                  "type": {
                    "text": "TCommand"
                  }
                },
                {
                  "name": "params",
                  "type": {
                    "text": "IpcCallParamsType<TCommand>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "sendRequest",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<IpcCallResponseParamsType<T>>"
                }
              },
              "parameters": [
                {
                  "name": "requestType",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "params",
                  "type": {
                    "text": "IpcCallParamsType<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "setState",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "Partial<State>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "bootstrap",
              "default": "undefined",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            }
          ],
          "superclass": {
            "name": "App",
            "module": "/src/webviews/apps/shared/appBase"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SettingsApp",
          "declaration": {
            "name": "SettingsApp",
            "module": "src/webviews/apps/settings/settings.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/appBase.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "App",
          "members": [
            {
              "kind": "field",
              "name": "_api",
              "type": {
                "text": "HostIpcApi"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_hostIpc",
              "type": {
                "text": "HostIpc"
              },
              "privacy": "private",
              "readonly": true,
              "default": "new HostIpc(this.appName)"
            },
            {
              "kind": "field",
              "name": "_logger",
              "type": {
                "text": "LoggerContext"
              },
              "privacy": "private",
              "readonly": true,
              "default": "new LoggerContext(appName)"
            },
            {
              "kind": "field",
              "name": "_promos",
              "type": {
                "text": "PromosContext"
              },
              "privacy": "private",
              "readonly": true,
              "default": "new PromosContext(this._hostIpc)"
            },
            {
              "kind": "field",
              "name": "_telemetry",
              "type": {
                "text": "TelemetryContext"
              },
              "privacy": "protected",
              "readonly": true,
              "default": "new TelemetryContext(this._hostIpc)"
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "State"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "'editor' | 'view'"
              },
              "privacy": "protected",
              "readonly": true,
              "default": "(document.body.getAttribute('data-placement') ?? 'editor')"
            },
            {
              "kind": "method",
              "name": "onInitialize",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "onBind",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Disposable[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "onInitialized",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "onMessageReceived",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "IpcMessage"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onThemeUpdated",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "ThemeChangeEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_focused",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_inputFocused",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "bindDisposables",
              "type": {
                "text": "Disposable[] | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "bind",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "log",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "optionalParams",
                  "type": {
                    "text": "any[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "log",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "scope",
                  "type": {
                    "text": "LogScope | undefined"
                  }
                },
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "optionalParams",
                  "type": {
                    "text": "any[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "log",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "scopeOrMessage",
                  "type": {
                    "text": "LogScope | string | undefined"
                  }
                },
                {
                  "name": "optionalParams",
                  "type": {
                    "text": "any[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getState",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "State | undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "sendCommand",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "command",
                  "type": {
                    "text": "TCommand"
                  }
                },
                {
                  "name": "params",
                  "type": {
                    "text": "IpcCallParamsType<TCommand>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "sendRequest",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<IpcCallResponseParamsType<T>>"
                }
              },
              "parameters": [
                {
                  "name": "requestType",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "params",
                  "type": {
                    "text": "IpcCallParamsType<T>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setState",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "Partial<State>"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "bootstrap",
              "default": "undefined"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "App",
          "declaration": {
            "name": "App",
            "module": "src/webviews/apps/shared/appBase.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/appHost.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlAppHost",
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "'editor' | 'view'"
              },
              "default": "'editor'",
              "attribute": "placement"
            },
            {
              "kind": "field",
              "name": "_ipc",
              "type": {
                "text": "HostIpc"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_logger",
              "type": {
                "text": "LoggerContext"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_promos",
              "type": {
                "text": "PromosContext"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_telemetry",
              "type": {
                "text": "TelemetryContext"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "bootstrap",
              "type": {
                "text": "State"
              },
              "privacy": "private",
              "attribute": "bootstrap"
            },
            {
              "kind": "method",
              "name": "onThemeUpdated",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "ThemeChangeEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "State"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "disposables",
              "type": {
                "text": "Disposable[]"
              },
              "privacy": "protected",
              "readonly": true,
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_focused",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_inputFocused",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_sendWebviewFocusChangedCommandDebounced",
              "type": {
                "text": "Deferrable<(params: WebviewFocusChangedParams) => void>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_stateProvider",
              "type": {
                "text": "StateProvider<State>"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "createStateProvider",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "StateProvider<State>"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "State"
                  }
                },
                {
                  "name": "ipc",
                  "type": {
                    "text": "HostIpc"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onPersistState",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "State"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onWebviewFocusChanged",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "focused",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onWebviewVisibilityChanged",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "visible",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "onFocusIn",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onFocusOut",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "fieldName": "name"
            },
            {
              "name": "placement",
              "type": {
                "text": "'editor' | 'view'"
              },
              "default": "'editor'",
              "fieldName": "placement"
            },
            {
              "name": "bootstrap",
              "type": {
                "text": "State"
              },
              "fieldName": "bootstrap"
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlAppHost",
          "declaration": {
            "name": "GlAppHost",
            "module": "src/webviews/apps/shared/appHost.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/date.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "../../../system/date"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/dom.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "on",
          "return": {
            "type": {
              "text": "Disposable"
            }
          },
          "parameters": [
            {
              "name": "window",
              "type": {
                "text": "Window"
              }
            },
            {
              "name": "name",
              "type": {
                "text": "K"
              }
            },
            {
              "name": "listener",
              "type": {
                "text": "(e: WindowEventMap[K], target: Window) => void"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "text": "boolean | AddEventListenerOptions"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "on",
          "return": {
            "type": {
              "text": "Disposable"
            }
          },
          "parameters": [
            {
              "name": "document",
              "type": {
                "text": "Document"
              }
            },
            {
              "name": "name",
              "type": {
                "text": "K"
              }
            },
            {
              "name": "listener",
              "type": {
                "text": "(e: DocumentEventMap[K], target: Document) => void"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "text": "boolean | AddEventListenerOptions"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "on",
          "return": {
            "type": {
              "text": "Disposable"
            }
          },
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "T"
              }
            },
            {
              "name": "name",
              "type": {
                "text": "K"
              }
            },
            {
              "name": "listener",
              "type": {
                "text": "(e: DocumentEventMap[K] & { target: HTMLElement | null }, target: T) => void"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "text": "boolean | AddEventListenerOptions"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "on",
          "return": {
            "type": {
              "text": "Disposable"
            }
          },
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "T"
              }
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "listener",
              "type": {
                "text": "(e: CustomEvent<K> & { target: HTMLElement | null }, target: T) => void"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "text": "boolean | AddEventListenerOptions"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "on",
          "return": {
            "type": {
              "text": "Disposable"
            }
          },
          "parameters": [
            {
              "name": "selector",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "name",
              "type": {
                "text": "K"
              }
            },
            {
              "name": "listener",
              "type": {
                "text": "(e: DocumentEventMap[K] & { target: HTMLElement | null }, target: T) => void"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "text": "boolean | AddEventListenerOptions"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "on",
          "return": {
            "type": {
              "text": "Disposable"
            }
          },
          "parameters": [
            {
              "name": "selector",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "listener",
              "type": {
                "text": "(e: CustomEvent<K> & { target: HTMLElement | null }, target: T) => void"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "text": "boolean | AddEventListenerOptions"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "on",
          "return": {
            "type": {
              "text": "Disposable"
            }
          },
          "parameters": [
            {
              "name": "sourceOrSelector",
              "type": {
                "text": "string | Window | Document | Element"
              }
            },
            {
              "name": "name",
              "type": {
                "text": "K"
              }
            },
            {
              "name": "listener",
              "type": {
                "text": "(e: (DocumentEventMap | WindowEventMap)[K] | CustomEvent<K>, target: T) => void"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "text": "boolean | AddEventListenerOptions"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "parseDuration",
          "return": {
            "type": {
              "text": "number"
            }
          },
          "parameters": [
            {
              "name": "delay",
              "type": {
                "text": "number | string"
              }
            }
          ],
          "description": "Parses a CSS duration and returns the number of milliseconds."
        },
        {
          "kind": "function",
          "name": "waitForEvent",
          "return": {
            "type": {
              "text": "Promise<void>"
            }
          },
          "parameters": [
            {
              "name": "el",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "eventName",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Waits for a specific event to be emitted from an element. Ignores events that bubble up from child elements."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "on",
          "declaration": {
            "name": "on",
            "module": "src/webviews/apps/shared/dom.ts"
          }
        },
        {
          "kind": "js",
          "name": "on",
          "declaration": {
            "name": "on",
            "module": "src/webviews/apps/shared/dom.ts"
          }
        },
        {
          "kind": "js",
          "name": "on",
          "declaration": {
            "name": "on",
            "module": "src/webviews/apps/shared/dom.ts"
          }
        },
        {
          "kind": "js",
          "name": "on",
          "declaration": {
            "name": "on",
            "module": "src/webviews/apps/shared/dom.ts"
          }
        },
        {
          "kind": "js",
          "name": "on",
          "declaration": {
            "name": "on",
            "module": "src/webviews/apps/shared/dom.ts"
          }
        },
        {
          "kind": "js",
          "name": "on",
          "declaration": {
            "name": "on",
            "module": "src/webviews/apps/shared/dom.ts"
          }
        },
        {
          "kind": "js",
          "name": "on",
          "declaration": {
            "name": "on",
            "module": "src/webviews/apps/shared/dom.ts"
          }
        },
        {
          "kind": "js",
          "name": "parseDuration",
          "declaration": {
            "name": "parseDuration",
            "module": "src/webviews/apps/shared/dom.ts"
          }
        },
        {
          "kind": "js",
          "name": "waitForEvent",
          "declaration": {
            "name": "waitForEvent",
            "module": "src/webviews/apps/shared/dom.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/events.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Emitter",
          "members": [
            {
              "kind": "field",
              "name": "_noop",
              "privacy": "private",
              "static": true,
              "readonly": true,
              "default": "function (this: void) { /* noop */ }"
            },
            {
              "kind": "field",
              "name": "_disposed",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_event",
              "type": {
                "text": "Event<T> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_deliveryQueue",
              "type": {
                "text": "LinkedList<[Listener<T>, T]> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "listeners",
              "type": {
                "text": "LinkedList<Listener<T>> | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "event",
              "type": {
                "text": "Event<T>"
              },
              "description": "For the public to allow to subscribe\nto events from this Emitter",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "fire",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "T"
                  }
                }
              ],
              "description": "To be kept private to fire an event to\nsubscribers"
            },
            {
              "kind": "method",
              "name": "dispose",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Emitter",
          "declaration": {
            "name": "Emitter",
            "module": "src/webviews/apps/shared/events.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/git-utils.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "getRemoteNameSlashIndex",
          "return": {
            "type": {
              "text": "number"
            }
          },
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getBranchNameWithoutRemote",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getRemoteNameFromBranchName",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isRevisionRange",
          "return": {
            "type": {
              "text": "ref is GitRevisionRange"
            }
          },
          "parameters": [
            {
              "name": "ref",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "name": "rangeType",
              "default": "'any'",
              "type": {
                "text": "'any' | 'qualified' | 'qualified-double-dot' | 'qualified-triple-dot'"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isShaParent",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "ref",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isStashReference",
          "return": {
            "type": {
              "text": "ref is GitStashReference"
            }
          },
          "parameters": [
            {
              "name": "ref",
              "type": {
                "text": "GitReference | undefined"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getReferenceLabel",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "refs",
              "type": {
                "text": "GitReference | undefined"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "text": "{ capitalize?: boolean; expand?: boolean; icon?: boolean; label?: boolean; quoted?: boolean } | false"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getRemoteNameSlashIndex",
          "declaration": {
            "name": "getRemoteNameSlashIndex",
            "module": "src/webviews/apps/shared/git-utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "getBranchNameWithoutRemote",
          "declaration": {
            "name": "getBranchNameWithoutRemote",
            "module": "src/webviews/apps/shared/git-utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "getRemoteNameFromBranchName",
          "declaration": {
            "name": "getRemoteNameFromBranchName",
            "module": "src/webviews/apps/shared/git-utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "isRevisionRange",
          "declaration": {
            "name": "isRevisionRange",
            "module": "src/webviews/apps/shared/git-utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "isShaParent",
          "declaration": {
            "name": "isShaParent",
            "module": "src/webviews/apps/shared/git-utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "isStashReference",
          "declaration": {
            "name": "isStashReference",
            "module": "src/webviews/apps/shared/git-utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "getReferenceLabel",
          "declaration": {
            "name": "getReferenceLabel",
            "module": "src/webviews/apps/shared/git-utils.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/ipc.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "getHostIpcApi",
          "return": {
            "type": {
              "text": "HostIpcApi"
            }
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "HostIpc",
          "members": [
            {
              "kind": "field",
              "name": "_onReceiveMessage",
              "privacy": "private",
              "default": "new Emitter<IpcMessage>()"
            },
            {
              "kind": "field",
              "name": "onReceiveMessage",
              "type": {
                "text": "Event<IpcMessage>"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_api",
              "type": {
                "text": "HostIpcApi"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_disposable",
              "type": {
                "text": "Disposable"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_pendingHandlers",
              "privacy": "private",
              "default": "new Map<string, PendingHandler>()"
            },
            {
              "kind": "field",
              "name": "_textDecoder",
              "type": {
                "text": "TextDecoder | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "dispose",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "onMessageReceived",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MessageEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "replaceIpcPromisesWithPromises",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "unknown"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "sendCommand",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "commandType",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "params",
                  "optional": true,
                  "type": {
                    "text": "never"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "sendCommand",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "commandType",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "params",
                  "type": {
                    "text": "IpcCallParamsType<T>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "sendCommand",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "commandType",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "params",
                  "optional": true,
                  "type": {
                    "text": "IpcCallParamsType<T>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "sendRequest",
              "return": {
                "type": {
                  "text": "Promise<IpcCallResponseParamsType<T>>"
                }
              },
              "parameters": [
                {
                  "name": "requestType",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "params",
                  "type": {
                    "text": "IpcCallParamsType<T>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getResponsePromise",
              "privacy": "private",
              "parameters": [
                {
                  "name": "method",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setPersistedState",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "Partial<T>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updatePersistedState",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "update",
                  "type": {
                    "text": "Partial<T>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "postMessage",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "IpcMessage"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "function",
          "name": "assertsSerialized",
          "return": {
            "type": {
              "text": "asserts obj is Serialized<T>"
            }
          },
          "parameters": [
            {
              "name": "obj",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getHostIpcApi",
          "declaration": {
            "name": "getHostIpcApi",
            "module": "src/webviews/apps/shared/ipc.ts"
          }
        },
        {
          "kind": "js",
          "name": "HostIpc",
          "declaration": {
            "name": "HostIpc",
            "module": "src/webviews/apps/shared/ipc.ts"
          }
        },
        {
          "kind": "js",
          "name": "assertsSerialized",
          "declaration": {
            "name": "assertsSerialized",
            "module": "src/webviews/apps/shared/ipc.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/telemetry.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "telemetryEventName",
          "type": {
            "text": "string"
          },
          "default": "'gl-telemetry-fired'"
        },
        {
          "kind": "function",
          "name": "emitTelemetrySentEvent",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "parameters": [
            {
              "name": "el",
              "type": {
                "text": "EventTarget"
              }
            },
            {
              "name": "params",
              "type": {
                "text": "TelemetrySendEventParams<T>"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "telemetryEventName",
          "declaration": {
            "name": "telemetryEventName",
            "module": "src/webviews/apps/shared/telemetry.ts"
          }
        },
        {
          "kind": "js",
          "name": "emitTelemetrySentEvent",
          "declaration": {
            "name": "emitTelemetrySentEvent",
            "module": "src/webviews/apps/shared/telemetry.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/theme.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "onDidChangeTheme",
          "type": {
            "text": "Event<ThemeChangeEvent>"
          }
        },
        {
          "kind": "function",
          "name": "computeThemeColors",
          "return": {
            "type": {
              "text": "ThemeChangeEvent"
            }
          },
          "parameters": [
            {
              "name": "mutations",
              "optional": true,
              "type": {
                "text": "MutationRecord[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "watchThemeColors",
          "return": {
            "type": {
              "text": "Disposable"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "onDidChangeTheme",
          "declaration": {
            "name": "onDidChangeTheme",
            "module": "src/webviews/apps/shared/theme.ts"
          }
        },
        {
          "kind": "js",
          "name": "computeThemeColors",
          "declaration": {
            "name": "computeThemeColors",
            "module": "src/webviews/apps/shared/theme.ts"
          }
        },
        {
          "kind": "js",
          "name": "watchThemeColors",
          "declaration": {
            "name": "watchThemeColors",
            "module": "src/webviews/apps/shared/theme.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/commitDetails/components/button.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "buttonStyles",
          "default": "css` .button-container { margin: 1rem auto 0; text-align: left; max-width: 30rem; transition: max-width 0.2s ease-out; } @media (min-width: 640px) { .button-container { max-width: 100%; } } .button-group { display: inline-flex; gap: 0.1rem; } .button-group--single { width: 100%; max-width: 30rem; } .button-group > *:not(:first-child), .button-group > *:not(:first-child) gl-button { border-top-left-radius: 0; border-bottom-left-radius: 0; } .button-group > *:not(:last-child), .button-group > *:not(:last-child) gl-button { border-top-right-radius: 0; border-bottom-right-radius: 0; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "buttonStyles",
          "declaration": {
            "name": "buttonStyles",
            "module": "src/webviews/apps/commitDetails/components/button.css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/commitDetails/components/commit-action.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "commitActionStyles",
          "default": "css` .commit-action { display: inline-flex; justify-content: center; align-items: center; height: 21px; border-radius: 0.25em; color: inherit; padding: 0.2rem; vertical-align: text-bottom; text-decoration: none; gap: 0.2rem; } .commit-action > * { pointer-events: none; } .commit-action:focus { outline: 1px solid var(--vscode-focusBorder); outline-offset: -1px; } .commit-action:hover { color: var(--vscode-foreground); text-decoration: none; } :host-context(.vscode-dark) .commit-action:hover, :host-context(.vscode-high-contrast:not(.vscode-high-contrast-light)) .commit-action:hover { background-color: var(--color-background--lighten-15); } :host-context(.vscode-light) .commit-action:hover, :host-context(.vscode-high-contrast-light) .commit-action:hover { background-color: var(--color-background--darken-15); } :host-context(.vscode-dark) .commit-action.is-active, :host-context(.vscode-high-contrast:not(.vscode-high-contrast-light)) .commit-action.is-active { background-color: var(--color-background--lighten-10); } :host-context(.vscode-light) .commit-action.is-active, :host-context(.vscode-high-contrast-light) .commit-action.is-active { background-color: var(--color-background--darken-10); } .commit-action.is-disabled { opacity: 0.5; pointer-events: none; } .commit-action.is-hidden { display: none; } .commit-action--emphasis-low:not(:hover, :focus, :active) { opacity: 0.5; } .pr--opened { color: var(--vscode-gitlens-openPullRequestIconColor); } .pr--closed { color: var(--vscode-gitlens-closedPullRequestIconColor); } .pr--merged { color: var(--vscode-gitlens-mergedPullRequestIconColor); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "commitActionStyles",
          "declaration": {
            "name": "commitActionStyles",
            "module": "src/webviews/apps/commitDetails/components/commit-action.css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/commitDetails/components/commit-details-app.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "uncommittedSha",
          "type": {
            "text": "string"
          },
          "default": "'0000000000000000000000000000000000000000'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "GlCommitDetailsApp",
          "members": [
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "Serialized<State> | undefined"
              },
              "attribute": "state"
            },
            {
              "kind": "field",
              "name": "explain",
              "type": {
                "text": "ExplainState | undefined"
              },
              "attribute": "explain"
            },
            {
              "kind": "field",
              "name": "generate",
              "type": {
                "text": "GenerateState | undefined"
              },
              "attribute": "generate"
            },
            {
              "kind": "field",
              "name": "draftState",
              "type": {
                "text": "DraftState"
              },
              "default": "{ inReview: false }"
            },
            {
              "kind": "field",
              "name": "isUncommitted",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "hasCommit",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "isStash",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "wipStatus",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "navigation",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_disposables",
              "type": {
                "text": "Disposable[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_hostIpc",
              "type": {
                "text": "HostIpc"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "indentPreference",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "16"
            },
            {
              "kind": "method",
              "name": "updateDocumentProperties",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onSuggestChanges",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CreatePatchEventDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onShowCodeSuggestion",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "{ id: string }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onMessageReceived",
              "privacy": "private",
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "IpcMessage"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderTopInspect",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderTopWip",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderRepoStatusContent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_isWip",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderWipTooltipContent",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderTopSection",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onDraftStateChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "inReview",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "silent",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "onBranchAction",
              "privacy": "private",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onCreatePatchFromWip",
              "privacy": "private",
              "parameters": [
                {
                  "name": "checked",
                  "default": "true",
                  "type": {
                    "text": "boolean | 'staged'"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onCommandClickedCore",
              "privacy": "private",
              "parameters": [
                {
                  "name": "action",
                  "optional": true,
                  "type": {
                    "text": "GlCommands | `command:${GlCommands}`"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onSwitchAiModel",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onExplainCommit",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onCreateGenerateTitle",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "CreatePatchMetadataEventDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onToggleFilesLayout",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onExpandedChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "WebviewPaneExpandedChangeEventDetail"
                  }
                },
                {
                  "name": "pane",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onNavigate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "direction",
                  "type": {
                    "text": "'back' | 'forward'"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onTogglePin",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onPickCommit",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onSearchCommit",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onSwitchMode",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "MouseEvent"
                  }
                },
                {
                  "name": "mode",
                  "type": {
                    "text": "Mode"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onOpenFileOnRemote",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "FileChangeListItemDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onOpenFile",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "FileChangeListItemDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onCompareFileWithWorking",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "FileChangeListItemDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onCompareFileWithPrevious",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "FileChangeListItemDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onFileMoreActions",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "FileChangeListItemDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onStageFile",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "FileChangeListItemDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onUnstageFile",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "FileChangeListItemDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onCommitActions",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<{ action: string; alt: boolean }>"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "state-changed",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "state",
              "type": {
                "text": "Serialized<State> | undefined"
              },
              "fieldName": "state"
            },
            {
              "name": "explain",
              "type": {
                "text": "ExplainState | undefined"
              },
              "fieldName": "explain"
            },
            {
              "name": "generate",
              "type": {
                "text": "GenerateState | undefined"
              },
              "fieldName": "generate"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-commit-details-app",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "uncommittedSha",
          "declaration": {
            "name": "uncommittedSha",
            "module": "src/webviews/apps/commitDetails/components/commit-details-app.ts"
          }
        },
        {
          "kind": "js",
          "name": "GlCommitDetailsApp",
          "declaration": {
            "name": "GlCommitDetailsApp",
            "module": "src/webviews/apps/commitDetails/components/commit-details-app.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-commit-details-app",
          "declaration": {
            "name": "GlCommitDetailsApp",
            "module": "src/webviews/apps/commitDetails/components/commit-details-app.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/commitDetails/components/gl-commit-details.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlCommitDetails",
          "members": [
            {
              "kind": "field",
              "name": "tab",
              "type": {
                "text": "'wip' | 'commit'"
              },
              "readonly": true,
              "default": "'commit'",
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "Serialized<State> | undefined"
              },
              "attribute": "state"
            },
            {
              "kind": "field",
              "name": "isStash",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "shortSha",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "explainBusy",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "explain",
              "type": {
                "text": "ExplainState | undefined"
              },
              "attribute": "explain"
            },
            {
              "kind": "field",
              "name": "navigation",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "renderEmptyContent",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderExplainChanges",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderCommitMessage",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "autolinkState",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "renderLearnAboutAutolinks",
              "privacy": "private",
              "parameters": [
                {
                  "name": "compact",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderAutoLinksChips",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onExplainChanges",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent | KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderCommitStats",
              "privacy": "private",
              "parameters": [
                {
                  "name": "stats",
                  "optional": true,
                  "type": {
                    "text": "NonNullable<NonNullable<typeof this.state>['commit']>['stats']"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getFileActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeItemAction[]"
                }
              },
              "parameters": [
                {
                  "name": "_file",
                  "type": {
                    "text": "File"
                  }
                },
                {
                  "name": "_options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "files",
              "type": {
                "text": "Files | undefined"
              },
              "attribute": "files",
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "isUncommitted",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "isUncommitted",
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "preferences",
              "type": {
                "text": "Preferences | undefined"
              },
              "attribute": "preferences",
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "emptyText",
              "type": {
                "text": "string"
              },
              "default": "'No Files'",
              "attribute": "empty-text",
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "fileLayout",
              "type": {
                "text": "ViewFilesLayout"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "isCompact",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "indentGuides",
              "type": {
                "text": "'none' | 'onHover' | 'always'"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "filesChangedPaneLabel",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderChangedFiles",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult<1>"
                }
              },
              "parameters": [
                {
                  "name": "mode",
                  "type": {
                    "text": "Mode"
                  }
                },
                {
                  "name": "subtitle",
                  "optional": true,
                  "type": {
                    "text": "TemplateResult<1>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onShareWipChanges",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "Event"
                  }
                },
                {
                  "name": "staged",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "hasFiles",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "isTree",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "count",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "createTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel[]"
                }
              },
              "parameters": [
                {
                  "name": "mode",
                  "type": {
                    "text": "Mode"
                  }
                },
                {
                  "name": "files",
                  "type": {
                    "text": "Files"
                  }
                },
                {
                  "name": "isTree",
                  "default": "false"
                },
                {
                  "name": "compact",
                  "default": "true"
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "sortChildren",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel[]"
                }
              },
              "parameters": [
                {
                  "name": "children",
                  "type": {
                    "text": "TreeModel[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "createFileTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel[]"
                }
              },
              "parameters": [
                {
                  "name": "_mode",
                  "type": {
                    "text": "Mode"
                  }
                },
                {
                  "name": "files",
                  "type": {
                    "text": "Files"
                  }
                },
                {
                  "name": "isTree",
                  "default": "false"
                },
                {
                  "name": "compact",
                  "default": "true"
                },
                {
                  "name": "options",
                  "default": "{ level: 1 }",
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "walkFileTree",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel"
                }
              },
              "parameters": [
                {
                  "name": "item",
                  "type": {
                    "text": "HierarchicalItem<File>"
                  }
                },
                {
                  "name": "options",
                  "default": "{ level: 1 }",
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "getStagedActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeItemAction[]"
                }
              },
              "parameters": [
                {
                  "name": "_options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "getUnstagedActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeItemAction[]"
                }
              },
              "parameters": [
                {
                  "name": "_options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "fileToTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel<File[]>"
                }
              },
              "parameters": [
                {
                  "name": "file",
                  "type": {
                    "text": "File"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                },
                {
                  "name": "flat",
                  "default": "false"
                },
                {
                  "name": "glue",
                  "default": "'/'"
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "folderToTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderTreeFileModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult<1>"
                }
              },
              "parameters": [
                {
                  "name": "treeModel",
                  "type": {
                    "text": "TreeModel[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onTreeItemActionClicked",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onTreeItemChecked",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "CustomEvent<TreeItemCheckedDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onTreeItemSelected",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemSelectionDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onCreatePatch",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                },
                {
                  "name": "isAll",
                  "default": "false"
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onOpenFile",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onOpenFileOnRemote",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onCompareWorking",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onComparePrevious",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemSelectionDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onMoreActions",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onStageFile",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onUnstageFile",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "getEventDetail",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "FileChangeListItemDetail"
                }
              },
              "parameters": [
                {
                  "name": "file",
                  "type": {
                    "text": "File"
                  }
                },
                {
                  "name": "showOptions",
                  "optional": true,
                  "type": {
                    "text": "TextDocumentShowOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "state",
              "type": {
                "text": "Serialized<State> | undefined"
              },
              "fieldName": "state"
            },
            {
              "name": "explain",
              "type": {
                "text": "ExplainState | undefined"
              },
              "fieldName": "explain"
            },
            {
              "name": "files",
              "type": {
                "text": "Files | undefined"
              },
              "fieldName": "files",
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "name": "isUncommitted",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "isUncommitted",
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "name": "preferences",
              "type": {
                "text": "Preferences | undefined"
              },
              "fieldName": "preferences",
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "name": "empty-text",
              "type": {
                "text": "string"
              },
              "default": "'No Files'",
              "fieldName": "emptyText",
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            }
          ],
          "superclass": {
            "name": "GlDetailsBase",
            "module": "/src/webviews/apps/commitDetails/components/gl-details-base"
          },
          "tagName": "gl-commit-details",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlCommitDetails",
          "declaration": {
            "name": "GlCommitDetails",
            "module": "src/webviews/apps/commitDetails/components/gl-commit-details.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-commit-details",
          "declaration": {
            "name": "GlCommitDetails",
            "module": "src/webviews/apps/commitDetails/components/gl-commit-details.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/commitDetails/components/gl-details-base.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlDetailsBase",
          "members": [
            {
              "kind": "field",
              "name": "tab",
              "type": {
                "text": "'wip' | 'commit'"
              },
              "readonly": true,
              "default": "'commit'"
            },
            {
              "kind": "field",
              "name": "files",
              "type": {
                "text": "Files | undefined"
              },
              "attribute": "files"
            },
            {
              "kind": "field",
              "name": "isUncommitted",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "isUncommitted"
            },
            {
              "kind": "field",
              "name": "preferences",
              "type": {
                "text": "Preferences | undefined"
              },
              "attribute": "preferences"
            },
            {
              "kind": "field",
              "name": "emptyText",
              "type": {
                "text": "string"
              },
              "default": "'No Files'",
              "attribute": "empty-text"
            },
            {
              "kind": "field",
              "name": "fileLayout",
              "type": {
                "text": "ViewFilesLayout"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "isCompact",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "indentGuides",
              "type": {
                "text": "'none' | 'onHover' | 'always'"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "filesChangedPaneLabel",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "renderChangedFiles",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult<1>"
                }
              },
              "parameters": [
                {
                  "name": "mode",
                  "type": {
                    "text": "Mode"
                  }
                },
                {
                  "name": "subtitle",
                  "optional": true,
                  "type": {
                    "text": "TemplateResult<1>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onShareWipChanges",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "Event"
                  }
                },
                {
                  "name": "staged",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "hasFiles",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "isTree",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "count",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "createTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel[]"
                }
              },
              "parameters": [
                {
                  "name": "mode",
                  "type": {
                    "text": "Mode"
                  }
                },
                {
                  "name": "files",
                  "type": {
                    "text": "Files"
                  }
                },
                {
                  "name": "isTree",
                  "default": "false"
                },
                {
                  "name": "compact",
                  "default": "true"
                }
              ]
            },
            {
              "kind": "method",
              "name": "sortChildren",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel[]"
                }
              },
              "parameters": [
                {
                  "name": "children",
                  "type": {
                    "text": "TreeModel[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "createFileTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel[]"
                }
              },
              "parameters": [
                {
                  "name": "_mode",
                  "type": {
                    "text": "Mode"
                  }
                },
                {
                  "name": "files",
                  "type": {
                    "text": "Files"
                  }
                },
                {
                  "name": "isTree",
                  "default": "false"
                },
                {
                  "name": "compact",
                  "default": "true"
                },
                {
                  "name": "options",
                  "default": "{ level: 1 }",
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "walkFileTree",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel"
                }
              },
              "parameters": [
                {
                  "name": "item",
                  "type": {
                    "text": "HierarchicalItem<File>"
                  }
                },
                {
                  "name": "options",
                  "default": "{ level: 1 }",
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getStagedActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeItemAction[]"
                }
              },
              "parameters": [
                {
                  "name": "_options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getUnstagedActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeItemAction[]"
                }
              },
              "parameters": [
                {
                  "name": "_options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getFileActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeItemAction[]"
                }
              },
              "parameters": [
                {
                  "name": "_file",
                  "type": {
                    "text": "File"
                  }
                },
                {
                  "name": "_options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "fileToTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel<File[]>"
                }
              },
              "parameters": [
                {
                  "name": "file",
                  "type": {
                    "text": "File"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                },
                {
                  "name": "flat",
                  "default": "false"
                },
                {
                  "name": "glue",
                  "default": "'/'"
                }
              ]
            },
            {
              "kind": "method",
              "name": "folderToTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderTreeFileModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult<1>"
                }
              },
              "parameters": [
                {
                  "name": "treeModel",
                  "type": {
                    "text": "TreeModel[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onTreeItemActionClicked",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onTreeItemChecked",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "CustomEvent<TreeItemCheckedDetail>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onTreeItemSelected",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemSelectionDetail>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onCreatePatch",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                },
                {
                  "name": "isAll",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "onOpenFile",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onOpenFileOnRemote",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onCompareWorking",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onComparePrevious",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemSelectionDetail>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onMoreActions",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onStageFile",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onUnstageFile",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getEventDetail",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "FileChangeListItemDetail"
                }
              },
              "parameters": [
                {
                  "name": "file",
                  "type": {
                    "text": "File"
                  }
                },
                {
                  "name": "showOptions",
                  "optional": true,
                  "type": {
                    "text": "TextDocumentShowOptions"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "files",
              "type": {
                "text": "Files | undefined"
              },
              "fieldName": "files"
            },
            {
              "name": "isUncommitted",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "isUncommitted"
            },
            {
              "name": "preferences",
              "type": {
                "text": "Preferences | undefined"
              },
              "fieldName": "preferences"
            },
            {
              "name": "empty-text",
              "type": {
                "text": "string"
              },
              "default": "'No Files'",
              "fieldName": "emptyText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlDetailsBase",
          "declaration": {
            "name": "GlDetailsBase",
            "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/commitDetails/components/gl-inspect-nav.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlInspectNav",
          "members": [
            {
              "kind": "field",
              "name": "pinned",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "pinned",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "uncommitted",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "uncommitted"
            },
            {
              "kind": "field",
              "name": "navigation",
              "type": {
                "text": "State['navigationStack'] | undefined"
              },
              "attribute": "navigation"
            },
            {
              "kind": "field",
              "name": "shortSha",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "shortSha"
            },
            {
              "kind": "field",
              "name": "stashNumber",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "stashNumber"
            },
            {
              "kind": "field",
              "name": "navigationState",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "handleAction",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "fireEvent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "detail",
                  "optional": true,
                  "type": {
                    "text": "Record<string, unknown>"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "pinned",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "pinned"
            },
            {
              "name": "uncommitted",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "uncommitted"
            },
            {
              "name": "navigation",
              "type": {
                "text": "State['navigationStack'] | undefined"
              },
              "fieldName": "navigation"
            },
            {
              "name": "shortSha",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "shortSha"
            },
            {
              "name": "stashNumber",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "stashNumber"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-inspect-nav",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlInspectNav",
          "declaration": {
            "name": "GlInspectNav",
            "module": "src/webviews/apps/commitDetails/components/gl-inspect-nav.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-inspect-nav",
          "declaration": {
            "name": "GlInspectNav",
            "module": "src/webviews/apps/commitDetails/components/gl-inspect-nav.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/commitDetails/components/gl-inspect-patch.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "InspectPatch",
          "members": [
            {
              "kind": "field",
              "name": "orgSettings",
              "type": {
                "text": "State['orgSettings'] | undefined"
              },
              "attribute": "orgSettings"
            },
            {
              "kind": "field",
              "name": "preferences",
              "type": {
                "text": "Preferences | undefined"
              },
              "attribute": "preferences"
            },
            {
              "kind": "field",
              "name": "generate",
              "type": {
                "text": "GenerateState | undefined"
              },
              "attribute": "generate"
            },
            {
              "kind": "field",
              "name": "createState",
              "type": {
                "text": "CreatePatchState | undefined"
              },
              "attribute": "createState"
            },
            {
              "kind": "field",
              "name": "patchCreateState",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "orgSettings",
              "type": {
                "text": "State['orgSettings'] | undefined"
              },
              "fieldName": "orgSettings"
            },
            {
              "name": "preferences",
              "type": {
                "text": "Preferences | undefined"
              },
              "fieldName": "preferences"
            },
            {
              "name": "generate",
              "type": {
                "text": "GenerateState | undefined"
              },
              "fieldName": "generate"
            },
            {
              "name": "createState",
              "type": {
                "text": "CreatePatchState | undefined"
              },
              "fieldName": "createState"
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          },
          "tagName": "gl-inspect-patch",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InspectPatch",
          "declaration": {
            "name": "InspectPatch",
            "module": "src/webviews/apps/commitDetails/components/gl-inspect-patch.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-inspect-patch",
          "declaration": {
            "name": "InspectPatch",
            "module": "src/webviews/apps/commitDetails/components/gl-inspect-patch.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/commitDetails/components/gl-status-nav.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlStatusNav",
          "members": [
            {
              "kind": "field",
              "name": "wip",
              "type": {
                "text": "State['wip'] | undefined"
              },
              "attribute": "wip"
            },
            {
              "kind": "field",
              "name": "preferences",
              "type": {
                "text": "State['preferences'] | undefined"
              },
              "attribute": "preferences"
            },
            {
              "kind": "method",
              "name": "handleAction",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                },
                {
                  "name": "action",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "gl-branch-action",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "wip",
              "type": {
                "text": "State['wip'] | undefined"
              },
              "fieldName": "wip"
            },
            {
              "name": "preferences",
              "type": {
                "text": "State['preferences'] | undefined"
              },
              "fieldName": "preferences"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-status-nav",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlStatusNav",
          "declaration": {
            "name": "GlStatusNav",
            "module": "src/webviews/apps/commitDetails/components/gl-status-nav.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-status-nav",
          "declaration": {
            "name": "GlStatusNav",
            "module": "src/webviews/apps/commitDetails/components/gl-status-nav.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/commitDetails/components/gl-wip-details.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlWipDetails",
          "members": [
            {
              "kind": "field",
              "name": "tab",
              "type": {
                "text": "'wip' | 'commit'"
              },
              "readonly": true,
              "default": "'wip'",
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "wip",
              "type": {
                "text": "Wip | undefined"
              },
              "attribute": "wip"
            },
            {
              "kind": "field",
              "name": "orgSettings",
              "type": {
                "text": "State['orgSettings'] | undefined"
              },
              "attribute": "orgSettings"
            },
            {
              "kind": "field",
              "name": "draftState",
              "type": {
                "text": "DraftState | undefined"
              },
              "attribute": "draftState"
            },
            {
              "kind": "field",
              "name": "generate",
              "type": {
                "text": "GenerateState | undefined"
              },
              "attribute": "generate"
            },
            {
              "kind": "field",
              "name": "inReview",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "isUnpublished",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "draftsEnabled",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "filesCount",
              "type": {
                "text": "number"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "branchState",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "patchCreateMetadata",
              "type": {
                "text": "{ title: string | undefined; description: string | undefined }"
              },
              "default": "{ title: undefined, description: undefined, }"
            },
            {
              "kind": "field",
              "name": "patchCreateState",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "codeSuggestions",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "filesChangedPaneLabel",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderSecondaryAction",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderPrimaryAction",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderActions",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderSuggestedChanges",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderPullRequest",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderIncomingOutgoing",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderPatchCreation",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "getFileActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeItemAction[]"
                }
              },
              "parameters": [
                {
                  "name": "file",
                  "type": {
                    "text": "File"
                  }
                },
                {
                  "name": "_options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onDataActionClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onToggleReviewMode",
              "privacy": "private",
              "parameters": [
                {
                  "name": "inReview",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onShowCodeSuggestion",
              "privacy": "private",
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "files",
              "type": {
                "text": "Files | undefined"
              },
              "attribute": "files",
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "isUncommitted",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "isUncommitted",
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "preferences",
              "type": {
                "text": "Preferences | undefined"
              },
              "attribute": "preferences",
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "emptyText",
              "type": {
                "text": "string"
              },
              "default": "'No Files'",
              "attribute": "empty-text",
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "fileLayout",
              "type": {
                "text": "ViewFilesLayout"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "isCompact",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "indentGuides",
              "type": {
                "text": "'none' | 'onHover' | 'always'"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderChangedFiles",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult<1>"
                }
              },
              "parameters": [
                {
                  "name": "mode",
                  "type": {
                    "text": "Mode"
                  }
                },
                {
                  "name": "subtitle",
                  "optional": true,
                  "type": {
                    "text": "TemplateResult<1>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onShareWipChanges",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "Event"
                  }
                },
                {
                  "name": "staged",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "hasFiles",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "isTree",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "count",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "createTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel[]"
                }
              },
              "parameters": [
                {
                  "name": "mode",
                  "type": {
                    "text": "Mode"
                  }
                },
                {
                  "name": "files",
                  "type": {
                    "text": "Files"
                  }
                },
                {
                  "name": "isTree",
                  "default": "false"
                },
                {
                  "name": "compact",
                  "default": "true"
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "sortChildren",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel[]"
                }
              },
              "parameters": [
                {
                  "name": "children",
                  "type": {
                    "text": "TreeModel[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "createFileTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel[]"
                }
              },
              "parameters": [
                {
                  "name": "_mode",
                  "type": {
                    "text": "Mode"
                  }
                },
                {
                  "name": "files",
                  "type": {
                    "text": "Files"
                  }
                },
                {
                  "name": "isTree",
                  "default": "false"
                },
                {
                  "name": "compact",
                  "default": "true"
                },
                {
                  "name": "options",
                  "default": "{ level: 1 }",
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "walkFileTree",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel"
                }
              },
              "parameters": [
                {
                  "name": "item",
                  "type": {
                    "text": "HierarchicalItem<File>"
                  }
                },
                {
                  "name": "options",
                  "default": "{ level: 1 }",
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "getStagedActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeItemAction[]"
                }
              },
              "parameters": [
                {
                  "name": "_options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "getUnstagedActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeItemAction[]"
                }
              },
              "parameters": [
                {
                  "name": "_options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "fileToTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel<File[]>"
                }
              },
              "parameters": [
                {
                  "name": "file",
                  "type": {
                    "text": "File"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                },
                {
                  "name": "flat",
                  "default": "false"
                },
                {
                  "name": "glue",
                  "default": "'/'"
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "folderToTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderTreeFileModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult<1>"
                }
              },
              "parameters": [
                {
                  "name": "treeModel",
                  "type": {
                    "text": "TreeModel[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onTreeItemActionClicked",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onTreeItemChecked",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "CustomEvent<TreeItemCheckedDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onTreeItemSelected",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemSelectionDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onCreatePatch",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                },
                {
                  "name": "isAll",
                  "default": "false"
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onOpenFile",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onOpenFileOnRemote",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onCompareWorking",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onComparePrevious",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemSelectionDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onMoreActions",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onStageFile",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onUnstageFile",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "getEventDetail",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "FileChangeListItemDetail"
                }
              },
              "parameters": [
                {
                  "name": "file",
                  "type": {
                    "text": "File"
                  }
                },
                {
                  "name": "showOptions",
                  "optional": true,
                  "type": {
                    "text": "TextDocumentShowOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            }
          ],
          "events": [
            {
              "name": "gl-inspect-create-suggestions",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "data-action",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "draft-state-changed",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "gl-show-code-suggestion",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "wip",
              "type": {
                "text": "Wip | undefined"
              },
              "fieldName": "wip"
            },
            {
              "name": "orgSettings",
              "type": {
                "text": "State['orgSettings'] | undefined"
              },
              "fieldName": "orgSettings"
            },
            {
              "name": "draftState",
              "type": {
                "text": "DraftState | undefined"
              },
              "fieldName": "draftState"
            },
            {
              "name": "generate",
              "type": {
                "text": "GenerateState | undefined"
              },
              "fieldName": "generate"
            },
            {
              "name": "files",
              "type": {
                "text": "Files | undefined"
              },
              "fieldName": "files",
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "name": "isUncommitted",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "isUncommitted",
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "name": "preferences",
              "type": {
                "text": "Preferences | undefined"
              },
              "fieldName": "preferences",
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            },
            {
              "name": "empty-text",
              "type": {
                "text": "string"
              },
              "default": "'No Files'",
              "fieldName": "emptyText",
              "inheritedFrom": {
                "name": "GlDetailsBase",
                "module": "src/webviews/apps/commitDetails/components/gl-details-base.ts"
              }
            }
          ],
          "superclass": {
            "name": "GlDetailsBase",
            "module": "/src/webviews/apps/commitDetails/components/gl-details-base"
          },
          "tagName": "gl-wip-details",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlWipDetails",
          "declaration": {
            "name": "GlWipDetails",
            "module": "src/webviews/apps/commitDetails/components/gl-wip-details.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-wip-details",
          "declaration": {
            "name": "GlWipDetails",
            "module": "src/webviews/apps/commitDetails/components/gl-wip-details.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/home/components/ama-banner.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlAmaBanner",
          "members": [
            {
              "kind": "field",
              "name": "_state",
              "type": {
                "text": "State"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_ipc",
              "type": {
                "text": "HostIpc"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "closed",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "method",
              "name": "onClose",
              "privacy": "private"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-ama-banner",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlAmaBanner",
          "declaration": {
            "name": "GlAmaBanner",
            "module": "src/webviews/apps/home/components/ama-banner.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-ama-banner",
          "declaration": {
            "name": "GlAmaBanner",
            "module": "src/webviews/apps/home/components/ama-banner.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/home/components/feature-nav.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlFeatureNav",
          "members": [
            {
              "kind": "field",
              "name": "badgeSource",
              "type": {
                "text": "Source"
              },
              "privacy": "private",
              "default": "{ source: 'home', detail: 'badge' }",
              "attribute": "badgeSource"
            },
            {
              "kind": "field",
              "name": "_state",
              "type": {
                "text": "State"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "orgAllowsDrafts",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "blockRepoFeatures",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "onRepoFeatureClicked",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "badgeSource",
              "type": {
                "text": "Source"
              },
              "default": "{ source: 'home', detail: 'badge' }",
              "fieldName": "badgeSource"
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          },
          "tagName": "gl-feature-nav",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlFeatureNav",
          "declaration": {
            "name": "GlFeatureNav",
            "module": "src/webviews/apps/home/components/feature-nav.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-feature-nav",
          "declaration": {
            "name": "GlFeatureNav",
            "module": "src/webviews/apps/home/components/feature-nav.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/home/components/integration-banner.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "integrationBannerTagName",
          "type": {
            "text": "string"
          },
          "default": "'gl-integration-banner'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "GlIntegrationBanner",
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }"
            },
            {
              "kind": "field",
              "name": "_state",
              "type": {
                "text": "State"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_ipc",
              "type": {
                "text": "HostIpc"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "closed",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_button",
              "type": {
                "text": "GlButton"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onClose",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "focus",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "integrationBannerTagName",
          "declaration": {
            "name": "integrationBannerTagName",
            "module": "src/webviews/apps/home/components/integration-banner.ts"
          }
        },
        {
          "kind": "js",
          "name": "GlIntegrationBanner",
          "declaration": {
            "name": "GlIntegrationBanner",
            "module": "src/webviews/apps/home/components/integration-banner.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "GlIntegrationBanner",
            "module": "src/webviews/apps/home/components/integration-banner.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/home/components/onboarding.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlOnboarding",
          "members": [
            {
              "kind": "field",
              "name": "_state",
              "type": {
                "text": "State"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_ipc",
              "type": {
                "text": "HostIpc"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onDismissWalkthrough",
              "privacy": "private"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-onboarding",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlOnboarding",
          "declaration": {
            "name": "GlOnboarding",
            "module": "src/webviews/apps/home/components/onboarding.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-onboarding",
          "declaration": {
            "name": "GlOnboarding",
            "module": "src/webviews/apps/home/components/onboarding.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/home/components/preview-banner.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "previewBannerTagName",
          "type": {
            "text": "string"
          },
          "default": "'gl-preview-banner'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "GlPreviewBanner",
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }"
            },
            {
              "kind": "field",
              "name": "_state",
              "type": {
                "text": "State"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_ipc",
              "type": {
                "text": "HostIpc"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "closed",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_button",
              "type": {
                "text": "HTMLButtonElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "isNewInstall",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "togglePreview",
              "privacy": "private",
              "parameters": [
                {
                  "name": "dismiss",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "onClose",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "focus",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "previewBannerTagName",
          "declaration": {
            "name": "previewBannerTagName",
            "module": "src/webviews/apps/home/components/preview-banner.ts"
          }
        },
        {
          "kind": "js",
          "name": "GlPreviewBanner",
          "declaration": {
            "name": "GlPreviewBanner",
            "module": "src/webviews/apps/home/components/preview-banner.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "GlPreviewBanner",
            "module": "src/webviews/apps/home/components/preview-banner.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/home/components/promo-banner.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlPromoBanner",
          "members": [
            {
              "kind": "field",
              "name": "promos",
              "type": {
                "text": "PromosContext"
              },
              "privacy": "private"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-promo-banner",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlPromoBanner",
          "declaration": {
            "name": "GlPromoBanner",
            "module": "src/webviews/apps/home/components/promo-banner.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-promo-banner",
          "declaration": {
            "name": "GlPromoBanner",
            "module": "src/webviews/apps/home/components/promo-banner.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/home/components/repo-alerts.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlRepoAlerts",
          "members": [
            {
              "kind": "field",
              "name": "hasAlerts",
              "type": {
                "text": "boolean | undefined"
              },
              "readonly": true,
              "attribute": "has-alerts",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_state",
              "type": {
                "text": "State"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "alertVisibility",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "has-alerts",
              "type": {
                "text": "boolean | undefined"
              },
              "readonly": true,
              "fieldName": "hasAlerts"
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          },
          "tagName": "gl-repo-alerts",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlRepoAlerts",
          "declaration": {
            "name": "GlRepoAlerts",
            "module": "src/webviews/apps/home/components/repo-alerts.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-repo-alerts",
          "declaration": {
            "name": "GlRepoAlerts",
            "module": "src/webviews/apps/home/components/repo-alerts.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/patchDetails/patchDetails.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "uncommittedSha",
          "type": {
            "text": "string"
          },
          "default": "'0000000000000000000000000000000000000000'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "PatchDetailsApp",
          "members": [
            {
              "kind": "method",
              "name": "onInitialize",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "onBind",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Disposable[]"
                }
              },
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "onMessageReceived",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "msg",
                  "type": {
                    "text": "IpcMessage"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "onPatchChecked",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "PatchCheckedDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onCreateCheckRepo",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CreatePatchCheckRepositoryEventDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onCreateUpdateMetadata",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CreatePatchMetadataEventDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onCreateGenerateTitle",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "CreatePatchMetadataEventDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onDraftUpdateMetadata",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "{ visibility: DraftVisibility }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onDraftUpdatePermissions",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onShowPatchInGraph",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "ShowPatchInGraphDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onCreatePatch",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CreatePatchEventDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onShareLocalPatch",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onCopyCloudLink",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onModeClicked",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onApplyPatch",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "ApplyPatchDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onArchiveDraft",
              "privacy": "private",
              "parameters": [
                {
                  "name": "reason",
                  "optional": true,
                  "type": {
                    "text": "DraftReasonEventDetail['reason']"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onChangePatchBase",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "ChangePatchBaseDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onSelectPatchRepo",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "SelectPatchRepoDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onCommandClickedCore",
              "privacy": "private",
              "parameters": [
                {
                  "name": "action",
                  "optional": true,
                  "type": {
                    "text": "GlCommands | `command:${GlCommands}`"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onSwitchAIModel",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onAIExplain",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onToggleFilesLayout",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onInviteUsers",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onUpdateUserSelection",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CreatePatchUpdateSelectionEventDetail | PatchDetailsUpdateSelectionEventDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onOpenFileOnRemote",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "FileChangeListItemDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onOpenFile",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "FileChangeListItemDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onCompareFileWithWorking",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "FileChangeListItemDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onCompareFileWithPrevious",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "FileChangeListItemDetail"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onFileMoreActions",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "FileChangeListItemDetail"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_component",
              "type": {
                "text": "GlPatchDetailsApp | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "component",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "attachState",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_force",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "debouncedAttachState",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_api",
              "type": {
                "text": "HostIpcApi"
              },
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "_hostIpc",
              "type": {
                "text": "HostIpc"
              },
              "privacy": "private",
              "readonly": true,
              "default": "new HostIpc(this.appName)",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "_logger",
              "type": {
                "text": "LoggerContext"
              },
              "privacy": "private",
              "readonly": true,
              "default": "new LoggerContext(appName)",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "_promos",
              "type": {
                "text": "PromosContext"
              },
              "privacy": "private",
              "readonly": true,
              "default": "new PromosContext(this._hostIpc)",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "_telemetry",
              "type": {
                "text": "TelemetryContext"
              },
              "privacy": "protected",
              "readonly": true,
              "default": "new TelemetryContext(this._hostIpc)",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "State"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "'editor' | 'view'"
              },
              "privacy": "protected",
              "readonly": true,
              "default": "(document.body.getAttribute('data-placement') ?? 'editor')",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "onInitialized",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "onThemeUpdated",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "ThemeChangeEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "_focused",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "_inputFocused",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "bindDisposables",
              "type": {
                "text": "Disposable[] | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "bind",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "log",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "optionalParams",
                  "type": {
                    "text": "any[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "getState",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "State | undefined"
                }
              },
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "sendCommand",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "command",
                  "type": {
                    "text": "TCommand"
                  }
                },
                {
                  "name": "params",
                  "type": {
                    "text": "IpcCallParamsType<TCommand>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "sendRequest",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<IpcCallResponseParamsType<T>>"
                }
              },
              "parameters": [
                {
                  "name": "requestType",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "params",
                  "type": {
                    "text": "IpcCallParamsType<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "method",
              "name": "setState",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "Partial<State>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            },
            {
              "kind": "field",
              "name": "bootstrap",
              "default": "undefined",
              "inheritedFrom": {
                "name": "App",
                "module": "src/webviews/apps/shared/appBase.ts"
              }
            }
          ],
          "superclass": {
            "name": "App",
            "module": "/src/webviews/apps/shared/appBase"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "uncommittedSha",
          "declaration": {
            "name": "uncommittedSha",
            "module": "src/webviews/apps/plus/patchDetails/patchDetails.ts"
          }
        },
        {
          "kind": "js",
          "name": "PatchDetailsApp",
          "declaration": {
            "name": "PatchDetailsApp",
            "module": "src/webviews/apps/plus/patchDetails/patchDetails.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/graph/context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "stateContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "stateContext",
          "declaration": {
            "name": "stateContext",
            "module": "src/webviews/apps/plus/graph/context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/graph/gate.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlGraphGate",
          "members": [
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "State"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          },
          "tagName": "gl-graph-gate",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlGraphGate",
          "declaration": {
            "name": "GlGraphGate",
            "module": "src/webviews/apps/plus/graph/gate.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-graph-gate",
          "declaration": {
            "name": "GlGraphGate",
            "module": "src/webviews/apps/plus/graph/gate.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/graph/graph-app.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GraphApp",
          "members": [
            {
              "kind": "field",
              "name": "_hoverTrackingCounter",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_selectionTrackingCounter",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "typeof stateContext.__context__"
              }
            },
            {
              "kind": "field",
              "name": "graphApp",
              "type": {
                "text": "typeof graphStateContext.__context__"
              }
            },
            {
              "kind": "field",
              "name": "_ipc",
              "type": {
                "text": "typeof ipcContext.__context__"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_telemetry",
              "type": {
                "text": "TelemetryContext"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "graph",
              "type": {
                "text": "GlGraphWrapper"
              }
            },
            {
              "kind": "field",
              "name": "graphHover",
              "type": {
                "text": "GlGraphHover"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "minimapEl",
              "type": {
                "text": "GlGraphMinimapContainer | undefined"
              }
            },
            {
              "kind": "method",
              "name": "onWebviewVisibilityChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "visible",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "resetHover"
            },
            {
              "kind": "method",
              "name": "handleHeaderSearchNavigation",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEventType<'gl-select-commits'>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMinimapDaySelected",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<GraphMinimapDaySelectedEventDetail>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleGraphSelectionChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEventType<'gl-graph-change-selection'>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleGraphVisibleDaysChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "{ detail }",
                  "type": {
                    "text": "CustomEventType<'gl-graph-change-visible-days'>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleGraphRowContextMenu",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "CustomEventType<'gl-graph-row-context-menu'>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleGraphRowHover",
              "privacy": "private",
              "parameters": [
                {
                  "name": "{\n\t\tdetail: { graphZoneType, graphRow, clientX, currentTarget },\n\t}",
                  "type": {
                    "text": "CustomEventType<'gl-graph-row-hover'>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleGraphRowUnhover",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "{\n\t\tdetail: { graphZoneType, graphRow, relatedTarget },\n\t}",
                  "type": {
                    "text": "CustomEventType<'gl-graph-row-unhover'>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getRowHoverPromise",
              "privacy": "private",
              "parameters": [
                {
                  "name": "row",
                  "type": {
                    "text": "GraphRow"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleGraphMouseLeave",
              "privacy": "private"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@lit-labs/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-graph-app",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GraphApp",
          "declaration": {
            "name": "GraphApp",
            "module": "src/webviews/apps/plus/graph/graph-app.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-graph-app",
          "declaration": {
            "name": "GraphApp",
            "module": "src/webviews/apps/plus/graph/graph-app.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/graph/graph-header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlGraphHeader",
          "members": [
            {
              "kind": "field",
              "name": "_ipc",
              "type": {
                "text": "typeof ipcContext.__context__"
              }
            },
            {
              "kind": "field",
              "name": "_telemetry",
              "type": {
                "text": "TelemetryContext"
              }
            },
            {
              "kind": "field",
              "name": "hostState",
              "type": {
                "text": "typeof stateContext.__context__"
              }
            },
            {
              "kind": "field",
              "name": "appState",
              "type": {
                "text": "typeof graphStateContext.__context__"
              }
            },
            {
              "kind": "field",
              "name": "hasFilters",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "excludeRefs",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "onJumpToRefPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<{ name: string; sha: string } | undefined>"
                }
              },
              "parameters": [
                {
                  "name": "alt",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleJumpToRef",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onOpenPullRequest",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "pr",
                  "type": {
                    "text": "NonNullable<NonNullable<State['branchState']>['pr']>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onSearchOpenInView",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onExcludeTypesChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "keyof GraphExcludeTypes"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onRefIncludesChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "branchesVisibility",
                  "type": {
                    "text": "GraphBranchesVisibility"
                  }
                },
                {
                  "name": "refs",
                  "optional": true,
                  "type": {
                    "text": "GraphRefOptData[]"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_activeRowInfoCache",
              "type": {
                "text": "{ row: string; info: { date: number; id: string } } | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "getActiveRowInfo",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "{ date: number; id: string } | undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "getNextOrPreviousSearchResultIndex",
              "privacy": "private",
              "parameters": [
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "next",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "results",
                  "type": {
                    "text": "GraphSearchResults"
                  }
                },
                {
                  "name": "query",
                  "type": {
                    "text": "SearchQuery | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getClosestSearchResultIndex",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "{ index: number; id: string | undefined }"
                }
              },
              "parameters": [
                {
                  "name": "results",
                  "type": {
                    "text": "GraphSearchResults"
                  }
                },
                {
                  "name": "query",
                  "type": {
                    "text": "SearchQuery | undefined"
                  }
                },
                {
                  "name": "next",
                  "default": "true",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_searchPositionSignal",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "searchPosition",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "searchValid",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "handleFilterChange",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleOnToggleRefsVisibilityClick",
              "parameters": [
                {
                  "name": "_event",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "refs",
                  "type": {
                    "text": "GraphExcludedRef[]"
                  }
                },
                {
                  "name": "visible",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleBranchesVisibility",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSearch"
            },
            {
              "kind": "method",
              "name": "handleSearchInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<SearchQuery>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onSearchPromise",
              "privacy": "private",
              "parameters": [
                {
                  "name": "search",
                  "type": {
                    "text": "SearchQuery"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "{ limit?: number; more?: boolean }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSearchNavigation",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<SearchNavigationEventDetail>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onEnsureRowPromise",
              "privacy": "private",
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "select",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "ensuredIds",
              "privacy": "private",
              "readonly": true,
              "default": "new Set<string>()"
            },
            {
              "kind": "field",
              "name": "ensuredSkippedIds",
              "privacy": "private",
              "readonly": true,
              "default": "new Set<string>()"
            },
            {
              "kind": "field",
              "name": "pendingEnsureRequests",
              "privacy": "private",
              "readonly": true,
              "default": "new Map<string, Promise<string | undefined>>()"
            },
            {
              "kind": "method",
              "name": "ensureSearchResultRow",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<string | undefined>"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSearchModeChanged",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMinimapToggled"
            },
            {
              "kind": "method",
              "name": "changeGraphConfiguration",
              "privacy": "private",
              "parameters": [
                {
                  "name": "changes",
                  "type": {
                    "text": "UpdateGraphConfigurationParams['changes']"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMinimapDataTypeChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMinimapAdditionalTypesChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onRepositorySelectorClicked",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<RepoButtonGroupClickEvent>"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "searchEl",
              "type": {
                "text": "GlSearchBox"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "renderRemoteAvatarOrIcon",
              "privacy": "private",
              "parameters": [
                {
                  "name": "refOptData",
                  "type": {
                    "text": "GraphRefOptData"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "gl-select-commits",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@lit-labs/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-graph-header",
          "customElement": true
        },
        {
          "kind": "function",
          "name": "compareGraphRefOpts",
          "return": {
            "type": {
              "text": "number"
            }
          },
          "parameters": [
            {
              "name": "a",
              "type": {
                "text": "GraphRefOptData"
              }
            },
            {
              "name": "b",
              "type": {
                "text": "GraphRefOptData"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlGraphHeader",
          "declaration": {
            "name": "GlGraphHeader",
            "module": "src/webviews/apps/plus/graph/graph-header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-graph-header",
          "declaration": {
            "name": "GlGraphHeader",
            "module": "src/webviews/apps/plus/graph/graph-header.ts"
          }
        },
        {
          "kind": "js",
          "name": "compareGraphRefOpts",
          "declaration": {
            "name": "compareGraphRefOpts",
            "module": "src/webviews/apps/plus/graph/graph-header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/graph/graph.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GraphAppHost",
          "members": [
            {
              "kind": "field",
              "name": "appElement",
              "type": {
                "text": "GraphApp"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_graphState",
              "type": {
                "text": "typeof graphStateContext.__context__"
              },
              "privacy": "private",
              "readonly": true,
              "default": "new GraphAppState()"
            },
            {
              "kind": "field",
              "name": "searching",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "searchResultsHidden",
              "type": {
                "text": "unknown"
              }
            },
            {
              "kind": "field",
              "name": "hasFilters",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "createStateProvider",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "StateProvider<State>"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "State"
                  }
                },
                {
                  "name": "ipc",
                  "type": {
                    "text": "HostIpc"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "method",
              "name": "onThemeUpdated",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "ThemeChangeEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "method",
              "name": "onWebviewVisibilityChanged",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "visible",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "method",
              "name": "applyTheme",
              "privacy": "private",
              "parameters": [
                {
                  "name": "theme",
                  "type": {
                    "text": "{ cssVariables: CssVariables; themeOpacityFactor: number }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getGraphTheming",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "{ cssVariables: CssVariables; themeOpacityFactor: number }"
                }
              }
            },
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "attribute": "name",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "'editor' | 'view'"
              },
              "default": "'editor'",
              "attribute": "placement",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_ipc",
              "type": {
                "text": "HostIpc"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_logger",
              "type": {
                "text": "LoggerContext"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_promos",
              "type": {
                "text": "PromosContext"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_telemetry",
              "type": {
                "text": "TelemetryContext"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "bootstrap",
              "type": {
                "text": "State"
              },
              "privacy": "private",
              "attribute": "bootstrap",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "State"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "disposables",
              "type": {
                "text": "Disposable[]"
              },
              "privacy": "protected",
              "readonly": true,
              "default": "[]",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_focused",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_inputFocused",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_sendWebviewFocusChangedCommandDebounced",
              "type": {
                "text": "Deferrable<(params: WebviewFocusChangedParams) => void>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_stateProvider",
              "type": {
                "text": "StateProvider<State>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "method",
              "name": "onPersistState",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "State"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "method",
              "name": "onWebviewFocusChanged",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "focused",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "onFocusIn",
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "onFocusOut",
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "superclass": {
            "name": "GlAppHost",
            "module": "/src/webviews/apps/shared/appHost"
          },
          "tagName": "gl-graph-apphost",
          "customElement": true,
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "fieldName": "name",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "name": "placement",
              "type": {
                "text": "'editor' | 'view'"
              },
              "default": "'editor'",
              "fieldName": "placement",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "name": "bootstrap",
              "type": {
                "text": "State"
              },
              "fieldName": "bootstrap",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GraphAppHost",
          "declaration": {
            "name": "GraphAppHost",
            "module": "src/webviews/apps/plus/graph/graph.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-graph-apphost",
          "declaration": {
            "name": "GraphAppHost",
            "module": "src/webviews/apps/plus/graph/graph.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/graph/stateProvider.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GraphAppState",
          "members": [
            {
              "kind": "field",
              "name": "activeDay",
              "type": {
                "text": "number | undefined"
              }
            },
            {
              "kind": "field",
              "name": "activeRow",
              "type": {
                "text": "string | undefined"
              },
              "default": "undefined"
            },
            {
              "kind": "field",
              "name": "loading",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "searching",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "visibleDays",
              "type": {
                "text": "AppState['visibleDays']"
              }
            },
            {
              "kind": "field",
              "name": "theming",
              "type": {
                "text": "AppState['theming']"
              }
            },
            {
              "kind": "field",
              "name": "filter",
              "type": {
                "text": "SearchQuery"
              }
            },
            {
              "kind": "field",
              "name": "searchResultsHidden",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "searchResultsResponse",
              "type": {
                "text": "undefined | GraphSearchResults | GraphSearchResultsError"
              }
            },
            {
              "kind": "field",
              "name": "searchResults",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "searchResultsError",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "selectedRows",
              "type": {
                "text": "undefined | GraphSelectedRows"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "graphStateContext"
        },
        {
          "kind": "class",
          "description": "",
          "name": "GraphStateProvider",
          "members": [
            {
              "kind": "field",
              "name": "disposable",
              "type": {
                "text": "Disposable"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "provider",
              "type": {
                "text": "ContextProvider<{ __context__: State }, ReactiveElementHost>"
              },
              "privacy": "private",
              "readonly": true,
              "default": "new ContextProvider(host, { context: stateContext, initialValue: state })"
            },
            {
              "kind": "field",
              "name": "_state",
              "type": {
                "text": "State"
              },
              "privacy": "private",
              "readonly": true,
              "default": "state"
            },
            {
              "kind": "field",
              "name": "state",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "updateState",
              "privacy": "private",
              "parameters": [
                {
                  "name": "partial",
                  "type": {
                    "text": "Partial<State>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "dispose",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GraphAppState",
          "declaration": {
            "name": "GraphAppState",
            "module": "src/webviews/apps/plus/graph/stateProvider.ts"
          }
        },
        {
          "kind": "js",
          "name": "graphStateContext",
          "declaration": {
            "name": "graphStateContext",
            "module": "src/webviews/apps/plus/graph/stateProvider.ts"
          }
        },
        {
          "kind": "js",
          "name": "GraphStateProvider",
          "declaration": {
            "name": "GraphStateProvider",
            "module": "src/webviews/apps/plus/graph/stateProvider.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/timeline/context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "stateContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "stateContext",
          "declaration": {
            "name": "stateContext",
            "module": "src/webviews/apps/plus/timeline/context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/timeline/stateProvider.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TimelineStateProvider",
          "members": [
            {
              "kind": "field",
              "name": "disposable",
              "type": {
                "text": "Disposable"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "provider",
              "type": {
                "text": "ContextProvider<{ __context__: State }, ReactiveElementHost>"
              },
              "privacy": "private",
              "readonly": true,
              "default": "new ContextProvider(host, { context: stateContext, initialValue: state })"
            },
            {
              "kind": "field",
              "name": "_state",
              "type": {
                "text": "State"
              },
              "privacy": "private",
              "default": "state"
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "State"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "dispose",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimelineStateProvider",
          "declaration": {
            "name": "TimelineStateProvider",
            "module": "src/webviews/apps/plus/timeline/stateProvider.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/timeline/timeline.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "timelineBaseStyles",
          "default": "css` * { box-sizing: border-box; } :not(:defined) { visibility: hidden; } [hidden] { display: none !important; } /* roll into shared focus style */ :focus-visible { outline: 1px solid var(--vscode-focusBorder); outline-offset: -1px; } a { text-decoration: none; &:hover { text-decoration: underline; } } b { font-weight: 600; } p { margin-top: 0; } ul { margin-top: 0; padding-left: 1.2em; } section, header { display: flex; flex-direction: column; padding: 0; } h2 { font-weight: 400; } h3 { border: none; color: var(--color-view-header-foreground); font-size: 1.5rem; font-weight: 600; margin-bottom: 0; white-space: nowrap; } h4 { font-size: 1.5rem; font-weight: 400; margin: 0.5rem 0 1rem 0; } `"
        },
        {
          "kind": "variable",
          "name": "timelineStyles",
          "default": "css` :host { display: block; color: var(--color-view-foreground); font-family: var(--font-family); font-size: var(--font-size); margin: 0; padding: 0; height: 100vh; overflow: hidden; } .container { display: flex; flex-direction: column; height: 100%; } .header { flex: none; display: grid; grid-template-columns: 1fr min-content; align-items: center; grid-template-areas: 'details toolbox'; margin: 0.5rem 1rem; } :host-context(body[data-placement='editor']) .header { margin-top: 1rem; margin-right: 1.5rem; } .details { grid-area: details; display: flex; gap: 1rem; align-items: center; font-size: var(--font-size); min-width: 0; margin-right: 1rem; } .details gl-breadcrumbs { flex: 1; min-width: 0; padding: 0.1rem 0; overflow: hidden; } .details .details__ref, .details .details__timeframe { min-width: 0; margin: 0; text-overflow: ellipsis; white-space: nowrap; overflow: hidden; } .details .details__ref { flex: 0 100000000 auto; color: var(--color-foreground--75); font-size: 1.2rem; margin-left: auto; } .details .details__ref .ref { margin-left: 0.25rem; } .details .details__timeframe { flex: 0 0 auto; color: var(--color-foreground--75); margin-right: 0.6rem; user-select: none; white-space: nowrap; font-size: 1.2rem; margin-left: auto; } .toolbox { grid-area: toolbox; align-items: center; display: flex; gap: 0.3rem; } .toolbox gl-feature-badge { padding-bottom: 0.4rem; } :host-context(body[data-placement='editor']) .toolbox gl-feature-badge { padding-left: 0.4rem; } .select-container { display: flex; align-items: center; justify-content: space-between; flex: 100% 0 1; position: relative; } .select-container label { margin: 0 1rem 0 0; font-size: var(--font-size); user-select: none; } .select-container::after { font-family: codicon; content: '\\\\eab4'; font-size: 1.4rem; pointer-events: none; top: 50%; right: 8px; transform: translateY(-50%); position: absolute; color: var(--vscode-foreground); } .select { -webkit-appearance: none; -moz-appearance: none; appearance: none; border: 1px solid var(--vscode-dropdown-border); cursor: pointer; font-family: inherit; min-height: 100%; padding: 2px 26px 2px 8px; background-color: var(--vscode-dropdown-background); border-radius: 0.3rem; box-sizing: border-box; color: var(--vscode-foreground); font-family: var(--font-family); height: 26px; user-select: none; } .timeline { flex: 1; min-height: 0; } .timeline__empty { padding: 0.4rem 2rem 1.3rem 2rem; font-size: var(--font-size); } .timeline__empty p { margin-top: 0; } :host-context(body[data-placement='view']) gl-feature-gate { background-color: var(--vscode-sideBar-background); } gl-feature-gate gl-feature-badge { vertical-align: super; margin-left: 0.4rem; margin-right: 0.4rem; } label { min-width: fit-content; } label[disabled] { opacity: 0.5; } .config__content { display: flex; flex-direction: column; gap: 0.8rem; max-width: 30rem; min-width: 20rem; margin-bottom: 0.4rem; } .config__content menu-label { padding: 0; margin-bottom: -0.4rem; } .config__content section { display: flex; flex-direction: row; align-items: center; justify-content: space-between; gap: 0.5rem; } .breadcrumb-item-children { display: flex; } .breadcrumb-folder { cursor: pointer; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "timelineBaseStyles",
          "declaration": {
            "name": "timelineBaseStyles",
            "module": "src/webviews/apps/plus/timeline/timeline.css.ts"
          }
        },
        {
          "kind": "js",
          "name": "timelineStyles",
          "declaration": {
            "name": "timelineStyles",
            "module": "src/webviews/apps/plus/timeline/timeline.css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/timeline/timeline.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlTimelineApp",
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_chart",
              "type": {
                "text": "GlTimelineChart | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "createStateProvider",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TimelineStateProvider"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "State"
                  }
                },
                {
                  "name": "ipc",
                  "type": {
                    "text": "HostIpc"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "method",
              "name": "onPersistState",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "State"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_loading",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "allowed",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "base",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "config",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "head",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "repository",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "scope",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "isShowAllBranchesSupported",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "isSliceBySupported",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "sliceBy",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "subscription",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "renderGate",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderBreadcrumbs",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderRepositoryBreadcrumbItem",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderBranchBreadcrumbItem",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderBreadcrumbPathItems",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderChart",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderConfigPopover",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderConfigHead",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderConfigBase",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderConfigShowAllBranches",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderPeriodSelect",
              "privacy": "private",
              "parameters": [
                {
                  "name": "period",
                  "type": {
                    "text": "TimelinePeriod"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderConfigSliceBy",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderTimeframe",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onChooseBaseRef",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onChooseHeadRef",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onChoosePath",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onChangeScope",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onChartCommitSelected",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<CommitEventDetail>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onPeriodChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onSliceByChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_fireSelectDataPointDebounced",
              "type": {
                "text": "Deferrable<(e: CommitEventDetail) => void> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "fireSelectDataPoint",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CommitEventDetail"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "attribute": "name",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "'editor' | 'view'"
              },
              "default": "'editor'",
              "attribute": "placement",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_ipc",
              "type": {
                "text": "HostIpc"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_logger",
              "type": {
                "text": "LoggerContext"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_promos",
              "type": {
                "text": "PromosContext"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_telemetry",
              "type": {
                "text": "TelemetryContext"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "bootstrap",
              "type": {
                "text": "State"
              },
              "privacy": "private",
              "attribute": "bootstrap",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "method",
              "name": "onThemeUpdated",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "ThemeChangeEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "State"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "disposables",
              "type": {
                "text": "Disposable[]"
              },
              "privacy": "protected",
              "readonly": true,
              "default": "[]",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_focused",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_inputFocused",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_sendWebviewFocusChangedCommandDebounced",
              "type": {
                "text": "Deferrable<(params: WebviewFocusChangedParams) => void>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "_stateProvider",
              "type": {
                "text": "StateProvider<State>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "method",
              "name": "onWebviewFocusChanged",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "focused",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "method",
              "name": "onWebviewVisibilityChanged",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "visible",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "onFocusIn",
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "field",
              "name": "onFocusOut",
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "superclass": {
            "name": "GlAppHost",
            "module": "/src/webviews/apps/shared/appHost"
          },
          "tagName": "gl-timeline-app",
          "customElement": true,
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "fieldName": "name",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "name": "placement",
              "type": {
                "text": "'editor' | 'view'"
              },
              "default": "'editor'",
              "fieldName": "placement",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            },
            {
              "name": "bootstrap",
              "type": {
                "text": "State"
              },
              "fieldName": "bootstrap",
              "inheritedFrom": {
                "name": "GlAppHost",
                "module": "src/webviews/apps/shared/appHost.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlTimelineApp",
          "declaration": {
            "name": "GlTimelineApp",
            "module": "src/webviews/apps/plus/timeline/timeline.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-timeline-app",
          "declaration": {
            "name": "GlTimelineApp",
            "module": "src/webviews/apps/plus/timeline/timeline.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/branch-icon.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlBranchIcon",
          "members": [
            {
              "kind": "field",
              "name": "branch",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "branch"
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "GitBranchStatus | undefined"
              },
              "attribute": "status"
            },
            {
              "kind": "field",
              "name": "hasChanges",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "hasChanges"
            },
            {
              "kind": "field",
              "name": "upstream",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "upstream"
            },
            {
              "kind": "field",
              "name": "worktree",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "worktree"
            },
            {
              "kind": "field",
              "name": "isDefault",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "is-default"
            },
            {
              "kind": "method",
              "name": "renderIcon",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderTooltipContent",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "branch",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "branch"
            },
            {
              "name": "status",
              "type": {
                "text": "GitBranchStatus | undefined"
              },
              "fieldName": "status"
            },
            {
              "name": "hasChanges",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "hasChanges"
            },
            {
              "name": "upstream",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "upstream"
            },
            {
              "name": "worktree",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "worktree"
            },
            {
              "name": "is-default",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "isDefault"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-branch-icon",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlBranchIcon",
          "declaration": {
            "name": "GlBranchIcon",
            "module": "src/webviews/apps/shared/components/branch-icon.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-branch-icon",
          "declaration": {
            "name": "GlBranchIcon",
            "module": "src/webviews/apps/shared/components/branch-icon.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/branch-name.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlBranchName",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "12",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "worktree",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "worktree"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "name"
            },
            {
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "12",
              "fieldName": "size"
            },
            {
              "name": "worktree",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "worktree"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-branch-name",
          "customElement": true
        },
        {
          "kind": "function",
          "name": "renderBranchName",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "name": "worktree",
              "optional": true,
              "type": {
                "text": "boolean"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlBranchName",
          "declaration": {
            "name": "GlBranchName",
            "module": "src/webviews/apps/shared/components/branch-name.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-branch-name",
          "declaration": {
            "name": "GlBranchName",
            "module": "src/webviews/apps/shared/components/branch-name.ts"
          }
        },
        {
          "kind": "js",
          "name": "renderBranchName",
          "declaration": {
            "name": "renderBranchName",
            "module": "src/webviews/apps/shared/components/branch-name.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/breadcrumbs.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlBreadcrumbs",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-breadcrumbs",
          "customElement": true
        },
        {
          "kind": "class",
          "description": "",
          "name": "GlBreadcrumbItem",
          "members": [
            {
              "kind": "field",
              "name": "_collapsed",
              "type": {
                "text": "boolean | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "collapsed",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "attribute": "collapsed",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "collapsible",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "collapsibleState",
              "type": {
                "text": "CollapsibleState"
              },
              "default": "'none'",
              "attribute": "collapsibleState"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "icon"
            },
            {
              "kind": "field",
              "name": "iconTooltip",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "iconTooltip"
            },
            {
              "kind": "field",
              "name": "_shrink",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "1"
            },
            {
              "kind": "field",
              "name": "shrink",
              "type": {
                "text": "number"
              },
              "attribute": "shrink"
            },
            {
              "kind": "method",
              "name": "renderIcon",
              "privacy": "private",
              "parameters": [
                {
                  "name": "collapsible",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "collapsed",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "onToggleCollapse",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "collapsed",
              "type": {
                "text": "boolean"
              },
              "fieldName": "collapsed"
            },
            {
              "name": "collapsibleState",
              "type": {
                "text": "CollapsibleState"
              },
              "default": "'none'",
              "fieldName": "collapsibleState"
            },
            {
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "icon"
            },
            {
              "name": "iconTooltip",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "iconTooltip"
            },
            {
              "name": "shrink",
              "type": {
                "text": "number"
              },
              "fieldName": "shrink"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-breadcrumb-item",
          "customElement": true
        },
        {
          "kind": "class",
          "description": "",
          "name": "GlBreadcrumbItemChild",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-breadcrumb-item-child",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlBreadcrumbs",
          "declaration": {
            "name": "GlBreadcrumbs",
            "module": "src/webviews/apps/shared/components/breadcrumbs.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-breadcrumbs",
          "declaration": {
            "name": "GlBreadcrumbs",
            "module": "src/webviews/apps/shared/components/breadcrumbs.ts"
          }
        },
        {
          "kind": "js",
          "name": "GlBreadcrumbItem",
          "declaration": {
            "name": "GlBreadcrumbItem",
            "module": "src/webviews/apps/shared/components/breadcrumbs.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-breadcrumb-item",
          "declaration": {
            "name": "GlBreadcrumbItem",
            "module": "src/webviews/apps/shared/components/breadcrumbs.ts"
          }
        },
        {
          "kind": "js",
          "name": "GlBreadcrumbItemChild",
          "declaration": {
            "name": "GlBreadcrumbItemChild",
            "module": "src/webviews/apps/shared/components/breadcrumbs.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-breadcrumb-item-child",
          "declaration": {
            "name": "GlBreadcrumbItemChild",
            "module": "src/webviews/apps/shared/components/breadcrumbs.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/button-container.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ButtonContainer",
          "members": [
            {
              "kind": "field",
              "name": "editor",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "editor"
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "'shift' | 'editor' | 'full'"
              },
              "default": "'shift'",
              "attribute": "layout",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "grouping",
              "type": {
                "text": "'gap' | 'split' | 'gap-wide'"
              },
              "default": "'gap'",
              "attribute": "grouping",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "editor",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "editor"
            },
            {
              "name": "layout",
              "type": {
                "text": "'shift' | 'editor' | 'full'"
              },
              "default": "'shift'",
              "fieldName": "layout"
            },
            {
              "name": "grouping",
              "type": {
                "text": "'gap' | 'split' | 'gap-wide'"
              },
              "default": "'gap'",
              "fieldName": "grouping"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "button-container",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ButtonContainer",
          "declaration": {
            "name": "ButtonContainer",
            "module": "src/webviews/apps/shared/components/button-container.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "button-container",
          "declaration": {
            "name": "ButtonContainer",
            "module": "src/webviews/apps/shared/components/button-container.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlButton",
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }"
            },
            {
              "kind": "field",
              "name": "control",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "'alert' | 'secondary' | 'toolbar' | 'input' | undefined"
              },
              "attribute": "appearance",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "density",
              "type": {
                "text": "'compact' | 'tight' | undefined"
              },
              "attribute": "density",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "full",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "full",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "tooltip",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "tooltip"
            },
            {
              "kind": "field",
              "name": "tooltipPlacement",
              "type": {
                "text": "GlTooltip['placement'] | undefined"
              },
              "default": "'bottom'",
              "attribute": "tooltipPlacement"
            },
            {
              "kind": "method",
              "name": "renderControl",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onLinkKeypress",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "focus",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "blur",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "click",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "attributes": [
            {
              "name": "appearance",
              "type": {
                "text": "'alert' | 'secondary' | 'toolbar' | 'input' | undefined"
              },
              "fieldName": "appearance"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "density",
              "type": {
                "text": "'compact' | 'tight' | undefined"
              },
              "fieldName": "density"
            },
            {
              "name": "full",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "full"
            },
            {
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "href"
            },
            {
              "name": "tooltip",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "tooltip"
            },
            {
              "name": "tooltipPlacement",
              "type": {
                "text": "GlTooltip['placement'] | undefined"
              },
              "default": "'bottom'",
              "fieldName": "tooltipPlacement"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlButton",
          "declaration": {
            "name": "GlButton",
            "module": "src/webviews/apps/shared/components/button.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-button",
          "declaration": {
            "name": "GlButton",
            "module": "src/webviews/apps/shared/components/button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/code-icon.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CodeIcon",
          "members": [
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "icon",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "modifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "modifier",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number | undefined"
              },
              "default": "undefined",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "flip",
              "type": {
                "text": "'inline' | 'block' | undefined"
              },
              "attribute": "flip",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "rotate",
              "type": {
                "text": "'45' | undefined"
              },
              "attribute": "rotate",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "icon"
            },
            {
              "name": "modifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "modifier"
            },
            {
              "name": "size",
              "type": {
                "text": "number | undefined"
              },
              "default": "undefined",
              "fieldName": "size"
            },
            {
              "name": "flip",
              "type": {
                "text": "'inline' | 'block' | undefined"
              },
              "fieldName": "flip"
            },
            {
              "name": "rotate",
              "type": {
                "text": "'45' | undefined"
              },
              "fieldName": "rotate"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "code-icon",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CodeIcon",
          "declaration": {
            "name": "CodeIcon",
            "module": "src/webviews/apps/shared/components/code-icon.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "code-icon",
          "declaration": {
            "name": "CodeIcon",
            "module": "src/webviews/apps/shared/components/code-icon.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/commit-sha.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlCommitSha",
          "members": [
            {
              "kind": "field",
              "name": "sha",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "sha"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "12",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "label",
              "privacy": "private",
              "readonly": true
            }
          ],
          "attributes": [
            {
              "name": "sha",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "sha"
            },
            {
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "12",
              "fieldName": "size"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-commit-sha",
          "customElement": true
        },
        {
          "kind": "function",
          "name": "renderCommitSha",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "sha",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "name": "size",
              "default": "12",
              "type": {
                "text": "number"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlCommitSha",
          "declaration": {
            "name": "GlCommitSha",
            "module": "src/webviews/apps/shared/components/commit-sha.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-commit-sha",
          "declaration": {
            "name": "GlCommitSha",
            "module": "src/webviews/apps/shared/components/commit-sha.ts"
          }
        },
        {
          "kind": "js",
          "name": "renderCommitSha",
          "declaration": {
            "name": "renderCommitSha",
            "module": "src/webviews/apps/shared/components/commit-sha.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/copy-container.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlCopyContainer",
          "members": [
            {
              "kind": "field",
              "name": "tagName",
              "static": true,
              "readonly": true,
              "default": "'gl-copy-container'",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "content",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "content"
            },
            {
              "kind": "field",
              "name": "copyLabel",
              "type": {
                "text": "string"
              },
              "default": "'Copy'",
              "attribute": "copyLabel"
            },
            {
              "kind": "field",
              "name": "copiedLabel",
              "type": {
                "text": "string"
              },
              "default": "'Copied'",
              "attribute": "copiedLabel"
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "GlTooltip['placement'] | undefined"
              },
              "default": "'top'",
              "attribute": "placement"
            },
            {
              "kind": "field",
              "name": "timeout",
              "type": {
                "text": "number"
              },
              "default": "1000",
              "attribute": "timeout"
            },
            {
              "kind": "field",
              "name": "_resetTimer",
              "type": {
                "text": "ReturnType<typeof setTimeout> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "cancelResetTimer",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "createResetTimer",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "content",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "content"
            },
            {
              "name": "copyLabel",
              "type": {
                "text": "string"
              },
              "default": "'Copy'",
              "fieldName": "copyLabel"
            },
            {
              "name": "copiedLabel",
              "type": {
                "text": "string"
              },
              "default": "'Copied'",
              "fieldName": "copiedLabel"
            },
            {
              "name": "placement",
              "type": {
                "text": "GlTooltip['placement'] | undefined"
              },
              "default": "'top'",
              "fieldName": "placement"
            },
            {
              "name": "timeout",
              "type": {
                "text": "number"
              },
              "default": "1000",
              "fieldName": "timeout"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlCopyContainer",
          "declaration": {
            "name": "GlCopyContainer",
            "module": "src/webviews/apps/shared/components/copy-container.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "GlCopyContainer",
            "module": "src/webviews/apps/shared/components/copy-container.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/element.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "observe",
          "parameters": [
            {
              "name": "keys",
              "type": {
                "text": "keyof T | (keyof T)[]"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "text": "{ afterFirstUpdate?: boolean }"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "GlElement",
          "members": [
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "optional": true,
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "observe",
          "declaration": {
            "name": "observe",
            "module": "src/webviews/apps/shared/components/element.ts"
          }
        },
        {
          "kind": "js",
          "name": "GlElement",
          "declaration": {
            "name": "GlElement",
            "module": "src/webviews/apps/shared/components/element.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/feature-badge.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlFeatureBadge",
          "members": [
            {
              "kind": "field",
              "name": "cloud",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "cloud"
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "GlPopover['placement']"
              },
              "default": "'bottom'",
              "attribute": "placement",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "preview",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "preview"
            },
            {
              "kind": "field",
              "name": "promos",
              "type": {
                "text": "PromosContext"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "source",
              "type": {
                "text": "Source | undefined"
              },
              "attribute": "source"
            },
            {
              "kind": "field",
              "name": "subscription",
              "type": {
                "text": "Subscription | undefined"
              }
            },
            {
              "kind": "field",
              "name": "daysRemaining",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "state",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "renderBadge",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderPopoverHeader",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderPopoverContent",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderStartTrialActions",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderUpgradeActions",
              "privacy": "private",
              "parameters": [
                {
                  "name": "leadin",
                  "optional": true,
                  "type": {
                    "text": "TemplateResult"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderPromo",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "cloud",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "cloud"
            },
            {
              "name": "placement",
              "type": {
                "text": "GlPopover['placement']"
              },
              "default": "'bottom'",
              "fieldName": "placement"
            },
            {
              "name": "preview",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "preview"
            },
            {
              "name": "source",
              "type": {
                "text": "Source | undefined"
              },
              "fieldName": "source"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-feature-badge",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlFeatureBadge",
          "declaration": {
            "name": "GlFeatureBadge",
            "module": "src/webviews/apps/shared/components/feature-badge.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-feature-badge",
          "declaration": {
            "name": "GlFeatureBadge",
            "module": "src/webviews/apps/shared/components/feature-badge.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/feature-gate.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlFeatureGate",
          "members": [
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "'alert' | 'welcome' | undefined"
              },
              "attribute": "appearance",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "featurePreview",
              "type": {
                "text": "FeaturePreview | undefined"
              },
              "attribute": "featurePreview"
            },
            {
              "kind": "field",
              "name": "featurePreviewCommandLink",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "featurePreviewCommandLink"
            },
            {
              "kind": "field",
              "name": "featureWithArticleIfNeeded",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "featureWithArticleIfNeeded"
            },
            {
              "kind": "field",
              "name": "source",
              "type": {
                "text": "Source | undefined"
              },
              "attribute": "source"
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "SubscriptionState | undefined"
              }
            },
            {
              "kind": "field",
              "name": "webroot",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "webroot"
            }
          ],
          "attributes": [
            {
              "name": "appearance",
              "type": {
                "text": "'alert' | 'welcome' | undefined"
              },
              "fieldName": "appearance"
            },
            {
              "name": "featurePreview",
              "type": {
                "text": "FeaturePreview | undefined"
              },
              "fieldName": "featurePreview"
            },
            {
              "name": "featurePreviewCommandLink",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "featurePreviewCommandLink"
            },
            {
              "name": "featureWithArticleIfNeeded",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "featureWithArticleIfNeeded"
            },
            {
              "name": "source",
              "type": {
                "text": "Source | undefined"
              },
              "fieldName": "source"
            },
            {
              "name": "webroot",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "webroot"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-feature-gate",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlFeatureGate",
          "declaration": {
            "name": "GlFeatureGate",
            "module": "src/webviews/apps/shared/components/feature-gate.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-feature-gate",
          "declaration": {
            "name": "GlFeatureGate",
            "module": "src/webviews/apps/shared/components/feature-gate.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/formatted-date.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FormattedDate",
          "members": [
            {
              "kind": "field",
              "name": "format",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "format"
            },
            {
              "kind": "field",
              "name": "dateStyle",
              "type": {
                "text": "'relative' | 'absolute'"
              },
              "default": "'relative'",
              "attribute": "date-style"
            },
            {
              "kind": "field",
              "name": "date",
              "default": "new Date()",
              "attribute": "date",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "tooltip",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "tooltip"
            },
            {
              "kind": "field",
              "name": "absoluteDate",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "dateLabel",
              "type": {
                "text": "string"
              },
              "readonly": true
            }
          ],
          "attributes": [
            {
              "name": "format",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "format"
            },
            {
              "name": "date-style",
              "type": {
                "text": "'relative' | 'absolute'"
              },
              "default": "'relative'",
              "fieldName": "dateStyle"
            },
            {
              "name": "date",
              "default": "new Date()",
              "fieldName": "date"
            },
            {
              "name": "tooltip",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "tooltip"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "formatted-date",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormattedDate",
          "declaration": {
            "name": "FormattedDate",
            "module": "src/webviews/apps/shared/components/formatted-date.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "formatted-date",
          "declaration": {
            "name": "FormattedDate",
            "module": "src/webviews/apps/shared/components/formatted-date.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/gitlens-logo.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GitLensLogo",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gitlens-logo",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GitLensLogo",
          "declaration": {
            "name": "GitLensLogo",
            "module": "src/webviews/apps/shared/components/gitlens-logo.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gitlens-logo",
          "declaration": {
            "name": "GitLensLogo",
            "module": "src/webviews/apps/shared/components/gitlens-logo.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/progress.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ProgressIndicator",
          "members": [
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "string"
              },
              "default": "'infinite'",
              "attribute": "mode",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "active"
            },
            {
              "kind": "field",
              "name": "position",
              "type": {
                "text": "'top' | 'bottom'"
              },
              "default": "'bottom'",
              "attribute": "position"
            }
          ],
          "attributes": [
            {
              "name": "mode",
              "type": {
                "text": "string"
              },
              "default": "'infinite'",
              "fieldName": "mode"
            },
            {
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "active"
            },
            {
              "name": "position",
              "type": {
                "text": "'top' | 'bottom'"
              },
              "default": "'bottom'",
              "fieldName": "position"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "progress-indicator",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProgressIndicator",
          "declaration": {
            "name": "ProgressIndicator",
            "module": "src/webviews/apps/shared/components/progress.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "progress-indicator",
          "declaration": {
            "name": "ProgressIndicator",
            "module": "src/webviews/apps/shared/components/progress.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/promo.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlPromo",
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }"
            },
            {
              "kind": "field",
              "name": "_focusable",
              "type": {
                "text": "HTMLElement | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "promoPromise",
              "type": {
                "text": "Promise<Promo | undefined> | undefined"
              },
              "attribute": "promoPromise"
            },
            {
              "kind": "field",
              "name": "source",
              "type": {
                "text": "Source | undefined"
              },
              "attribute": "source"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'icon' | 'info' | 'link'"
              },
              "default": "'info'",
              "attribute": "type",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_hasPromo",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "hasPromo",
              "privacy": "private",
              "attribute": "has-promo",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "renderPromo",
              "privacy": "private",
              "parameters": [
                {
                  "name": "promo",
                  "type": {
                    "text": "Promo | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getCommandUrl",
              "privacy": "private",
              "parameters": [
                {
                  "name": "promo",
                  "type": {
                    "text": "Promo | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "focus",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "attributes": [
            {
              "name": "promoPromise",
              "type": {
                "text": "Promise<Promo | undefined> | undefined"
              },
              "fieldName": "promoPromise"
            },
            {
              "name": "source",
              "type": {
                "text": "Source | undefined"
              },
              "fieldName": "source"
            },
            {
              "name": "type",
              "type": {
                "text": "'icon' | 'info' | 'link'"
              },
              "default": "'info'",
              "fieldName": "type"
            },
            {
              "name": "has-promo",
              "fieldName": "hasPromo"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-promo",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlPromo",
          "declaration": {
            "name": "GlPromo",
            "module": "src/webviews/apps/shared/components/promo.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-promo",
          "declaration": {
            "name": "GlPromo",
            "module": "src/webviews/apps/shared/components/promo.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/ref-button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlRefButton",
          "members": [
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "href",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "icon",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "ref",
              "type": {
                "text": "GitReference | undefined"
              },
              "attribute": "ref"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "16",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "worktree",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "worktree"
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "href"
            },
            {
              "name": "icon",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "icon"
            },
            {
              "name": "ref",
              "type": {
                "text": "GitReference | undefined"
              },
              "fieldName": "ref"
            },
            {
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "16",
              "fieldName": "size"
            },
            {
              "name": "worktree",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "worktree"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-ref-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlRefButton",
          "declaration": {
            "name": "GlRefButton",
            "module": "src/webviews/apps/shared/components/ref-button.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-ref-button",
          "declaration": {
            "name": "GlRefButton",
            "module": "src/webviews/apps/shared/components/ref-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/ref-name.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlRefName",
          "members": [
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "icon",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "ref",
              "type": {
                "text": "GitReference | undefined"
              },
              "attribute": "ref"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "13",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "worktree",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "worktree"
            }
          ],
          "attributes": [
            {
              "name": "icon",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "icon"
            },
            {
              "name": "ref",
              "type": {
                "text": "GitReference | undefined"
              },
              "fieldName": "ref"
            },
            {
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "13",
              "fieldName": "size"
            },
            {
              "name": "worktree",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "worktree"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-ref-name",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlRefName",
          "declaration": {
            "name": "GlRefName",
            "module": "src/webviews/apps/shared/components/ref-name.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-ref-name",
          "declaration": {
            "name": "GlRefName",
            "module": "src/webviews/apps/shared/components/ref-name.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/ref.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "refButtonBaseStyles",
          "default": "css` :host { box-sizing: border-box; display: flex; align-items: center; max-width: 100%; min-width: 4.6rem; } * { box-sizing: border-box; } `"
        },
        {
          "kind": "variable",
          "name": "pickerIconStyles",
          "default": "css` code-icon.picker-icon { font-size: 1rem; /* margin-top: 0.4rem; */ margin-right: -0.25rem; } code-icon.picker-icon::before { margin-left: -0.4rem; } `"
        },
        {
          "kind": "variable",
          "name": "truncatedButtonStyles",
          "default": "css` .truncated-button { max-width: 100%; min-width: 4rem; } gl-button[disabled] { opacity: 1; cursor: default; } .truncated-button__label { max-width: 100%; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "refButtonBaseStyles",
          "declaration": {
            "name": "refButtonBaseStyles",
            "module": "src/webviews/apps/shared/components/ref.css.ts"
          }
        },
        {
          "kind": "js",
          "name": "pickerIconStyles",
          "declaration": {
            "name": "pickerIconStyles",
            "module": "src/webviews/apps/shared/components/ref.css.ts"
          }
        },
        {
          "kind": "js",
          "name": "truncatedButtonStyles",
          "declaration": {
            "name": "truncatedButtonStyles",
            "module": "src/webviews/apps/shared/components/ref.css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/repo-button-group.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlRepoButtonGroup",
          "members": [
            {
              "kind": "field",
              "name": "connectIcon",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "attribute": "connectIcon"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "attribute": "icon"
            },
            {
              "kind": "field",
              "name": "repository",
              "type": {
                "text": "RepositoryShape | undefined"
              },
              "attribute": "repository"
            },
            {
              "kind": "field",
              "name": "hasMultipleRepositories",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "attribute": "hasMultipleRepositories"
            },
            {
              "kind": "field",
              "name": "source",
              "type": {
                "text": "Source | undefined"
              },
              "attribute": "source"
            },
            {
              "kind": "field",
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "expandable",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "icons",
              "readonly": true,
              "attribute": "icons",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "displayName",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "renderProviderIcon",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderConnectIcon",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "connectIcon",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "connectIcon"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "icon",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "icon"
            },
            {
              "name": "repository",
              "type": {
                "text": "RepositoryShape | undefined"
              },
              "fieldName": "repository"
            },
            {
              "name": "hasMultipleRepositories",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "fieldName": "hasMultipleRepositories"
            },
            {
              "name": "source",
              "type": {
                "text": "Source | undefined"
              },
              "fieldName": "source"
            },
            {
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "expandable"
            },
            {
              "name": "icons",
              "readonly": true,
              "fieldName": "icons"
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          },
          "tagName": "gl-repo-button-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlRepoButtonGroup",
          "declaration": {
            "name": "GlRepoButtonGroup",
            "module": "src/webviews/apps/shared/components/repo-button-group.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-repo-button-group",
          "declaration": {
            "name": "GlRepoButtonGroup",
            "module": "src/webviews/apps/shared/components/repo-button-group.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/signal-utils.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "renderAsyncComputed",
          "return": {
            "type": {
              "text": "R | undefined"
            }
          },
          "parameters": [
            {
              "name": "v",
              "type": {
                "text": "AsyncComputed<T>"
              }
            },
            {
              "name": "{\n\t\tinitial,\n\t\tpending,\n\t\tcomplete,\n\t\terror,\n\t}",
              "type": {
                "text": "{\n\t\tinitial?: () => R;\n\t\tpending?: () => R;\n\t\tcomplete?: (value: T | undefined) => R;\n\t\terror?: (error: unknown) => R;\n\t}"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "AsyncComputedState",
          "members": [
            {
              "kind": "field",
              "name": "_debounce",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "500"
            },
            {
              "kind": "field",
              "name": "_invalidate",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_computed",
              "type": {
                "text": "AsyncComputed<T> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_state",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "T | undefined"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "computed",
              "type": {
                "text": "AsyncComputed<T>"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "_runCore",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_runDebounced",
              "type": {
                "text": "Deferrable<() => void> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_run",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "immediate",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "run",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "force",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "invalidate",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "signalState",
          "parameters": [
            {
              "name": "initialValue",
              "optional": true,
              "type": {
                "text": "T"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "signalObjectState",
          "parameters": [
            {
              "name": "initialValue",
              "optional": true,
              "type": {
                "text": "T"
              }
            },
            {
              "name": "options",
              "default": "{}",
              "type": {
                "text": "{ afterChange?: (target: any, value: T) => void }"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "renderAsyncComputed",
          "declaration": {
            "name": "renderAsyncComputed",
            "module": "src/webviews/apps/shared/components/signal-utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "AsyncComputedState",
          "declaration": {
            "name": "AsyncComputedState",
            "module": "src/webviews/apps/shared/components/signal-utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "signalState",
          "declaration": {
            "name": "signalState",
            "module": "src/webviews/apps/shared/components/signal-utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "signalObjectState",
          "declaration": {
            "name": "signalObjectState",
            "module": "src/webviews/apps/shared/components/signal-utils.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/skeleton-loader.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SkeletonLoader",
          "members": [
            {
              "kind": "field",
              "name": "lines",
              "type": {
                "text": "number"
              },
              "default": "1",
              "attribute": "lines"
            }
          ],
          "attributes": [
            {
              "name": "lines",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "lines"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "skeleton-loader",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SkeletonLoader",
          "declaration": {
            "name": "SkeletonLoader",
            "module": "src/webviews/apps/shared/components/skeleton-loader.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "skeleton-loader",
          "declaration": {
            "name": "SkeletonLoader",
            "module": "src/webviews/apps/shared/components/skeleton-loader.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/snow.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlSnow",
          "members": [
            {
              "kind": "field",
              "name": "snowing",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "snowing",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_canvas",
              "type": {
                "text": "HTMLCanvasElement | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_ctx",
              "type": {
                "text": "CanvasRenderingContext2D | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_snowflakes",
              "type": {
                "text": "Snowflake[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_animationFrame",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_resizeObserver",
              "type": {
                "text": "ResizeObserver | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderToggle",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onToggle",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "snowing",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateCanvasSize",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "clear",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "createSnowflakes",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "updateAnimation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "attributes": [
            {
              "name": "snowing",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "snowing"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-snow",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlSnow",
          "declaration": {
            "name": "GlSnow",
            "module": "src/webviews/apps/shared/components/snow.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-snow",
          "declaration": {
            "name": "GlSnow",
            "module": "src/webviews/apps/shared/components/snow.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/webview-pane.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "WebviewPane",
          "members": [
            {
              "kind": "field",
              "name": "collapsable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "collapsable",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "expanded",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "loading",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "loading",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "renderTitle",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "toggleExpanded",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "name": "expanded-change",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "collapsable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "collapsable"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "expanded"
            },
            {
              "name": "loading",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "loading"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "webview-pane",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "WebviewPane",
          "declaration": {
            "name": "WebviewPane",
            "module": "src/webviews/apps/shared/components/webview-pane.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "webview-pane",
          "declaration": {
            "name": "WebviewPane",
            "module": "src/webviews/apps/shared/components/webview-pane.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/contexts/ipc.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "ipcContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ipcContext",
          "declaration": {
            "name": "ipcContext",
            "module": "src/webviews/apps/shared/contexts/ipc.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/contexts/logger.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LoggerContext",
          "members": [
            {
              "kind": "field",
              "name": "scope",
              "type": {
                "text": "LogScope"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "log",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "messageOrScope",
                  "type": {
                    "text": "string | LogScope | undefined"
                  }
                },
                {
                  "name": "optionalParams",
                  "type": {
                    "text": "any[]"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "variable",
          "name": "loggerContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LoggerContext",
          "declaration": {
            "name": "LoggerContext",
            "module": "src/webviews/apps/shared/contexts/logger.ts"
          }
        },
        {
          "kind": "js",
          "name": "loggerContext",
          "declaration": {
            "name": "loggerContext",
            "module": "src/webviews/apps/shared/contexts/logger.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/contexts/promos.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PromosContext",
          "members": [
            {
              "kind": "field",
              "name": "ipc",
              "type": {
                "text": "HostIpc"
              },
              "privacy": "private",
              "readonly": true,
              "default": "ipc"
            },
            {
              "kind": "field",
              "name": "disposables",
              "type": {
                "text": "Disposable[]"
              },
              "privacy": "private",
              "readonly": true,
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_promos",
              "privacy": "private",
              "default": "new Map<`${PromoPlans | undefined}|${PromoLocation | undefined}`, Promise<Promo | undefined>>()"
            },
            {
              "kind": "method",
              "name": "getApplicablePromo",
              "return": {
                "type": {
                  "text": "Promise<Promo | undefined>"
                }
              },
              "parameters": [
                {
                  "name": "plan",
                  "optional": true,
                  "type": {
                    "text": "PromoPlans"
                  }
                },
                {
                  "name": "location",
                  "optional": true,
                  "type": {
                    "text": "PromoLocation"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "dispose",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "promosContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PromosContext",
          "declaration": {
            "name": "PromosContext",
            "module": "src/webviews/apps/shared/contexts/promos.ts"
          }
        },
        {
          "kind": "js",
          "name": "promosContext",
          "declaration": {
            "name": "promosContext",
            "module": "src/webviews/apps/shared/contexts/promos.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/contexts/telemetry.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TelemetryContext",
          "members": [
            {
              "kind": "field",
              "name": "ipc",
              "type": {
                "text": "HostIpc"
              },
              "privacy": "private",
              "readonly": true,
              "default": "ipc"
            },
            {
              "kind": "field",
              "name": "disposables",
              "type": {
                "text": "Disposable[]"
              },
              "privacy": "private",
              "readonly": true,
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "sendEvent",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "detail",
                  "type": {
                    "text": "TelemetrySendEventParams"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "dispose",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "telemetryContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TelemetryContext",
          "declaration": {
            "name": "TelemetryContext",
            "module": "src/webviews/apps/shared/contexts/telemetry.ts"
          }
        },
        {
          "kind": "js",
          "name": "telemetryContext",
          "declaration": {
            "name": "telemetryContext",
            "module": "src/webviews/apps/shared/contexts/telemetry.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/patchDetails/components/gl-draft-details.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlDraftDetails",
          "members": [
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "State"
              },
              "attribute": "state"
            },
            {
              "kind": "field",
              "name": "explainBusy",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "explain",
              "type": {
                "text": "ExplainState | undefined"
              },
              "attribute": "explain"
            },
            {
              "kind": "field",
              "name": "selectedPatches",
              "type": {
                "text": "string[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "validityMessage",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "_copiedLink",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "cloudDraft",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "isCodeSuggestion",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "canSubmit",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "renderEmptyContent",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderPatchMessage",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderExplainAi",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderChangedFiles",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "treeModel",
              "type": {
                "text": "TreeModel[]"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "renderUserSelection",
              "privacy": "private",
              "parameters": [
                {
                  "name": "userSelection",
                  "type": {
                    "text": "DraftUserSelection"
                  }
                },
                {
                  "name": "role",
                  "type": {
                    "text": "DraftRole"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderUserSelectionList",
              "privacy": "private",
              "parameters": [
                {
                  "name": "draft",
                  "type": {
                    "text": "CloudDraftDetails"
                  }
                },
                {
                  "name": "includeOwner",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderPatchPermissions",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderCodeSuggectionActions",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderPatches",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderActionbar",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderDraftInfo",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onInviteUsers",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onChangeSelectionRole",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                },
                {
                  "name": "selection",
                  "type": {
                    "text": "DraftUserSelection"
                  }
                },
                {
                  "name": "role",
                  "type": {
                    "text": "PatchDetailsUpdateSelectionEventDetail['role']"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onVisibilityChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onUpdatePatch",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onExplainChanges",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent | KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onTreeItemActionClicked",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "fireFileEvent",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "file",
                  "type": {
                    "text": "DraftPatchFileChange"
                  }
                },
                {
                  "name": "showOptions",
                  "optional": true,
                  "type": {
                    "text": "TextDocumentShowOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onCompareWorking",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onOpenFile",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onTreeItemChecked",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemCheckedDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onTreeItemSelected",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemSelectionDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onApplyPatch",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "optional": true,
                  "type": {
                    "text": "MouseEvent | KeyboardEvent"
                  }
                },
                {
                  "name": "target",
                  "default": "'current'",
                  "type": {
                    "text": "'current' | 'branch' | 'worktree'"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onArchiveDraft",
              "privacy": "private",
              "parameters": [
                {
                  "name": "reason",
                  "type": {
                    "text": "DraftReasonEventDetail['reason']"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onSelectApplyOption",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<{ target: MenuItem }>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onChangePatchBase",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "optional": true,
                  "type": {
                    "text": "MouseEvent | KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onSelectPatchRepo",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "optional": true,
                  "type": {
                    "text": "MouseEvent | KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onShowInGraph",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "optional": true,
                  "type": {
                    "text": "MouseEvent | KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onCopyCloudLink",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onShareLocalPatch",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "draftPatchToTreeModel",
              "return": {
                "type": {
                  "text": "TreeModel"
                }
              },
              "parameters": [
                {
                  "name": "patch",
                  "type": {
                    "text": "NonNullable<DraftDetails['patches']>[0]"
                  }
                },
                {
                  "name": "isTree",
                  "default": "false"
                },
                {
                  "name": "compact",
                  "default": "true"
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getFileActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "{ icon: string; label: string; action: string }[]"
                }
              },
              "parameters": [
                {
                  "name": "_file",
                  "type": {
                    "text": "DraftPatchFileChange"
                  }
                },
                {
                  "name": "_options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderLoading",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderLayoutAction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | typeof nothing"
                }
              },
              "parameters": [
                {
                  "name": "layout",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderTreeView",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "parameters": [
                {
                  "name": "treeModel",
                  "type": {
                    "text": "TreeModel[]"
                  }
                },
                {
                  "name": "guides",
                  "default": "'none'",
                  "type": {
                    "text": "'none' | 'onHover' | 'always'"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderFiles",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel[]"
                }
              },
              "parameters": [
                {
                  "name": "files",
                  "type": {
                    "text": "GitFileChangeShape[]"
                  }
                },
                {
                  "name": "isTree",
                  "default": "false"
                },
                {
                  "name": "compact",
                  "default": "false"
                },
                {
                  "name": "level",
                  "default": "2"
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "walkFileTree",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel"
                }
              },
              "parameters": [
                {
                  "name": "item",
                  "type": {
                    "text": "HierarchicalItem<GitFileChangeShape>"
                  }
                },
                {
                  "name": "options",
                  "default": "{ level: 1 }",
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "folderToTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "getRepoActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeItemAction[]"
                }
              },
              "parameters": [
                {
                  "name": "_name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "_path",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "_options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "emptyTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "repoToTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel<string[]>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "path",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                },
                {
                  "name": "description",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "fileToTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel<GitFileChangeShape[]>"
                }
              },
              "parameters": [
                {
                  "name": "file",
                  "type": {
                    "text": "GitFileChangeShape"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                },
                {
                  "name": "flat",
                  "default": "false"
                },
                {
                  "name": "glue",
                  "default": "'/'"
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "state",
              "type": {
                "text": "State"
              },
              "fieldName": "state"
            },
            {
              "name": "explain",
              "type": {
                "text": "ExplainState | undefined"
              },
              "fieldName": "explain"
            }
          ],
          "superclass": {
            "name": "GlTreeBase",
            "module": "/src/webviews/apps/plus/patchDetails/components/gl-tree-base"
          },
          "tagName": "gl-draft-details",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlDraftDetails",
          "declaration": {
            "name": "GlDraftDetails",
            "module": "src/webviews/apps/plus/patchDetails/components/gl-draft-details.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-draft-details",
          "declaration": {
            "name": "GlDraftDetails",
            "module": "src/webviews/apps/plus/patchDetails/components/gl-draft-details.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/patchDetails/components/gl-patch-create.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlPatchCreate",
          "members": [
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "Serialized<State> | undefined"
              },
              "attribute": "state"
            },
            {
              "kind": "field",
              "name": "review",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "review"
            },
            {
              "kind": "field",
              "name": "generate",
              "type": {
                "text": "GenerateState | undefined"
              },
              "attribute": "generate"
            },
            {
              "kind": "field",
              "name": "generateBusy",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "creationBusy",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "titleInput",
              "type": {
                "text": "HTMLInputElement"
              }
            },
            {
              "kind": "field",
              "name": "descInput",
              "type": {
                "text": "HTMLInputElement"
              }
            },
            {
              "kind": "field",
              "name": "generateAiButton",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "validityMessage",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "create",
              "type": {
                "text": "NonNullable<State['create']>"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "createChanges",
              "type": {
                "text": "Change[]"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "createEntries",
              "type": {
                "text": "[string, Change][]"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "hasWipChanges",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "selectedChanges",
              "type": {
                "text": "[string, Change][]"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "canSubmit",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "fileLayout",
              "type": {
                "text": "ViewFilesLayout"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "isCompact",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "filesModified",
              "type": {
                "text": "number"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "draftVisibility",
              "type": {
                "text": "DraftVisibility"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "renderUserSelection",
              "privacy": "private",
              "parameters": [
                {
                  "name": "userSelection",
                  "type": {
                    "text": "DraftUserSelection"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderUserSelectionList",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderForm",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderChangedFiles",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onTreeItemChecked",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemCheckedDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onTreeItemSelected",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemSelectionDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderTreeViewWithModel",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "getTreeForChange",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TreeModel[] | undefined"
                }
              },
              "parameters": [
                {
                  "name": "change",
                  "type": {
                    "text": "Change"
                  }
                },
                {
                  "name": "isMulti",
                  "default": "false"
                },
                {
                  "name": "isTree",
                  "default": "false"
                },
                {
                  "name": "compact",
                  "default": "true"
                }
              ]
            },
            {
              "kind": "method",
              "name": "isTree",
              "privacy": "private",
              "parameters": [
                {
                  "name": "count",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "createPatch",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onCreateAll",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onSelectCreateOption",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "CustomEvent<{ target: MenuItem }>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getChangeForRepo",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Change | undefined"
                }
              },
              "parameters": [
                {
                  "name": "repoUri",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onTitleInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "InputEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "onDebounceTitleInput",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onDescriptionInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "InputEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "onDebounceDescriptionInput",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onInviteUsers",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onChangeSelectionRole",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                },
                {
                  "name": "selection",
                  "type": {
                    "text": "DraftUserSelection"
                  }
                },
                {
                  "name": "role",
                  "type": {
                    "text": "CreatePatchUpdateSelectionEventDetail['role']"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onVisibilityChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onGenerateTitleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "fireMetadataUpdate",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onTreeItemActionClicked",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "onOpenFile",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onStageFile",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onUnstageFile",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onShowInGraph",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onCancel",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "getFileActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "{ icon: string; label: string; action: string }[]"
                }
              },
              "parameters": [
                {
                  "name": "file",
                  "type": {
                    "text": "GitFileChangeShape"
                  }
                },
                {
                  "name": "_options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "getRepoActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "{ icon: string; label: string; action: string }[]"
                }
              },
              "parameters": [
                {
                  "name": "_name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "_path",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "_options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderLoading",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderLayoutAction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | typeof nothing"
                }
              },
              "parameters": [
                {
                  "name": "layout",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderTreeView",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "parameters": [
                {
                  "name": "treeModel",
                  "type": {
                    "text": "TreeModel[]"
                  }
                },
                {
                  "name": "guides",
                  "default": "'none'",
                  "type": {
                    "text": "'none' | 'onHover' | 'always'"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderFiles",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel[]"
                }
              },
              "parameters": [
                {
                  "name": "files",
                  "type": {
                    "text": "GitFileChangeShape[]"
                  }
                },
                {
                  "name": "isTree",
                  "default": "false"
                },
                {
                  "name": "compact",
                  "default": "false"
                },
                {
                  "name": "level",
                  "default": "2"
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "walkFileTree",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel"
                }
              },
              "parameters": [
                {
                  "name": "item",
                  "type": {
                    "text": "HierarchicalItem<GitFileChangeShape>"
                  }
                },
                {
                  "name": "options",
                  "default": "{ level: 1 }",
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "folderToTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "emptyTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "repoToTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel<string[]>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "path",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                },
                {
                  "name": "description",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "fileToTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel<GitFileChangeShape[]>"
                }
              },
              "parameters": [
                {
                  "name": "file",
                  "type": {
                    "text": "GitFileChangeShape"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                },
                {
                  "name": "flat",
                  "default": "false"
                },
                {
                  "name": "glue",
                  "default": "'/'"
                }
              ],
              "inheritedFrom": {
                "name": "GlTreeBase",
                "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "state",
              "type": {
                "text": "Serialized<State> | undefined"
              },
              "fieldName": "state"
            },
            {
              "name": "review",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "review"
            },
            {
              "name": "generate",
              "type": {
                "text": "GenerateState | undefined"
              },
              "fieldName": "generate"
            }
          ],
          "superclass": {
            "name": "GlTreeBase",
            "module": "/src/webviews/apps/plus/patchDetails/components/gl-tree-base"
          },
          "tagName": "gl-patch-create",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlPatchCreate",
          "declaration": {
            "name": "GlPatchCreate",
            "module": "src/webviews/apps/plus/patchDetails/components/gl-patch-create.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-patch-create",
          "declaration": {
            "name": "GlPatchCreate",
            "module": "src/webviews/apps/plus/patchDetails/components/gl-patch-create.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlTreeBase",
          "members": [
            {
              "kind": "method",
              "name": "onTreeItemActionClicked",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "CustomEvent<TreeItemActionDetail>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onTreeItemChecked",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "CustomEvent<TreeItemCheckedDetail>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onTreeItemSelected",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "CustomEvent<TreeItemSelectionDetail>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderLoading",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderLayoutAction",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | typeof nothing"
                }
              },
              "parameters": [
                {
                  "name": "layout",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderTreeView",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "parameters": [
                {
                  "name": "treeModel",
                  "type": {
                    "text": "TreeModel[]"
                  }
                },
                {
                  "name": "guides",
                  "default": "'none'",
                  "type": {
                    "text": "'none' | 'onHover' | 'always'"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderFiles",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel[]"
                }
              },
              "parameters": [
                {
                  "name": "files",
                  "type": {
                    "text": "GitFileChangeShape[]"
                  }
                },
                {
                  "name": "isTree",
                  "default": "false"
                },
                {
                  "name": "compact",
                  "default": "false"
                },
                {
                  "name": "level",
                  "default": "2"
                }
              ]
            },
            {
              "kind": "method",
              "name": "walkFileTree",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel"
                }
              },
              "parameters": [
                {
                  "name": "item",
                  "type": {
                    "text": "HierarchicalItem<GitFileChangeShape>"
                  }
                },
                {
                  "name": "options",
                  "default": "{ level: 1 }",
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "folderToTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getRepoActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeItemAction[]"
                }
              },
              "parameters": [
                {
                  "name": "_name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "_path",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "_options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "emptyTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "repoToTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel<string[]>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "path",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                },
                {
                  "name": "description",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getFileActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeItemAction[]"
                }
              },
              "parameters": [
                {
                  "name": "_file",
                  "type": {
                    "text": "GitFileChangeShape"
                  }
                },
                {
                  "name": "_options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "fileToTreeModel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TreeModel<GitFileChangeShape[]>"
                }
              },
              "parameters": [
                {
                  "name": "file",
                  "type": {
                    "text": "GitFileChangeShape"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Partial<TreeItemBase>"
                  }
                },
                {
                  "name": "flat",
                  "default": "false"
                },
                {
                  "name": "glue",
                  "default": "'/'"
                }
              ]
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlTreeBase",
          "declaration": {
            "name": "GlTreeBase",
            "module": "src/webviews/apps/plus/patchDetails/components/gl-tree-base.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/patchDetails/components/patch-details-app.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlPatchDetailsApp",
          "members": [
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "State"
              },
              "attribute": "state"
            },
            {
              "kind": "field",
              "name": "explain",
              "type": {
                "text": "ExplainState | undefined"
              },
              "attribute": "explain"
            },
            {
              "kind": "field",
              "name": "generate",
              "type": {
                "text": "GenerateState | undefined"
              },
              "attribute": "generate"
            },
            {
              "kind": "field",
              "name": "app",
              "type": {
                "text": "PatchDetailsApp | undefined"
              }
            },
            {
              "kind": "field",
              "name": "wipChangesCount",
              "type": {
                "text": "number"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "wipChangeState",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "Mode"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "indentPreference",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "16"
            },
            {
              "kind": "method",
              "name": "updateDocumentProperties",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "state",
              "type": {
                "text": "State"
              },
              "fieldName": "state"
            },
            {
              "name": "explain",
              "type": {
                "text": "ExplainState | undefined"
              },
              "fieldName": "explain"
            },
            {
              "name": "generate",
              "type": {
                "text": "GenerateState | undefined"
              },
              "fieldName": "generate"
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          },
          "tagName": "gl-patch-details-app",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlPatchDetailsApp",
          "declaration": {
            "name": "GlPatchDetailsApp",
            "module": "src/webviews/apps/plus/patchDetails/components/patch-details-app.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-patch-details-app",
          "declaration": {
            "name": "GlPatchDetailsApp",
            "module": "src/webviews/apps/plus/patchDetails/components/patch-details-app.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/home/components/active-work.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "activeWorkTagName",
          "type": {
            "text": "string"
          },
          "default": "'gl-active-work'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "GlActiveWork",
          "members": [
            {
              "kind": "field",
              "name": "_homeState",
              "type": {
                "text": "State"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_activeOverviewState",
              "type": {
                "text": "ActiveOverviewState"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "repoCollapsed",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "true"
            },
            {
              "kind": "field",
              "name": "isPro",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "renderLoader",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderPending",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderComplete",
              "privacy": "private",
              "parameters": [
                {
                  "name": "overview",
                  "type": {
                    "text": "GetActiveOverviewResponse"
                  }
                },
                {
                  "name": "isFetching",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderRepoBranchCard",
              "privacy": "private",
              "parameters": [
                {
                  "name": "branch",
                  "type": {
                    "text": "GetOverviewBranch"
                  }
                },
                {
                  "name": "repo",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "isFetching",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onRepositorySelectorClicked",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<RepoButtonGroupClickEvent>"
                  }
                }
              ]
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@lit-labs/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        },
        {
          "kind": "class",
          "description": "",
          "name": "GlActiveBranchCard",
          "members": [
            {
              "kind": "method",
              "name": "renderActionsMenu",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderBranchStateActions",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderBranchIndicator",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | undefined"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "getBranchActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "getPrActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "getCollapsedActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderIssuesItem",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_homeState",
              "type": {
                "text": "State"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "repo",
              "type": {
                "text": "string"
              },
              "attribute": "repo",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "showUpgrade",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "showUpgrade",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_branch",
              "type": {
                "text": "GetOverviewBranch"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "branch",
              "type": {
                "text": "GetOverviewBranch"
              },
              "attribute": "branch",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_autolinks",
              "type": {
                "text": "Awaited<GetOverviewBranch['autolinks']>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "autolinks",
              "type": {
                "text": "Awaited<GetOverviewBranch['autolinks']>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_autolinksPromise",
              "type": {
                "text": "GetOverviewBranch['autolinks']"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "autolinksPromise",
              "type": {
                "text": "GetOverviewBranch['autolinks']"
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_contributors",
              "type": {
                "text": "Awaited<GetOverviewBranch['contributors']>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "contributors",
              "type": {
                "text": "Awaited<GetOverviewBranch['contributors']>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_contributorsPromise",
              "type": {
                "text": "GetOverviewBranch['contributors']"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "contributorsPromise",
              "type": {
                "text": "GetOverviewBranch['contributors']"
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_issues",
              "type": {
                "text": "Awaited<GetOverviewBranch['issues']>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "issues",
              "type": {
                "text": "Awaited<GetOverviewBranch['issues']>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_issuesPromise",
              "type": {
                "text": "GetOverviewBranch['issues']"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "issuesPromise",
              "type": {
                "text": "GetOverviewBranch['issues']"
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_pr",
              "type": {
                "text": "Awaited<GetOverviewBranch['pr']>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "pr",
              "type": {
                "text": "Awaited<GetOverviewBranch['pr']>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_prPromise",
              "type": {
                "text": "GetOverviewBranch['pr']"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "prPromise",
              "type": {
                "text": "GetOverviewBranch['pr']"
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_launchpadItem",
              "type": {
                "text": "Awaited<NonNullable<Awaited<GetOverviewBranch['pr']>>['launchpad']>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "launchpadItem",
              "type": {
                "text": "Awaited<NonNullable<Awaited<GetOverviewBranch['pr']>>['launchpad']>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_launchpadItemPromise",
              "type": {
                "text": "NonNullable<Awaited<GetOverviewBranch['pr']>>['launchpad']"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "launchpadItemPromise",
              "type": {
                "text": "NonNullable<Awaited<GetOverviewBranch['pr']>>['launchpad']"
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mergeTarget",
              "type": {
                "text": "Awaited<GetOverviewBranch['mergeTarget']>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "mergeTarget",
              "type": {
                "text": "Awaited<GetOverviewBranch['mergeTarget']>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mergeTargetPromise",
              "type": {
                "text": "GetOverviewBranch['mergeTarget']"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "mergeTargetPromise",
              "type": {
                "text": "GetOverviewBranch['mergeTarget']"
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_remote",
              "type": {
                "text": "Awaited<GetOverviewBranch['remote']>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "remote",
              "type": {
                "text": "Awaited<GetOverviewBranch['remote']>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_remotePromise",
              "type": {
                "text": "GetOverviewBranch['remote']"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "remotePromise",
              "type": {
                "text": "GetOverviewBranch['remote']"
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_wip",
              "type": {
                "text": "Awaited<GetOverviewBranch['wip']>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "wip",
              "type": {
                "text": "Awaited<GetOverviewBranch['wip']>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_wipPromise",
              "type": {
                "text": "GetOverviewBranch['wip']"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "wipPromise",
              "type": {
                "text": "GetOverviewBranch['wip']"
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "busy",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "busy",
              "reflects": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "expanded",
              "reflects": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "expandable",
              "reflects": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "eventController",
              "type": {
                "text": "AbortController | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "onExpandableChanged",
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "branchRef",
              "type": {
                "text": "BranchRef"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "isWorktree",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "cardIndicator",
              "type": {
                "text": "GlCard['indicator']"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "branchCardIndicator",
              "type": {
                "text": "GlCard['indicator']"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "attachFocusListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "onFocus",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderIssues",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderWip",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderAvatars",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderTracking",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "parameters": [
                {
                  "name": "showWip",
                  "default": "false"
                }
              ],
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBranchActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderPrActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderCollapsedActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "createWebviewCommandLink",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "command",
                  "type": {
                    "text": "WebviewCommands | WebviewViewCommands | PlusCommands"
                  }
                },
                {
                  "name": "args",
                  "optional": true,
                  "type": {
                    "text": "T | any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "createCommandLink",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "command",
                  "type": {
                    "text": "GlCommands"
                  }
                },
                {
                  "name": "args",
                  "optional": true,
                  "type": {
                    "text": "T | any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderTimestamp",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBranchItem",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "parameters": [
                {
                  "name": "actionsSection",
                  "optional": true,
                  "type": {
                    "text": "TemplateResult | NothingType"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBranchIcon",
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderPrItem",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderLaunchpadItem",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderMergeTargetStatus",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleExpanded",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "expanded",
                  "default": "!this.expanded"
                }
              ],
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "superclass": {
            "name": "GlBranchCardBase",
            "module": "/src/webviews/apps/plus/home/components/branch-card"
          },
          "tagName": "gl-active-branch-card",
          "customElement": true,
          "attributes": [
            {
              "name": "repo",
              "type": {
                "text": "string"
              },
              "fieldName": "repo",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "name": "showUpgrade",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "showUpgrade",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "name": "branch",
              "type": {
                "text": "GetOverviewBranch"
              },
              "fieldName": "branch",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "name": "busy",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "busy",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "expanded",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "expandable",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "activeWorkTagName",
          "declaration": {
            "name": "activeWorkTagName",
            "module": "src/webviews/apps/plus/home/components/active-work.ts"
          }
        },
        {
          "kind": "js",
          "name": "GlActiveWork",
          "declaration": {
            "name": "GlActiveWork",
            "module": "src/webviews/apps/plus/home/components/active-work.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "GlActiveWork",
            "module": "src/webviews/apps/plus/home/components/active-work.ts"
          }
        },
        {
          "kind": "js",
          "name": "GlActiveBranchCard",
          "declaration": {
            "name": "GlActiveBranchCard",
            "module": "src/webviews/apps/plus/home/components/active-work.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-active-branch-card",
          "declaration": {
            "name": "GlActiveBranchCard",
            "module": "src/webviews/apps/plus/home/components/active-work.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/home/components/branch-card.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "branchCardStyles",
          "default": "css` * { box-sizing: border-box; } gl-avatar-list { --gl-avatar-size: 2.4rem; margin-block: -0.4rem; } .branch-item { position: relative; } .branch-item__container { display: flex; flex-direction: column; gap: 0.6rem; } .branch-item__container > * { margin-block: 0; } .branch-item__section { display: flex; flex-direction: column; gap: 0.4rem; } .branch-item__section > * { margin-block: 0; } .branch-item__section--details { font-size: 0.9em; color: var(--vscode-descriptionForeground); } .branch-item__actions { display: flex; align-items: center; gap: 0.8rem; flex-direction: row; justify-content: flex-end; font-size: 0.9em; } /* :empty selector doesn't work with lit */ .branch-item__actions:not(:has(*)) { display: none; } .branch-item__icon { color: var(--vscode-descriptionForeground); flex: none; } .branch-item__name { flex-grow: 1; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; font-weight: bold; } .branch-item__name--secondary { font-weight: normal; } .branch-item__identifier { color: var(--vscode-descriptionForeground); text-decoration: none; } .branch-item__grouping { display: inline-flex; align-items: center; gap: 0.6rem; max-width: 100%; margin-block: 0; } .branch-item__changes { display: flex; align-items: center; gap: 1rem; justify-content: flex-end; flex-wrap: wrap; white-space: nowrap; } .branch-item__changes formatted-date { margin-inline-end: auto; } .branch-item__summary { display: flex; align-items: center; gap: 0.6rem; } .branch-item__collapsed-actions { position: absolute; z-index: var(--gl-branch-card-actions-zindex, 2); right: 0.4rem; bottom: 0.3rem; padding: 0.4rem 0.6rem; background-color: var(--gl-card-hover-background); } .branch-item:not(:focus-within):not(:hover) .branch-item__collapsed-actions { ${srOnlyStyles} } .pill { --gl-pill-border: color-mix(in srgb, transparent 80%, var(--color-foreground)); } .work-item { --gl-card-background: color-mix(in lab, var(--vscode-sideBar-background) 100%, #fff 3%); --gl-card-hover-background: color-mix(in lab, var(--vscode-sideBar-background) 100%, #fff 1.5%); } .work-item::part(base) { margin-block-end: 0; } .branch-item__section.mb-1 { margin-block: 0.4rem; } .branch-item__merge-target { margin-inline-end: auto; } .branch-item__row { display: flex; gap: 0.8rem; } .branch-item__row [full] { flex-grow: 1; } .branch-item__missing { --button-foreground: inherit; } :host-context(.vscode-dark) .branch-item__missing, :host-context(.vscode-high-contrast) .branch-item__missing { --button-background: color-mix(in lab, var(--vscode-sideBar-background) 100%, #fff 3%); --button-hover-background: color-mix(in lab, var(--vscode-sideBar-background) 100%, #fff 1.5%); --button-border: color-mix(in lab, var(--vscode-sideBar-background) 100%, #fff 12%); } :host-context(.vscode-light) .branch-item__missing, :host-context(.vscode-high-contrast-light) .branch-item__missing { --button-background: color-mix(in lab, var(--vscode-sideBar-background) 100%, #000 8%); --button-hover-background: color-mix(in lab, var(--vscode-sideBar-background) 100%, #000 10%); --button-border: color-mix(in lab, var(--vscode-sideBar-background) 100%, #000 14%); } .branch-item__category { margin-inline-start: 0.6rem; } .launchpad-grouping--mergeable { color: var(--vscode-gitlens-launchpadIndicatorMergeableColor); } .launchpad-grouping--blocked { color: var(--vscode-gitlens-launchpadIndicatorBlockedColor); } .launchpad-grouping--attention { color: var(--vscode-gitlens-launchpadIndicatorAttentionColor); } .tracking__pill, .wip__pill { display: flex; flex-direction: row; gap: 1rem; } .tracking__tooltip, .wip__tooltip { display: contents; vertical-align: middle; } .tracking__tooltip p, .wip__tooltip p { margin-block: 0; } p.tracking__tooltip--wip { margin-block-start: 1rem; } `"
        },
        {
          "kind": "class",
          "description": "",
          "name": "GlBranchCardBase",
          "members": [
            {
              "kind": "field",
              "name": "_homeState",
              "type": {
                "text": "State"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "repo",
              "type": {
                "text": "string"
              },
              "attribute": "repo"
            },
            {
              "kind": "field",
              "name": "showUpgrade",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "showUpgrade"
            },
            {
              "kind": "field",
              "name": "_branch",
              "type": {
                "text": "GetOverviewBranch"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "branch",
              "type": {
                "text": "GetOverviewBranch"
              },
              "attribute": "branch"
            },
            {
              "kind": "field",
              "name": "_autolinks",
              "type": {
                "text": "Awaited<GetOverviewBranch['autolinks']>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "autolinks",
              "type": {
                "text": "Awaited<GetOverviewBranch['autolinks']>"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_autolinksPromise",
              "type": {
                "text": "GetOverviewBranch['autolinks']"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "autolinksPromise",
              "type": {
                "text": "GetOverviewBranch['autolinks']"
              }
            },
            {
              "kind": "field",
              "name": "_contributors",
              "type": {
                "text": "Awaited<GetOverviewBranch['contributors']>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "contributors",
              "type": {
                "text": "Awaited<GetOverviewBranch['contributors']>"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_contributorsPromise",
              "type": {
                "text": "GetOverviewBranch['contributors']"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "contributorsPromise",
              "type": {
                "text": "GetOverviewBranch['contributors']"
              }
            },
            {
              "kind": "field",
              "name": "_issues",
              "type": {
                "text": "Awaited<GetOverviewBranch['issues']>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "issues",
              "type": {
                "text": "Awaited<GetOverviewBranch['issues']>"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_issuesPromise",
              "type": {
                "text": "GetOverviewBranch['issues']"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "issuesPromise",
              "type": {
                "text": "GetOverviewBranch['issues']"
              }
            },
            {
              "kind": "field",
              "name": "_pr",
              "type": {
                "text": "Awaited<GetOverviewBranch['pr']>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "pr",
              "type": {
                "text": "Awaited<GetOverviewBranch['pr']>"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_prPromise",
              "type": {
                "text": "GetOverviewBranch['pr']"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "prPromise",
              "type": {
                "text": "GetOverviewBranch['pr']"
              }
            },
            {
              "kind": "field",
              "name": "_launchpadItem",
              "type": {
                "text": "Awaited<NonNullable<Awaited<GetOverviewBranch['pr']>>['launchpad']>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "launchpadItem",
              "type": {
                "text": "Awaited<NonNullable<Awaited<GetOverviewBranch['pr']>>['launchpad']>"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_launchpadItemPromise",
              "type": {
                "text": "NonNullable<Awaited<GetOverviewBranch['pr']>>['launchpad']"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "launchpadItemPromise",
              "type": {
                "text": "NonNullable<Awaited<GetOverviewBranch['pr']>>['launchpad']"
              }
            },
            {
              "kind": "field",
              "name": "_mergeTarget",
              "type": {
                "text": "Awaited<GetOverviewBranch['mergeTarget']>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "mergeTarget",
              "type": {
                "text": "Awaited<GetOverviewBranch['mergeTarget']>"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_mergeTargetPromise",
              "type": {
                "text": "GetOverviewBranch['mergeTarget']"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "mergeTargetPromise",
              "type": {
                "text": "GetOverviewBranch['mergeTarget']"
              }
            },
            {
              "kind": "field",
              "name": "_remote",
              "type": {
                "text": "Awaited<GetOverviewBranch['remote']>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "remote",
              "type": {
                "text": "Awaited<GetOverviewBranch['remote']>"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_remotePromise",
              "type": {
                "text": "GetOverviewBranch['remote']"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "remotePromise",
              "type": {
                "text": "GetOverviewBranch['remote']"
              }
            },
            {
              "kind": "field",
              "name": "_wip",
              "type": {
                "text": "Awaited<GetOverviewBranch['wip']>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "wip",
              "type": {
                "text": "Awaited<GetOverviewBranch['wip']>"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_wipPromise",
              "type": {
                "text": "GetOverviewBranch['wip']"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "wipPromise",
              "type": {
                "text": "GetOverviewBranch['wip']"
              }
            },
            {
              "kind": "field",
              "name": "busy",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "busy",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "expanded",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "expandable",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "eventController",
              "type": {
                "text": "AbortController | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onExpandableChanged",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "branchRef",
              "type": {
                "text": "BranchRef"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "isWorktree",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "cardIndicator",
              "type": {
                "text": "GlCard['indicator']"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "branchCardIndicator",
              "type": {
                "text": "GlCard['indicator']"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "attachFocusListener",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onFocus",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "renderIssues",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderWip",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderAvatars",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderTracking",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "parameters": [
                {
                  "name": "showWip",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "getBranchActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderBranchActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              }
            },
            {
              "kind": "method",
              "name": "getPrActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderPrActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              }
            },
            {
              "kind": "method",
              "name": "getCollapsedActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderCollapsedActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              }
            },
            {
              "kind": "method",
              "name": "createWebviewCommandLink",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "command",
                  "type": {
                    "text": "WebviewCommands | WebviewViewCommands | PlusCommands"
                  }
                },
                {
                  "name": "args",
                  "optional": true,
                  "type": {
                    "text": "T | any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "createCommandLink",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "command",
                  "type": {
                    "text": "GlCommands"
                  }
                },
                {
                  "name": "args",
                  "optional": true,
                  "type": {
                    "text": "T | any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderTimestamp",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderBranchIndicator",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderBranchItem",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "parameters": [
                {
                  "name": "actionsSection",
                  "optional": true,
                  "type": {
                    "text": "TemplateResult | NothingType"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderBranchIcon",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderPrItem",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderLaunchpadItem",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderMergeTargetStatus",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderIssuesItem",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              }
            },
            {
              "kind": "method",
              "name": "toggleExpanded",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "expanded",
                  "default": "!this.expanded"
                }
              ]
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "repo",
              "type": {
                "text": "string"
              },
              "fieldName": "repo"
            },
            {
              "name": "showUpgrade",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "showUpgrade"
            },
            {
              "name": "branch",
              "type": {
                "text": "GetOverviewBranch"
              },
              "fieldName": "branch"
            },
            {
              "name": "busy",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "busy"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "expanded"
            },
            {
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "expandable"
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "GlBranchCard",
          "members": [
            {
              "kind": "method",
              "name": "getCollapsedActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "getBranchActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "getPrActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBranchIndicator",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | undefined"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_homeState",
              "type": {
                "text": "State"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "repo",
              "type": {
                "text": "string"
              },
              "attribute": "repo",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "showUpgrade",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "showUpgrade",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_branch",
              "type": {
                "text": "GetOverviewBranch"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "branch",
              "type": {
                "text": "GetOverviewBranch"
              },
              "attribute": "branch",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_autolinks",
              "type": {
                "text": "Awaited<GetOverviewBranch['autolinks']>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "autolinks",
              "type": {
                "text": "Awaited<GetOverviewBranch['autolinks']>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_autolinksPromise",
              "type": {
                "text": "GetOverviewBranch['autolinks']"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "autolinksPromise",
              "type": {
                "text": "GetOverviewBranch['autolinks']"
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_contributors",
              "type": {
                "text": "Awaited<GetOverviewBranch['contributors']>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "contributors",
              "type": {
                "text": "Awaited<GetOverviewBranch['contributors']>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_contributorsPromise",
              "type": {
                "text": "GetOverviewBranch['contributors']"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "contributorsPromise",
              "type": {
                "text": "GetOverviewBranch['contributors']"
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_issues",
              "type": {
                "text": "Awaited<GetOverviewBranch['issues']>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "issues",
              "type": {
                "text": "Awaited<GetOverviewBranch['issues']>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_issuesPromise",
              "type": {
                "text": "GetOverviewBranch['issues']"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "issuesPromise",
              "type": {
                "text": "GetOverviewBranch['issues']"
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_pr",
              "type": {
                "text": "Awaited<GetOverviewBranch['pr']>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "pr",
              "type": {
                "text": "Awaited<GetOverviewBranch['pr']>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_prPromise",
              "type": {
                "text": "GetOverviewBranch['pr']"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "prPromise",
              "type": {
                "text": "GetOverviewBranch['pr']"
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_launchpadItem",
              "type": {
                "text": "Awaited<NonNullable<Awaited<GetOverviewBranch['pr']>>['launchpad']>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "launchpadItem",
              "type": {
                "text": "Awaited<NonNullable<Awaited<GetOverviewBranch['pr']>>['launchpad']>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_launchpadItemPromise",
              "type": {
                "text": "NonNullable<Awaited<GetOverviewBranch['pr']>>['launchpad']"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "launchpadItemPromise",
              "type": {
                "text": "NonNullable<Awaited<GetOverviewBranch['pr']>>['launchpad']"
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mergeTarget",
              "type": {
                "text": "Awaited<GetOverviewBranch['mergeTarget']>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "mergeTarget",
              "type": {
                "text": "Awaited<GetOverviewBranch['mergeTarget']>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mergeTargetPromise",
              "type": {
                "text": "GetOverviewBranch['mergeTarget']"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "mergeTargetPromise",
              "type": {
                "text": "GetOverviewBranch['mergeTarget']"
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_remote",
              "type": {
                "text": "Awaited<GetOverviewBranch['remote']>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "remote",
              "type": {
                "text": "Awaited<GetOverviewBranch['remote']>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_remotePromise",
              "type": {
                "text": "GetOverviewBranch['remote']"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "remotePromise",
              "type": {
                "text": "GetOverviewBranch['remote']"
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_wip",
              "type": {
                "text": "Awaited<GetOverviewBranch['wip']>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "wip",
              "type": {
                "text": "Awaited<GetOverviewBranch['wip']>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "_wipPromise",
              "type": {
                "text": "GetOverviewBranch['wip']"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "wipPromise",
              "type": {
                "text": "GetOverviewBranch['wip']"
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "busy",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "busy",
              "reflects": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "expanded",
              "reflects": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "expandable",
              "reflects": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "eventController",
              "type": {
                "text": "AbortController | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "onExpandableChanged",
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "branchRef",
              "type": {
                "text": "BranchRef"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "isWorktree",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "cardIndicator",
              "type": {
                "text": "GlCard['indicator']"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "branchCardIndicator",
              "type": {
                "text": "GlCard['indicator']"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "attachFocusListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "field",
              "name": "onFocus",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderIssues",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderWip",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderAvatars",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderTracking",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "parameters": [
                {
                  "name": "showWip",
                  "default": "false"
                }
              ],
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBranchActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderPrActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderCollapsedActions",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "createWebviewCommandLink",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "command",
                  "type": {
                    "text": "WebviewCommands | WebviewViewCommands | PlusCommands"
                  }
                },
                {
                  "name": "args",
                  "optional": true,
                  "type": {
                    "text": "T | any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "createCommandLink",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "command",
                  "type": {
                    "text": "GlCommands"
                  }
                },
                {
                  "name": "args",
                  "optional": true,
                  "type": {
                    "text": "T | any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderTimestamp",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBranchItem",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "parameters": [
                {
                  "name": "actionsSection",
                  "optional": true,
                  "type": {
                    "text": "TemplateResult | NothingType"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBranchIcon",
              "privacy": "private",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderPrItem",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderLaunchpadItem",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderMergeTargetStatus",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderIssuesItem",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | NothingType"
                }
              },
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleExpanded",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "expanded",
                  "default": "!this.expanded"
                }
              ],
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "superclass": {
            "name": "GlBranchCardBase",
            "module": "src/webviews/apps/plus/home/components/branch-card.ts"
          },
          "tagName": "gl-branch-card",
          "customElement": true,
          "attributes": [
            {
              "name": "repo",
              "type": {
                "text": "string"
              },
              "fieldName": "repo",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "name": "showUpgrade",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "showUpgrade",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "name": "branch",
              "type": {
                "text": "GetOverviewBranch"
              },
              "fieldName": "branch",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "name": "busy",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "busy",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "expanded",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            },
            {
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "expandable",
              "inheritedFrom": {
                "name": "GlBranchCardBase",
                "module": "src/webviews/apps/plus/home/components/branch-card.ts"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "GlWorkUnit",
          "members": [
            {
              "kind": "field",
              "name": "primary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "primary",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "nested",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "nested",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "indicator",
              "type": {
                "text": "GlCard['indicator'] | undefined"
              },
              "attribute": "indicator",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "expanded",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "renderContent",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderSummary",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "primary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "primary"
            },
            {
              "name": "nested",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "nested"
            },
            {
              "name": "indicator",
              "type": {
                "text": "GlCard['indicator'] | undefined"
              },
              "fieldName": "indicator"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "expanded"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-work-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "branchCardStyles",
          "declaration": {
            "name": "branchCardStyles",
            "module": "src/webviews/apps/plus/home/components/branch-card.ts"
          }
        },
        {
          "kind": "js",
          "name": "GlBranchCardBase",
          "declaration": {
            "name": "GlBranchCardBase",
            "module": "src/webviews/apps/plus/home/components/branch-card.ts"
          }
        },
        {
          "kind": "js",
          "name": "GlBranchCard",
          "declaration": {
            "name": "GlBranchCard",
            "module": "src/webviews/apps/plus/home/components/branch-card.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-branch-card",
          "declaration": {
            "name": "GlBranchCard",
            "module": "src/webviews/apps/plus/home/components/branch-card.ts"
          }
        },
        {
          "kind": "js",
          "name": "GlWorkUnit",
          "declaration": {
            "name": "GlWorkUnit",
            "module": "src/webviews/apps/plus/home/components/branch-card.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-work-item",
          "declaration": {
            "name": "GlWorkUnit",
            "module": "src/webviews/apps/plus/home/components/branch-card.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/home/components/branch-section.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlSection",
          "members": [
            {
              "kind": "field",
              "name": "loading",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "loading"
            },
            {
              "kind": "field",
              "name": "headingLevel",
              "type": {
                "text": "ARIAMixin['ariaLevel']"
              },
              "default": "'3'",
              "attribute": "heading-level"
            }
          ],
          "attributes": [
            {
              "name": "loading",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "loading"
            },
            {
              "name": "heading-level",
              "type": {
                "text": "ARIAMixin['ariaLevel']"
              },
              "default": "'3'",
              "fieldName": "headingLevel"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-section",
          "customElement": true
        },
        {
          "kind": "class",
          "description": "",
          "name": "GlBranchSection",
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "repo",
              "type": {
                "text": "string"
              },
              "attribute": "repo"
            },
            {
              "kind": "field",
              "name": "branches",
              "type": {
                "text": "GetOverviewBranch[]"
              },
              "attribute": "branches"
            },
            {
              "kind": "field",
              "name": "isFetching",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "isFetching"
            },
            {
              "kind": "field",
              "name": "branchCards",
              "type": {
                "text": "GlBranchCardBase[]"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onCardExpanded",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "toggleSiblingCards",
              "privacy": "private",
              "parameters": [
                {
                  "name": "card",
                  "optional": true,
                  "type": {
                    "text": "GlBranchCardBase"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "toggleSiblingCardsDebounced",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderSectionLabel",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "fieldName": "label"
            },
            {
              "name": "repo",
              "type": {
                "text": "string"
              },
              "fieldName": "repo"
            },
            {
              "name": "branches",
              "type": {
                "text": "GetOverviewBranch[]"
              },
              "fieldName": "branches"
            },
            {
              "name": "isFetching",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "isFetching"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-branch-section",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlSection",
          "declaration": {
            "name": "GlSection",
            "module": "src/webviews/apps/plus/home/components/branch-section.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-section",
          "declaration": {
            "name": "GlSection",
            "module": "src/webviews/apps/plus/home/components/branch-section.ts"
          }
        },
        {
          "kind": "js",
          "name": "GlBranchSection",
          "declaration": {
            "name": "GlBranchSection",
            "module": "src/webviews/apps/plus/home/components/branch-section.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-branch-section",
          "declaration": {
            "name": "GlBranchSection",
            "module": "src/webviews/apps/plus/home/components/branch-section.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/home/components/branch-threshold-filter.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "selectStyles",
          "default": "css` .select { background: none; outline: none; border: none; text-decoration: none !important; font-weight: 500; color: var(--color-foreground--25); } .select option { color: var(--vscode-foreground); background-color: var(--vscode-dropdown-background); } .select:not(:disabled) { cursor: pointer; color: var(--color-foreground--50); } .select:not(:disabled):focus { outline: 1px solid var(--color-focus-border); } .select:not(:disabled):hover { color: var(--vscode-foreground); text-decoration: underline !important; } `"
        },
        {
          "kind": "class",
          "description": "",
          "name": "GlObjectSelect",
          "members": [
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "V | undefined"
              },
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "options",
              "type": {
                "text": "T[] | undefined"
              },
              "attribute": "options"
            },
            {
              "kind": "method",
              "name": "getValue",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "V"
                }
              },
              "parameters": [
                {
                  "name": "option",
                  "type": {
                    "text": "T"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "L"
                }
              },
              "parameters": [
                {
                  "name": "option",
                  "type": {
                    "text": "T"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onChange",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "unknown"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "value",
              "type": {
                "text": "V | undefined"
              },
              "fieldName": "value"
            },
            {
              "name": "options",
              "type": {
                "text": "T[] | undefined"
              },
              "fieldName": "options"
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "GlBranchThresholdFilter",
          "members": [
            {
              "kind": "method",
              "name": "getValue",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "OverviewRecentThreshold | 'OneYear'"
                }
              },
              "parameters": [
                {
                  "name": "option",
                  "type": {
                    "text": "{\n\t\tvalue: OverviewRecentThreshold | OverviewStaleThreshold;\n\t}"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlObjectSelect",
                "module": "src/webviews/apps/plus/home/components/branch-threshold-filter.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "option",
                  "type": {
                    "text": "{ label: string }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlObjectSelect",
                "module": "src/webviews/apps/plus/home/components/branch-threshold-filter.ts"
              }
            },
            {
              "kind": "method",
              "name": "onChange",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlObjectSelect",
                "module": "src/webviews/apps/plus/home/components/branch-threshold-filter.ts"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "inheritedFrom": {
                "name": "GlObjectSelect",
                "module": "src/webviews/apps/plus/home/components/branch-threshold-filter.ts"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "V | undefined"
              },
              "attribute": "value",
              "inheritedFrom": {
                "name": "GlObjectSelect",
                "module": "src/webviews/apps/plus/home/components/branch-threshold-filter.ts"
              }
            },
            {
              "kind": "field",
              "name": "options",
              "type": {
                "text": "T[] | undefined"
              },
              "attribute": "options",
              "inheritedFrom": {
                "name": "GlObjectSelect",
                "module": "src/webviews/apps/plus/home/components/branch-threshold-filter.ts"
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "superclass": {
            "name": "GlObjectSelect",
            "module": "src/webviews/apps/plus/home/components/branch-threshold-filter.ts"
          },
          "tagName": "gl-branch-threshold-filter",
          "customElement": true,
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled",
              "inheritedFrom": {
                "name": "GlObjectSelect",
                "module": "src/webviews/apps/plus/home/components/branch-threshold-filter.ts"
              }
            },
            {
              "name": "value",
              "type": {
                "text": "V | undefined"
              },
              "fieldName": "value",
              "inheritedFrom": {
                "name": "GlObjectSelect",
                "module": "src/webviews/apps/plus/home/components/branch-threshold-filter.ts"
              }
            },
            {
              "name": "options",
              "type": {
                "text": "T[] | undefined"
              },
              "fieldName": "options",
              "inheritedFrom": {
                "name": "GlObjectSelect",
                "module": "src/webviews/apps/plus/home/components/branch-threshold-filter.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "selectStyles",
          "declaration": {
            "name": "selectStyles",
            "module": "src/webviews/apps/plus/home/components/branch-threshold-filter.ts"
          }
        },
        {
          "kind": "js",
          "name": "GlObjectSelect",
          "declaration": {
            "name": "GlObjectSelect",
            "module": "src/webviews/apps/plus/home/components/branch-threshold-filter.ts"
          }
        },
        {
          "kind": "js",
          "name": "GlBranchThresholdFilter",
          "declaration": {
            "name": "GlBranchThresholdFilter",
            "module": "src/webviews/apps/plus/home/components/branch-threshold-filter.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-branch-threshold-filter",
          "declaration": {
            "name": "GlBranchThresholdFilter",
            "module": "src/webviews/apps/plus/home/components/branch-threshold-filter.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/home/components/launchpad.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlLaunchpad",
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }"
            },
            {
              "kind": "field",
              "name": "_homeState",
              "type": {
                "text": "State"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_ipc",
              "type": {
                "text": "HostIpc"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_disposable",
              "type": {
                "text": "Disposable[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_summary",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_summaryState",
              "privacy": "private",
              "default": "new AsyncComputedState<LaunchpadSummary>(async _abortSignal => { const rsp = await this._ipc.sendRequest(GetLaunchpadSummary, {}); return rsp; })"
            },
            {
              "kind": "field",
              "name": "startWorkCommand",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "createBranchCommand",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "renderSummaryResult",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderPending",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderSummary",
              "privacy": "private",
              "parameters": [
                {
                  "name": "summary",
                  "type": {
                    "text": "LaunchpadSummary | undefined"
                  }
                }
              ]
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@lit-labs/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-launchpad",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlLaunchpad",
          "declaration": {
            "name": "GlLaunchpad",
            "module": "src/webviews/apps/plus/home/components/launchpad.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-launchpad",
          "declaration": {
            "name": "GlLaunchpad",
            "module": "src/webviews/apps/plus/home/components/launchpad.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/home/components/merge-target-status.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlMergeTargetStatus",
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }"
            },
            {
              "kind": "field",
              "name": "branch",
              "type": {
                "text": "Pick<GetOverviewBranch, 'repoPath' | 'id' | 'name' | 'opened' | 'upstream' | 'worktree'>"
              },
              "attribute": "branch"
            },
            {
              "kind": "field",
              "name": "_target",
              "type": {
                "text": "Awaited<GetOverviewBranch['mergeTarget']>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "Awaited<GetOverviewBranch['mergeTarget']>"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_targetPromise",
              "type": {
                "text": "GetOverviewBranch['mergeTarget']"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "targetPromise",
              "type": {
                "text": "GetOverviewBranch['mergeTarget']"
              },
              "attribute": "targetPromise"
            },
            {
              "kind": "field",
              "name": "conflicts",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "mergedStatus",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "status",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "branchRef",
              "type": {
                "text": "BranchRef | undefined"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "targetBranchRef",
              "type": {
                "text": "BranchRef | undefined"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "renderContent",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderHeader",
              "privacy": "private",
              "parameters": [
                {
                  "name": "title",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "icon",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "status",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderHeaderActions",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderInlineTargetEdit",
              "privacy": "private",
              "parameters": [
                {
                  "name": "target",
                  "type": {
                    "text": "Awaited<GetOverviewBranch['mergeTarget']>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderFiles",
              "privacy": "private",
              "parameters": [
                {
                  "name": "files",
                  "type": {
                    "text": "{ path: string }[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderFile",
              "privacy": "private",
              "parameters": [
                {
                  "name": "path",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "branch",
              "type": {
                "text": "Pick<GetOverviewBranch, 'repoPath' | 'id' | 'name' | 'opened' | 'upstream' | 'worktree'>"
              },
              "fieldName": "branch"
            },
            {
              "name": "targetPromise",
              "type": {
                "text": "GetOverviewBranch['mergeTarget']"
              },
              "fieldName": "targetPromise"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-merge-target-status",
          "customElement": true
        },
        {
          "kind": "class",
          "description": "",
          "name": "GlMergeTargetUpgrade",
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-merge-target-upgrade",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlMergeTargetStatus",
          "declaration": {
            "name": "GlMergeTargetStatus",
            "module": "src/webviews/apps/plus/home/components/merge-target-status.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-merge-target-status",
          "declaration": {
            "name": "GlMergeTargetStatus",
            "module": "src/webviews/apps/plus/home/components/merge-target-status.ts"
          }
        },
        {
          "kind": "js",
          "name": "GlMergeTargetUpgrade",
          "declaration": {
            "name": "GlMergeTargetUpgrade",
            "module": "src/webviews/apps/plus/home/components/merge-target-status.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-merge-target-upgrade",
          "declaration": {
            "name": "GlMergeTargetUpgrade",
            "module": "src/webviews/apps/plus/home/components/merge-target-status.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/home/components/overview.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "overviewTagName",
          "type": {
            "text": "string"
          },
          "default": "'gl-overview'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "GlOverview",
          "members": [
            {
              "kind": "field",
              "name": "_homeState",
              "type": {
                "text": "State"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_inactiveOverviewState",
              "type": {
                "text": "InactiveOverviewState"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderLoader",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderPending",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_ipc",
              "type": {
                "text": "HostIpc"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "onChangeRecentThresholdFilter",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "renderComplete",
              "privacy": "private",
              "parameters": [
                {
                  "name": "overview",
                  "type": {
                    "text": "GetInactiveOverviewResponse"
                  }
                },
                {
                  "name": "isFetching",
                  "default": "false"
                }
              ]
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@lit-labs/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "overviewTagName",
          "declaration": {
            "name": "overviewTagName",
            "module": "src/webviews/apps/plus/home/components/overview.ts"
          }
        },
        {
          "kind": "js",
          "name": "GlOverview",
          "declaration": {
            "name": "GlOverview",
            "module": "src/webviews/apps/plus/home/components/overview.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "GlOverview",
            "module": "src/webviews/apps/plus/home/components/overview.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/home/components/overviewState.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ActiveOverviewState",
          "members": [
            {
              "kind": "field",
              "name": "_disposable",
              "type": {
                "text": "Disposable | undefined"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "dispose"
            },
            {
              "kind": "method",
              "name": "changeRepository",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "_debounce",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "500",
              "inheritedFrom": {
                "name": "AsyncComputedState",
                "module": "src/webviews/apps/shared/components/signal-utils.ts"
              }
            },
            {
              "kind": "field",
              "name": "_invalidate",
              "privacy": "private",
              "inheritedFrom": {
                "name": "AsyncComputedState",
                "module": "src/webviews/apps/shared/components/signal-utils.ts"
              }
            },
            {
              "kind": "field",
              "name": "_computed",
              "type": {
                "text": "AsyncComputed<T> | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "AsyncComputedState",
                "module": "src/webviews/apps/shared/components/signal-utils.ts"
              }
            },
            {
              "kind": "field",
              "name": "_state",
              "privacy": "private",
              "inheritedFrom": {
                "name": "AsyncComputedState",
                "module": "src/webviews/apps/shared/components/signal-utils.ts"
              }
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "T | undefined"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "AsyncComputedState",
                "module": "src/webviews/apps/shared/components/signal-utils.ts"
              }
            },
            {
              "kind": "field",
              "name": "computed",
              "type": {
                "text": "AsyncComputed<T>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "AsyncComputedState",
                "module": "src/webviews/apps/shared/components/signal-utils.ts"
              }
            },
            {
              "kind": "method",
              "name": "_runCore",
              "privacy": "private",
              "inheritedFrom": {
                "name": "AsyncComputedState",
                "module": "src/webviews/apps/shared/components/signal-utils.ts"
              }
            },
            {
              "kind": "field",
              "name": "_runDebounced",
              "type": {
                "text": "Deferrable<() => void> | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "AsyncComputedState",
                "module": "src/webviews/apps/shared/components/signal-utils.ts"
              }
            },
            {
              "kind": "method",
              "name": "_run",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "immediate",
                  "default": "false"
                }
              ],
              "inheritedFrom": {
                "name": "AsyncComputedState",
                "module": "src/webviews/apps/shared/components/signal-utils.ts"
              }
            },
            {
              "kind": "method",
              "name": "run",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "force",
                  "default": "false"
                }
              ],
              "inheritedFrom": {
                "name": "AsyncComputedState",
                "module": "src/webviews/apps/shared/components/signal-utils.ts"
              }
            },
            {
              "kind": "method",
              "name": "invalidate",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "AsyncComputedState",
                "module": "src/webviews/apps/shared/components/signal-utils.ts"
              }
            }
          ],
          "superclass": {
            "name": "AsyncComputedState",
            "module": "/src/webviews/apps/shared/components/signal-utils"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "InactiveOverviewState",
          "members": [
            {
              "kind": "field",
              "name": "_disposable",
              "type": {
                "text": "Disposable | undefined"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "filter"
            },
            {
              "kind": "method",
              "name": "dispose",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "_debounce",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "500",
              "inheritedFrom": {
                "name": "AsyncComputedState",
                "module": "src/webviews/apps/shared/components/signal-utils.ts"
              }
            },
            {
              "kind": "field",
              "name": "_invalidate",
              "privacy": "private",
              "inheritedFrom": {
                "name": "AsyncComputedState",
                "module": "src/webviews/apps/shared/components/signal-utils.ts"
              }
            },
            {
              "kind": "field",
              "name": "_computed",
              "type": {
                "text": "AsyncComputed<T> | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "AsyncComputedState",
                "module": "src/webviews/apps/shared/components/signal-utils.ts"
              }
            },
            {
              "kind": "field",
              "name": "_state",
              "privacy": "private",
              "inheritedFrom": {
                "name": "AsyncComputedState",
                "module": "src/webviews/apps/shared/components/signal-utils.ts"
              }
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "T | undefined"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "AsyncComputedState",
                "module": "src/webviews/apps/shared/components/signal-utils.ts"
              }
            },
            {
              "kind": "field",
              "name": "computed",
              "type": {
                "text": "AsyncComputed<T>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "AsyncComputedState",
                "module": "src/webviews/apps/shared/components/signal-utils.ts"
              }
            },
            {
              "kind": "method",
              "name": "_runCore",
              "privacy": "private",
              "inheritedFrom": {
                "name": "AsyncComputedState",
                "module": "src/webviews/apps/shared/components/signal-utils.ts"
              }
            },
            {
              "kind": "field",
              "name": "_runDebounced",
              "type": {
                "text": "Deferrable<() => void> | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "AsyncComputedState",
                "module": "src/webviews/apps/shared/components/signal-utils.ts"
              }
            },
            {
              "kind": "method",
              "name": "_run",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "immediate",
                  "default": "false"
                }
              ],
              "inheritedFrom": {
                "name": "AsyncComputedState",
                "module": "src/webviews/apps/shared/components/signal-utils.ts"
              }
            },
            {
              "kind": "method",
              "name": "run",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "force",
                  "default": "false"
                }
              ],
              "inheritedFrom": {
                "name": "AsyncComputedState",
                "module": "src/webviews/apps/shared/components/signal-utils.ts"
              }
            },
            {
              "kind": "method",
              "name": "invalidate",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "AsyncComputedState",
                "module": "src/webviews/apps/shared/components/signal-utils.ts"
              }
            }
          ],
          "superclass": {
            "name": "AsyncComputedState",
            "module": "/src/webviews/apps/shared/components/signal-utils"
          }
        },
        {
          "kind": "variable",
          "name": "activeOverviewStateContext"
        },
        {
          "kind": "variable",
          "name": "inactiveOverviewStateContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ActiveOverviewState",
          "declaration": {
            "name": "ActiveOverviewState",
            "module": "src/webviews/apps/plus/home/components/overviewState.ts"
          }
        },
        {
          "kind": "js",
          "name": "InactiveOverviewState",
          "declaration": {
            "name": "InactiveOverviewState",
            "module": "src/webviews/apps/plus/home/components/overviewState.ts"
          }
        },
        {
          "kind": "js",
          "name": "activeOverviewStateContext",
          "declaration": {
            "name": "activeOverviewStateContext",
            "module": "src/webviews/apps/plus/home/components/overviewState.ts"
          }
        },
        {
          "kind": "js",
          "name": "inactiveOverviewStateContext",
          "declaration": {
            "name": "inactiveOverviewStateContext",
            "module": "src/webviews/apps/plus/home/components/overviewState.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/shared/components/account-chip.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlAccountChip",
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }"
            },
            {
              "kind": "field",
              "name": "_showUpgrade",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "showUpgrade",
              "privacy": "private",
              "attribute": "show-upgrade",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_chip",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_popover",
              "type": {
                "text": "GlPopover"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_state",
              "type": {
                "text": "State"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "accountAvatar",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "accountName",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "accountEmail",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "hasAccount",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "isReactivatedTrial",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "planId",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "effectivePlanId",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "planName",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "planTier",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "promos",
              "type": {
                "text": "PromosContext"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "subscription",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "subscriptionState",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "trialDaysRemaining",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "focus",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "show",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderAccountInfo",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderAccountState",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderIncludesDevEx",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderReferFriend",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderUpgradeContent",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderPromo",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "unknown"
                }
              },
              "parameters": [
                {
                  "name": "plan",
                  "type": {
                    "text": "PromoPlans"
                  }
                },
                {
                  "name": "type",
                  "default": "'info'",
                  "type": {
                    "text": "GlPromo['type']"
                  }
                },
                {
                  "name": "slot",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "show-upgrade",
              "fieldName": "showUpgrade"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-account-chip",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlAccountChip",
          "declaration": {
            "name": "GlAccountChip",
            "module": "src/webviews/apps/plus/shared/components/account-chip.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-account-chip",
          "declaration": {
            "name": "GlAccountChip",
            "module": "src/webviews/apps/plus/shared/components/account-chip.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/shared/components/chipStyles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "chipStyles",
          "default": "css` :host { display: flex; } .chip { display: flex; gap: 0.6rem; align-items: center; border-radius: 0.3rem; padding: 0.2rem 0.4rem; cursor: pointer; } .chip:focus-visible { ${focusOutline} } .content { display: flex; flex-direction: column; gap: 0.4rem; padding-bottom: 0.4rem; } .header { display: flex; align-items: center; gap: 0.6rem; width: 100%; padding-bottom: 0.4rem; } .header__actions { flex: none; display: flex; gap: 0.2rem; flex-direction: row; align-items: center; justify-content: center; } .header__title { flex: 1; font-size: 1.5rem; line-height: 1.7; font-weight: 600; margin: 0; white-space: nowrap; text-overflow: ellipsis; overflow: hidden; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "chipStyles",
          "declaration": {
            "name": "chipStyles",
            "module": "src/webviews/apps/plus/shared/components/chipStyles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/shared/components/feature-gate-plus-state.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlFeatureGatePlusState",
          "members": [
            {
              "kind": "field",
              "name": "button",
              "type": {
                "text": "GlButton"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "featurePreview",
              "type": {
                "text": "FeaturePreview | undefined"
              },
              "attribute": "featurePreview"
            },
            {
              "kind": "field",
              "name": "featurePreviewCommandLink",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "featurePreviewCommandLink"
            },
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "'alert' | 'welcome' | undefined"
              },
              "attribute": "appearance"
            },
            {
              "kind": "field",
              "name": "featureWithArticleIfNeeded",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "featureWithArticleIfNeeded"
            },
            {
              "kind": "field",
              "name": "promos",
              "type": {
                "text": "PromosContext"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "source",
              "type": {
                "text": "Source | undefined"
              },
              "attribute": "source"
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "SubscriptionState | undefined"
              }
            },
            {
              "kind": "field",
              "name": "webroot",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "webroot"
            },
            {
              "kind": "method",
              "name": "renderFeaturePreview",
              "privacy": "private",
              "parameters": [
                {
                  "name": "featurePreview",
                  "type": {
                    "text": "FeaturePreview"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderFeaturePreviewStep",
              "privacy": "private",
              "parameters": [
                {
                  "name": "featurePreview",
                  "type": {
                    "text": "FeaturePreview"
                  }
                },
                {
                  "name": "used",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderPromo",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "featurePreview",
              "type": {
                "text": "FeaturePreview | undefined"
              },
              "fieldName": "featurePreview"
            },
            {
              "name": "featurePreviewCommandLink",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "featurePreviewCommandLink"
            },
            {
              "name": "appearance",
              "type": {
                "text": "'alert' | 'welcome' | undefined"
              },
              "fieldName": "appearance"
            },
            {
              "name": "featureWithArticleIfNeeded",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "featureWithArticleIfNeeded"
            },
            {
              "name": "source",
              "type": {
                "text": "Source | undefined"
              },
              "fieldName": "source"
            },
            {
              "name": "webroot",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "webroot"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-feature-gate-plus-state",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlFeatureGatePlusState",
          "declaration": {
            "name": "GlFeatureGatePlusState",
            "module": "src/webviews/apps/plus/shared/components/feature-gate-plus-state.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-feature-gate-plus-state",
          "declaration": {
            "name": "GlFeatureGatePlusState",
            "module": "src/webviews/apps/plus/shared/components/feature-gate-plus-state.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/shared/components/home-header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlHomeHeader",
          "members": [
            {
              "kind": "field",
              "name": "accountChip",
              "type": {
                "text": "GlAccountChip"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "promoBanner",
              "type": {
                "text": "GlPromoBanner"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "show",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "refreshPromo",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-home-header",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlHomeHeader",
          "declaration": {
            "name": "GlHomeHeader",
            "module": "src/webviews/apps/plus/shared/components/home-header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-home-header",
          "declaration": {
            "name": "GlHomeHeader",
            "module": "src/webviews/apps/plus/shared/components/home-header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/shared/components/integrations-chip.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlIntegrationsChip",
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }"
            },
            {
              "kind": "field",
              "name": "_chip",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_state",
              "type": {
                "text": "State"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "hasAccount",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "isPaidAccount",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "isProAccount",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "hasConnectedIntegrations",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "ai",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "aiSettingEnabled",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "aiOrgEnabled",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "aiEnabled",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "integrations",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "focus",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderIntegrationStatus",
              "privacy": "private",
              "parameters": [
                {
                  "name": "integration",
                  "type": {
                    "text": "IntegrationState"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderIntegrationRow",
              "privacy": "private",
              "parameters": [
                {
                  "name": "integration",
                  "type": {
                    "text": "IntegrationState"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderAIStatus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderAIRow",
              "privacy": "private"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-integrations-chip",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlIntegrationsChip",
          "declaration": {
            "name": "GlIntegrationsChip",
            "module": "src/webviews/apps/plus/shared/components/integrations-chip.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-integrations-chip",
          "declaration": {
            "name": "GlIntegrationsChip",
            "module": "src/webviews/apps/plus/shared/components/integrations-chip.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/shared/components/merge-rebase-status.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlMergeConflictWarning",
          "members": [
            {
              "kind": "field",
              "name": "conflicts",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "conflicts",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pausedOpStatus",
              "type": {
                "text": "GitPausedOperationStatus | undefined"
              },
              "attribute": "pausedOpStatus"
            },
            {
              "kind": "field",
              "name": "skipCommand",
              "type": {
                "text": "string"
              },
              "default": "'gitlens.home.skipPausedOperation'",
              "attribute": "skipCommand"
            },
            {
              "kind": "field",
              "name": "continueCommand",
              "type": {
                "text": "string"
              },
              "default": "'gitlens.home.continuePausedOperation'",
              "attribute": "continueCommand"
            },
            {
              "kind": "field",
              "name": "abortCommand",
              "type": {
                "text": "string"
              },
              "default": "'gitlens.home.abortPausedOperation'",
              "attribute": "abortCommand"
            },
            {
              "kind": "field",
              "name": "openEditorCommand",
              "type": {
                "text": "string"
              },
              "default": "'gitlens.home.openRebaseEditor'",
              "attribute": "openEditorCommand"
            },
            {
              "kind": "field",
              "name": "webviewCommandContext",
              "type": {
                "text": "{ webview: string; webviewInstance: string | undefined } | undefined"
              },
              "attribute": "webviewCommandContext"
            },
            {
              "kind": "field",
              "name": "onSkipUrl",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "onContinueUrl",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "onAbortUrl",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "onOpenEditorUrl",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "createCommandLink",
              "privacy": "private",
              "parameters": [
                {
                  "name": "command",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "args",
                  "optional": true,
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderStatus",
              "privacy": "private",
              "parameters": [
                {
                  "name": "pausedOpStatus",
                  "type": {
                    "text": "GitPausedOperationStatus"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderActions",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "conflicts",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "conflicts"
            },
            {
              "name": "pausedOpStatus",
              "type": {
                "text": "GitPausedOperationStatus | undefined"
              },
              "fieldName": "pausedOpStatus"
            },
            {
              "name": "skipCommand",
              "type": {
                "text": "string"
              },
              "default": "'gitlens.home.skipPausedOperation'",
              "fieldName": "skipCommand"
            },
            {
              "name": "continueCommand",
              "type": {
                "text": "string"
              },
              "default": "'gitlens.home.continuePausedOperation'",
              "fieldName": "continueCommand"
            },
            {
              "name": "abortCommand",
              "type": {
                "text": "string"
              },
              "default": "'gitlens.home.abortPausedOperation'",
              "fieldName": "abortCommand"
            },
            {
              "name": "openEditorCommand",
              "type": {
                "text": "string"
              },
              "default": "'gitlens.home.openRebaseEditor'",
              "fieldName": "openEditorCommand"
            },
            {
              "name": "webviewCommandContext",
              "type": {
                "text": "{ webview: string; webviewInstance: string | undefined } | undefined"
              },
              "fieldName": "webviewCommandContext"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-merge-rebase-status",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlMergeConflictWarning",
          "declaration": {
            "name": "GlMergeConflictWarning",
            "module": "src/webviews/apps/plus/shared/components/merge-rebase-status.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-merge-rebase-status",
          "declaration": {
            "name": "GlMergeConflictWarning",
            "module": "src/webviews/apps/plus/shared/components/merge-rebase-status.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/shared/components/vscode.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "linkStyles",
          "default": "css` a { border: 0; color: var(--link-foreground); font-weight: 400; outline: none; text-decoration: var(--link-decoration-default, none); } a:focus-visible { outline: 1px solid var(--color-focus-border); border-radius: 0.2rem; } a:hover { color: var(--link-foreground-active); text-decoration: underline; } `"
        },
        {
          "kind": "variable",
          "name": "ruleStyles",
          "default": "css` hr { border: none; border-top: 1px solid var(--color-foreground--25); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "linkStyles",
          "declaration": {
            "name": "linkStyles",
            "module": "src/webviews/apps/plus/shared/components/vscode.css.ts"
          }
        },
        {
          "kind": "js",
          "name": "ruleStyles",
          "declaration": {
            "name": "ruleStyles",
            "module": "src/webviews/apps/plus/shared/components/vscode.css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/graph/actions/gitActionsButtons.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GitActionsButtons",
          "members": [
            {
              "kind": "field",
              "name": "branchState",
              "type": {
                "text": "BranchState | undefined"
              },
              "attribute": "branchState"
            },
            {
              "kind": "field",
              "name": "branchName",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "branchName"
            },
            {
              "kind": "field",
              "name": "lastFetched",
              "type": {
                "text": "Date | undefined"
              },
              "attribute": "lastFetched"
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "State"
              },
              "attribute": "state"
            },
            {
              "kind": "field",
              "name": "fetchedText",
              "privacy": "private",
              "readonly": true
            }
          ],
          "attributes": [
            {
              "name": "branchState",
              "type": {
                "text": "BranchState | undefined"
              },
              "fieldName": "branchState"
            },
            {
              "name": "branchName",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "branchName"
            },
            {
              "name": "lastFetched",
              "type": {
                "text": "Date | undefined"
              },
              "fieldName": "lastFetched"
            },
            {
              "name": "state",
              "type": {
                "text": "State"
              },
              "fieldName": "state"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-git-actions-buttons",
          "customElement": true
        },
        {
          "kind": "class",
          "description": "",
          "name": "GlFetchButton",
          "members": [
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "State"
              },
              "attribute": "state"
            },
            {
              "kind": "field",
              "name": "fetchedText",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "fetchedText"
            },
            {
              "kind": "field",
              "name": "branchState",
              "type": {
                "text": "BranchState | undefined"
              },
              "attribute": "branchState"
            },
            {
              "kind": "field",
              "name": "upstream",
              "privacy": "private",
              "readonly": true
            }
          ],
          "attributes": [
            {
              "name": "state",
              "type": {
                "text": "State"
              },
              "fieldName": "state"
            },
            {
              "name": "fetchedText",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "fetchedText"
            },
            {
              "name": "branchState",
              "type": {
                "text": "BranchState | undefined"
              },
              "fieldName": "branchState"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-fetch-button",
          "customElement": true
        },
        {
          "kind": "class",
          "description": "",
          "name": "PushPullButton",
          "members": [
            {
              "kind": "field",
              "name": "branchState",
              "type": {
                "text": "BranchState | undefined"
              },
              "attribute": "branchState"
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "State"
              },
              "attribute": "state"
            },
            {
              "kind": "field",
              "name": "fetchedText",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "fetchedText"
            },
            {
              "kind": "field",
              "name": "branchName",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "branchName"
            },
            {
              "kind": "field",
              "name": "isBehind",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "isAhead",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "upstream",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "renderBranchPrefix",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderTooltipContent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "action",
                  "type": {
                    "text": "'pull' | 'push'"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "branchState",
              "type": {
                "text": "BranchState | undefined"
              },
              "fieldName": "branchState"
            },
            {
              "name": "state",
              "type": {
                "text": "State"
              },
              "fieldName": "state"
            },
            {
              "name": "fetchedText",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "fetchedText"
            },
            {
              "name": "branchName",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "branchName"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-push-pull-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GitActionsButtons",
          "declaration": {
            "name": "GitActionsButtons",
            "module": "src/webviews/apps/plus/graph/actions/gitActionsButtons.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-git-actions-buttons",
          "declaration": {
            "name": "GitActionsButtons",
            "module": "src/webviews/apps/plus/graph/actions/gitActionsButtons.ts"
          }
        },
        {
          "kind": "js",
          "name": "GlFetchButton",
          "declaration": {
            "name": "GlFetchButton",
            "module": "src/webviews/apps/plus/graph/actions/gitActionsButtons.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-fetch-button",
          "declaration": {
            "name": "GlFetchButton",
            "module": "src/webviews/apps/plus/graph/actions/gitActionsButtons.ts"
          }
        },
        {
          "kind": "js",
          "name": "PushPullButton",
          "declaration": {
            "name": "PushPullButton",
            "module": "src/webviews/apps/plus/graph/actions/gitActionsButtons.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-push-pull-button",
          "declaration": {
            "name": "PushPullButton",
            "module": "src/webviews/apps/plus/graph/actions/gitActionsButtons.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/graph/graph-wrapper/graph-wrapper-element.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A LitElement web component that encapsulates the GraphWrapperReact component.\nThis component mounts the React component once and then updates its state\nwithout remounting on subsequent property changes.",
          "name": "GlGraph",
          "members": [
            {
              "kind": "field",
              "name": "reactRoot",
              "type": {
                "text": "ReturnType<typeof createRoot> | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "provideReactState",
              "type": {
                "text": "((props: Partial<GraphWrapperSubscriberProps>) => void) | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "setReactStateProvider",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "activeRow",
              "type": {
                "text": "GraphWrapperProps['activeRow'] | undefined"
              },
              "attribute": "activeRow"
            },
            {
              "kind": "field",
              "name": "avatars",
              "type": {
                "text": "GraphWrapperProps['avatars'] | undefined"
              },
              "attribute": "avatars"
            },
            {
              "kind": "field",
              "name": "columns",
              "type": {
                "text": "GraphWrapperProps['columns'] | undefined"
              },
              "attribute": "columns"
            },
            {
              "kind": "field",
              "name": "context",
              "type": {
                "text": "GraphWrapperProps['context'] | undefined"
              },
              "attribute": "context"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "GraphWrapperProps['config'] | undefined"
              },
              "attribute": "config"
            },
            {
              "kind": "field",
              "name": "downstreams",
              "type": {
                "text": "GraphWrapperProps['downstreams'] | undefined"
              },
              "attribute": "downstreams"
            },
            {
              "kind": "field",
              "name": "rows",
              "type": {
                "text": "GraphWrapperProps['rows'] | undefined"
              },
              "attribute": "rows"
            },
            {
              "kind": "field",
              "name": "excludeRefs",
              "type": {
                "text": "GraphWrapperProps['excludeRefs'] | undefined"
              },
              "attribute": "excludeRefs"
            },
            {
              "kind": "field",
              "name": "excludeTypes",
              "type": {
                "text": "GraphWrapperProps['excludeTypes'] | undefined"
              },
              "attribute": "excludeTypes"
            },
            {
              "kind": "field",
              "name": "paging",
              "type": {
                "text": "GraphWrapperProps['paging'] | undefined"
              },
              "attribute": "paging"
            },
            {
              "kind": "field",
              "name": "loading",
              "type": {
                "text": "GraphWrapperProps['loading'] | undefined"
              },
              "attribute": "loading"
            },
            {
              "kind": "field",
              "name": "selectedRows",
              "type": {
                "text": "GraphWrapperProps['selectedRows'] | undefined"
              },
              "attribute": "selectedRows"
            },
            {
              "kind": "field",
              "name": "windowFocused",
              "type": {
                "text": "GraphWrapperProps['windowFocused'] | undefined"
              },
              "attribute": "windowFocused"
            },
            {
              "kind": "field",
              "name": "refsMetadata",
              "type": {
                "text": "GraphWrapperProps['refsMetadata'] | undefined"
              },
              "attribute": "refsMetadata"
            },
            {
              "kind": "field",
              "name": "includeOnlyRefs",
              "type": {
                "text": "GraphWrapperProps['includeOnlyRefs'] | undefined"
              },
              "attribute": "includeOnlyRefs"
            },
            {
              "kind": "field",
              "name": "rowsStats",
              "type": {
                "text": "GraphWrapperProps['rowsStats'] | undefined"
              },
              "attribute": "rowsStats"
            },
            {
              "kind": "field",
              "name": "rowsStatsLoading",
              "type": {
                "text": "GraphWrapperProps['rowsStatsLoading'] | undefined"
              },
              "attribute": "rowsStatsLoading"
            },
            {
              "kind": "field",
              "name": "workingTreeStats",
              "type": {
                "text": "GraphWrapperProps['workingTreeStats'] | undefined"
              },
              "attribute": "workingTreeStats"
            },
            {
              "kind": "field",
              "name": "theming",
              "type": {
                "text": "GraphWrapperProps['theming'] | undefined"
              },
              "attribute": "theming"
            },
            {
              "kind": "field",
              "name": "searchResults",
              "type": {
                "text": "GraphWrapperProps['searchResults'] | undefined"
              },
              "attribute": "searchResults"
            },
            {
              "kind": "field",
              "name": "filter",
              "type": {
                "text": "SearchQuery"
              },
              "attribute": "filter"
            },
            {
              "kind": "field",
              "name": "setRef",
              "type": {
                "text": "(ref: GraphContainer) => void"
              }
            },
            {
              "kind": "field",
              "name": "changedProps",
              "type": {
                "text": "Map<string, unknown>"
              },
              "privacy": "private",
              "default": "new Map()"
            },
            {
              "kind": "field",
              "name": "updateScheduled",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "handleChangeColumns",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleChangeRefsVisibility",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleChangeSelection",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleChangeVisibleDays",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleMissingAvatars",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleMissingRefsMetadata",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleMoreRows",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleMouseLeave",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleRefDoubleClick",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleRowContextMenu",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleRowDoubleClick",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleRowHover",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "handleRowUnhover",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "activeRow",
              "type": {
                "text": "GraphWrapperProps['activeRow'] | undefined"
              },
              "fieldName": "activeRow"
            },
            {
              "name": "avatars",
              "type": {
                "text": "GraphWrapperProps['avatars'] | undefined"
              },
              "fieldName": "avatars"
            },
            {
              "name": "columns",
              "type": {
                "text": "GraphWrapperProps['columns'] | undefined"
              },
              "fieldName": "columns"
            },
            {
              "name": "context",
              "type": {
                "text": "GraphWrapperProps['context'] | undefined"
              },
              "fieldName": "context"
            },
            {
              "name": "config",
              "type": {
                "text": "GraphWrapperProps['config'] | undefined"
              },
              "fieldName": "config"
            },
            {
              "name": "downstreams",
              "type": {
                "text": "GraphWrapperProps['downstreams'] | undefined"
              },
              "fieldName": "downstreams"
            },
            {
              "name": "rows",
              "type": {
                "text": "GraphWrapperProps['rows'] | undefined"
              },
              "fieldName": "rows"
            },
            {
              "name": "excludeRefs",
              "type": {
                "text": "GraphWrapperProps['excludeRefs'] | undefined"
              },
              "fieldName": "excludeRefs"
            },
            {
              "name": "excludeTypes",
              "type": {
                "text": "GraphWrapperProps['excludeTypes'] | undefined"
              },
              "fieldName": "excludeTypes"
            },
            {
              "name": "paging",
              "type": {
                "text": "GraphWrapperProps['paging'] | undefined"
              },
              "fieldName": "paging"
            },
            {
              "name": "loading",
              "type": {
                "text": "GraphWrapperProps['loading'] | undefined"
              },
              "fieldName": "loading"
            },
            {
              "name": "selectedRows",
              "type": {
                "text": "GraphWrapperProps['selectedRows'] | undefined"
              },
              "fieldName": "selectedRows"
            },
            {
              "name": "windowFocused",
              "type": {
                "text": "GraphWrapperProps['windowFocused'] | undefined"
              },
              "fieldName": "windowFocused"
            },
            {
              "name": "refsMetadata",
              "type": {
                "text": "GraphWrapperProps['refsMetadata'] | undefined"
              },
              "fieldName": "refsMetadata"
            },
            {
              "name": "includeOnlyRefs",
              "type": {
                "text": "GraphWrapperProps['includeOnlyRefs'] | undefined"
              },
              "fieldName": "includeOnlyRefs"
            },
            {
              "name": "rowsStats",
              "type": {
                "text": "GraphWrapperProps['rowsStats'] | undefined"
              },
              "fieldName": "rowsStats"
            },
            {
              "name": "rowsStatsLoading",
              "type": {
                "text": "GraphWrapperProps['rowsStatsLoading'] | undefined"
              },
              "fieldName": "rowsStatsLoading"
            },
            {
              "name": "workingTreeStats",
              "type": {
                "text": "GraphWrapperProps['workingTreeStats'] | undefined"
              },
              "fieldName": "workingTreeStats"
            },
            {
              "name": "theming",
              "type": {
                "text": "GraphWrapperProps['theming'] | undefined"
              },
              "fieldName": "theming"
            },
            {
              "name": "searchResults",
              "type": {
                "text": "GraphWrapperProps['searchResults'] | undefined"
              },
              "fieldName": "searchResults"
            },
            {
              "name": "filter",
              "type": {
                "text": "SearchQuery"
              },
              "fieldName": "filter"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-graph",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlGraph",
          "declaration": {
            "name": "GlGraph",
            "module": "src/webviews/apps/plus/graph/graph-wrapper/graph-wrapper-element.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-graph",
          "declaration": {
            "name": "GlGraph",
            "module": "src/webviews/apps/plus/graph/graph-wrapper/graph-wrapper-element.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/graph/graph-wrapper/graph-wrapper.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlGraphWrapper",
          "members": [
            {
              "kind": "field",
              "name": "graphAppState",
              "type": {
                "text": "typeof graphStateContext.__context__"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "hostState",
              "type": {
                "text": "typeof stateContext.__context__"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_ipc",
              "type": {
                "text": "typeof ipcContext.__context__"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_telemetry",
              "type": {
                "text": "TelemetryContext"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "graph",
              "type": {
                "text": "typeof GlGraph"
              }
            },
            {
              "kind": "field",
              "name": "ref",
              "type": {
                "text": "GraphContainer | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onSetRef",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "selectCommits",
              "parameters": [
                {
                  "name": "shaList",
                  "type": {
                    "text": "string[]"
                  }
                },
                {
                  "name": "includeToPrevSel",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "isAutoOrKeyScroll",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onColumnsChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEventType<'graph-changecolumns'>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onGetMoreRows",
              "privacy": "private",
              "parameters": [
                {
                  "name": "{ detail: sha }",
                  "type": {
                    "text": "CustomEventType<'graph-morerows'>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onMouseLeave",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onMissingAvatars",
              "privacy": "private",
              "parameters": [
                {
                  "name": "{ detail: emails }",
                  "type": {
                    "text": "CustomEventType<'graph-missingavatars'>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onMissingRefsMetadata",
              "privacy": "private",
              "parameters": [
                {
                  "name": "{ detail: metadata }",
                  "type": {
                    "text": "CustomEventType<'graph-missingrefsmetadata'>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onRefDoubleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "{ detail: { ref, metadata } }",
                  "type": {
                    "text": "CustomEventType<'graph-doubleclickref'>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onRefsVisibilityChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "{ detail }",
                  "type": {
                    "text": "CustomEventType<'graph-changerefsvisibility'>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onRowContextMenu",
              "privacy": "private",
              "parameters": [
                {
                  "name": "{ detail: { graphRow, graphZoneType } }",
                  "type": {
                    "text": "CustomEventType<'graph-rowcontextmenu'>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onRowDoubleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "{ detail: { row, preserveFocus } }",
                  "type": {
                    "text": "CustomEventType<'graph-doubleclickrow'>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onRowHover",
              "privacy": "private",
              "parameters": [
                {
                  "name": "{ detail }",
                  "type": {
                    "text": "CustomEventType<'graph-graphrowhovered'>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onRowUnhover",
              "privacy": "private",
              "parameters": [
                {
                  "name": "{ detail }",
                  "type": {
                    "text": "CustomEventType<'graph-graphrowunhovered'>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onSelectionChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "{ detail: rows }",
                  "type": {
                    "text": "CustomEventType<'graph-changeselection'>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onVisibleDaysChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "{ detail }",
                  "type": {
                    "text": "CustomEventType<'graph-changevisibledays'>"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "gl-graph-mouse-leave",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "gl-graph-row-context-menu",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "gl-graph-row-hover",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "gl-graph-row-unhover",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "gl-graph-change-selection",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "gl-graph-change-visible-days",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@lit-labs/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-graph-wrapper",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlGraphWrapper",
          "declaration": {
            "name": "GlGraphWrapper",
            "module": "src/webviews/apps/plus/graph/graph-wrapper/graph-wrapper.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-graph-wrapper",
          "declaration": {
            "name": "GlGraphWrapper",
            "module": "src/webviews/apps/plus/graph/graph-wrapper/graph-wrapper.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/graph/hover/graphHover.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlGraphHover",
          "members": [
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "Anchor | undefined"
              },
              "attribute": "anchor"
            },
            {
              "kind": "field",
              "name": "distance",
              "type": {
                "text": "number | undefined | undefined"
              },
              "attribute": "distance",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "attribute": "open",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "GlPopover['placement'] | undefined"
              },
              "default": "'bottom-start'",
              "attribute": "placement",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "markdown",
              "type": {
                "text": "Promise<PromiseSettledResult<string>> | string | undefined"
              },
              "attribute": "markdown"
            },
            {
              "kind": "field",
              "name": "skidding",
              "type": {
                "text": "number | undefined | undefined"
              },
              "attribute": "skidding",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "requestMarkdown",
              "type": {
                "text": "((row: GraphRow) => Promise<DidGetRowHoverParams>) | undefined"
              },
              "attribute": "requestMarkdown"
            },
            {
              "kind": "field",
              "name": "popup",
              "type": {
                "text": "GlPopover"
              }
            },
            {
              "kind": "field",
              "name": "hoverMarkdownCache",
              "privacy": "private",
              "default": "new Map< string, Promise<PromiseSettledResult<string>> | PromiseSettledResult<string> | string >()"
            },
            {
              "kind": "field",
              "name": "shaHovering",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "unhoverTimer",
              "type": {
                "text": "ReturnType<typeof setTimeout> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "previousSkidding",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "recalculated",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "method",
              "name": "onReposition",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "reset",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "onParentMouseLeave",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_showCoreDebounced",
              "type": {
                "text": "Deferrable<GlGraphHover['showCore']> | undefined"
              },
              "privacy": "private",
              "default": "undefined"
            },
            {
              "kind": "method",
              "name": "onRowHovered",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "row",
                  "type": {
                    "text": "GraphRow"
                  }
                },
                {
                  "name": "anchor",
                  "type": {
                    "text": "Anchor"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onRowUnhovered",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_row",
                  "type": {
                    "text": "GraphRow"
                  }
                },
                {
                  "name": "relatedTarget",
                  "type": {
                    "text": "EventTarget | null"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "onWindowKeydown",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "showCore",
              "privacy": "private",
              "parameters": [
                {
                  "name": "anchor",
                  "type": {
                    "text": "string | HTMLElement | { getBoundingClientRect: () => Omit<DOMRect, 'toJSON'> }"
                  }
                },
                {
                  "name": "markdown",
                  "type": {
                    "text": "Promise<PromiseSettledResult<string>> | PromiseSettledResult<string> | string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_lastUnhoveredTimestamp",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "method",
              "name": "hide",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "resetUnhoverTimer",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "anchor",
              "type": {
                "text": "Anchor | undefined"
              },
              "fieldName": "anchor"
            },
            {
              "name": "distance",
              "type": {
                "text": "number | undefined | undefined"
              },
              "fieldName": "distance"
            },
            {
              "name": "open",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "fieldName": "open"
            },
            {
              "name": "placement",
              "type": {
                "text": "GlPopover['placement'] | undefined"
              },
              "default": "'bottom-start'",
              "fieldName": "placement"
            },
            {
              "name": "markdown",
              "type": {
                "text": "Promise<PromiseSettledResult<string>> | string | undefined"
              },
              "fieldName": "markdown"
            },
            {
              "name": "skidding",
              "type": {
                "text": "number | undefined | undefined"
              },
              "fieldName": "skidding"
            },
            {
              "name": "requestMarkdown",
              "type": {
                "text": "((row: GraphRow) => Promise<DidGetRowHoverParams>) | undefined"
              },
              "fieldName": "requestMarkdown"
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          },
          "tagName": "gl-graph-hover",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlGraphHover",
          "declaration": {
            "name": "GlGraphHover",
            "module": "src/webviews/apps/plus/graph/hover/graphHover.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-graph-hover",
          "declaration": {
            "name": "GlGraphHover",
            "module": "src/webviews/apps/plus/graph/hover/graphHover.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/graph/minimap/minimap-container.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlGraphMinimapContainer",
          "members": [
            {
              "kind": "field",
              "name": "activeDay",
              "type": {
                "text": "number | undefined"
              },
              "attribute": "activeDay"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled"
            },
            {
              "kind": "method",
              "name": "onDisabledChanged",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "dataType",
              "type": {
                "text": "'commits' | 'lines'"
              },
              "default": "'commits'",
              "attribute": "dataType"
            },
            {
              "kind": "field",
              "name": "downstreams",
              "type": {
                "text": "GraphDownstreams | undefined"
              },
              "attribute": "downstreams"
            },
            {
              "kind": "field",
              "name": "markerTypes",
              "type": {
                "text": "GraphMinimapMarkerTypes[]"
              },
              "default": "[]",
              "attribute": "markerTypes"
            },
            {
              "kind": "field",
              "name": "refMetadata",
              "type": {
                "text": "GraphRefsMetadata | null | undefined"
              },
              "attribute": "refMetadata"
            },
            {
              "kind": "field",
              "name": "rows",
              "type": {
                "text": "GraphRow[]"
              },
              "default": "[]",
              "attribute": "rows"
            },
            {
              "kind": "field",
              "name": "rowsStats",
              "type": {
                "text": "Record<string, GraphRowStats> | undefined"
              },
              "attribute": "rowsStats"
            },
            {
              "kind": "field",
              "name": "searchResults",
              "type": {
                "text": "GraphSearchResults | GraphSearchResultsError | undefined"
              },
              "attribute": "searchResults"
            },
            {
              "kind": "field",
              "name": "visibleDays",
              "type": {
                "text": "{ top: number; bottom: number } | undefined"
              },
              "attribute": "visibleDays"
            },
            {
              "kind": "field",
              "name": "markersByDay",
              "privacy": "private",
              "default": "new Map<number, GraphMinimapMarker[]>()"
            },
            {
              "kind": "field",
              "name": "searchResultsByDay",
              "privacy": "private",
              "default": "new Map<number, GraphMinimapSearchResultMarker>()"
            },
            {
              "kind": "field",
              "name": "statsByDay",
              "privacy": "private",
              "default": "new Map<number, GraphMinimapStats>()"
            },
            {
              "kind": "field",
              "name": "pendingDataChange",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "method",
              "name": "handleDataChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "changedKeys",
                  "type": {
                    "text": "PropertyKey[]"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "pendingSearchResultsChange",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "method",
              "name": "handleSearchResultsChanged",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "minimap",
              "type": {
                "text": "GlGraphMinimap | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "select",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "date",
                  "type": {
                    "text": "number | Date | undefined"
                  }
                },
                {
                  "name": "trackOnly",
                  "default": "false",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "unselect",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "date",
                  "optional": true,
                  "type": {
                    "text": "number | Date"
                  }
                },
                {
                  "name": "focus",
                  "default": "false",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "processRows",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "processSearchResults",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "activeDay",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "activeDay"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "dataType",
              "type": {
                "text": "'commits' | 'lines'"
              },
              "default": "'commits'",
              "fieldName": "dataType"
            },
            {
              "name": "downstreams",
              "type": {
                "text": "GraphDownstreams | undefined"
              },
              "fieldName": "downstreams"
            },
            {
              "name": "markerTypes",
              "type": {
                "text": "GraphMinimapMarkerTypes[]"
              },
              "default": "[]",
              "fieldName": "markerTypes"
            },
            {
              "name": "refMetadata",
              "type": {
                "text": "GraphRefsMetadata | null | undefined"
              },
              "fieldName": "refMetadata"
            },
            {
              "name": "rows",
              "type": {
                "text": "GraphRow[]"
              },
              "default": "[]",
              "fieldName": "rows"
            },
            {
              "name": "rowsStats",
              "type": {
                "text": "Record<string, GraphRowStats> | undefined"
              },
              "fieldName": "rowsStats"
            },
            {
              "name": "searchResults",
              "type": {
                "text": "GraphSearchResults | GraphSearchResultsError | undefined"
              },
              "fieldName": "searchResults"
            },
            {
              "name": "visibleDays",
              "type": {
                "text": "{ top: number; bottom: number } | undefined"
              },
              "fieldName": "visibleDays"
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          },
          "tagName": "gl-graph-minimap-container",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlGraphMinimapContainer",
          "declaration": {
            "name": "GlGraphMinimapContainer",
            "module": "src/webviews/apps/plus/graph/minimap/minimap-container.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-graph-minimap-container",
          "declaration": {
            "name": "GlGraphMinimapContainer",
            "module": "src/webviews/apps/plus/graph/minimap/minimap-container.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/graph/minimap/minimap.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlGraphMinimap",
          "members": [
            {
              "kind": "field",
              "name": "chartContainer",
              "type": {
                "text": "HTMLDivElement"
              }
            },
            {
              "kind": "field",
              "name": "_chart",
              "type": {
                "text": "Chart"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "spinner",
              "type": {
                "text": "HTMLDivElement"
              }
            },
            {
              "kind": "field",
              "name": "_loadTimer",
              "type": {
                "text": "ReturnType<typeof setTimeout> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_markerRegions",
              "type": {
                "text": "Iterable<RegionOptions> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_regions",
              "type": {
                "text": "RegionOptions[] | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "activeDay",
              "type": {
                "text": "number | undefined"
              },
              "attribute": "activeDay"
            },
            {
              "kind": "method",
              "name": "onActiveDayChanged",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "Map<number, GraphMinimapStats | null> | undefined"
              },
              "attribute": "data"
            },
            {
              "kind": "field",
              "name": "dataType",
              "type": {
                "text": "'commits' | 'lines'"
              },
              "default": "'commits'",
              "attribute": "dataType"
            },
            {
              "kind": "method",
              "name": "onDataChanged",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "markers",
              "type": {
                "text": "Map<number, GraphMinimapMarker[]> | undefined"
              },
              "attribute": "markers"
            },
            {
              "kind": "method",
              "name": "onMarkersChanged",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "searchResults",
              "type": {
                "text": "Map<number, GraphMinimapSearchResultMarker> | undefined"
              },
              "attribute": "searchResults"
            },
            {
              "kind": "method",
              "name": "onSearchResultsChanged",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "visibleDays",
              "type": {
                "text": "{ top: number; bottom: number } | undefined"
              },
              "attribute": "visibleDays"
            },
            {
              "kind": "method",
              "name": "onVisibleDaysChanged",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleDataChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "markerChanged",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getInternalChart",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "ChartInternal | undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "select",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "date",
                  "type": {
                    "text": "number | Date | undefined"
                  }
                },
                {
                  "name": "trackOnly",
                  "default": "false",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "unselect",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "date",
                  "optional": true,
                  "type": {
                    "text": "number | Date"
                  }
                },
                {
                  "name": "focus",
                  "default": "false",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getDataPoint",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "DataItem | undefined"
                }
              },
              "parameters": [
                {
                  "name": "date",
                  "type": {
                    "text": "number | Date"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getIndex",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number | undefined"
                }
              },
              "parameters": [
                {
                  "name": "date",
                  "type": {
                    "text": "number | Date"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getMarkerRegions",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "getAllRegions",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "getSearchResultsRegions",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Iterable<RegionOptions>"
                }
              },
              "parameters": [
                {
                  "name": "searchResults",
                  "type": {
                    "text": "NonNullable<typeof this.searchResults>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getVisibleAreaRegion",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "RegionOptions"
                }
              },
              "parameters": [
                {
                  "name": "visibleDays",
                  "type": {
                    "text": "NonNullable<typeof this.visibleDays>"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_loading",
              "type": {
                "text": "Promise<void> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "loadChart",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "loadChartCore",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "activeDay",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "activeDay"
            },
            {
              "name": "data",
              "type": {
                "text": "Map<number, GraphMinimapStats | null> | undefined"
              },
              "fieldName": "data"
            },
            {
              "name": "dataType",
              "type": {
                "text": "'commits' | 'lines'"
              },
              "default": "'commits'",
              "fieldName": "dataType"
            },
            {
              "name": "markers",
              "type": {
                "text": "Map<number, GraphMinimapMarker[]> | undefined"
              },
              "fieldName": "markers"
            },
            {
              "name": "searchResults",
              "type": {
                "text": "Map<number, GraphMinimapSearchResultMarker> | undefined"
              },
              "fieldName": "searchResults"
            },
            {
              "name": "visibleDays",
              "type": {
                "text": "{ top: number; bottom: number } | undefined"
              },
              "fieldName": "visibleDays"
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          },
          "tagName": "gl-graph-minimap",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlGraphMinimap",
          "declaration": {
            "name": "GlGraphMinimap",
            "module": "src/webviews/apps/plus/graph/minimap/minimap.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-graph-minimap",
          "declaration": {
            "name": "GlGraphMinimap",
            "module": "src/webviews/apps/plus/graph/minimap/minimap.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/graph/sidebar/sidebar.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlGraphSideBar",
          "members": [
            {
              "kind": "field",
              "name": "include",
              "type": {
                "text": "undefined | IconTypes[]"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_ipc",
              "type": {
                "text": "HostIpc"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_state",
              "type": {
                "text": "State"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_disposable",
              "type": {
                "text": "Disposable | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_countsTask",
              "privacy": "private",
              "default": "new Task(this, { args: () => [this.fetchCounts()], task: ([counts]) => counts, autoRun: false, })"
            },
            {
              "kind": "field",
              "name": "_counts",
              "type": {
                "text": "Promise<Counts | undefined> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "fetchCounts",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderIcon",
              "privacy": "private",
              "parameters": [
                {
                  "name": "icon",
                  "type": {
                    "text": "Icon"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "sendTelemetry",
              "privacy": "private",
              "parameters": [
                {
                  "name": "command",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-graph-sidebar",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlGraphSideBar",
          "declaration": {
            "name": "GlGraphSideBar",
            "module": "src/webviews/apps/plus/graph/sidebar/sidebar.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-graph-sidebar",
          "declaration": {
            "name": "GlGraphSideBar",
            "module": "src/webviews/apps/plus/graph/sidebar/sidebar.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/graph/styles/graph.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "linkBase",
          "default": "css` a { text-decoration: none; } a:focus { ${focusOutline} } a:hover { text-decoration: underline; } `"
        },
        {
          "kind": "variable",
          "name": "actionButton",
          "default": "css` .action-button { position: relative; appearance: none; font-family: inherit; font-size: 1.2rem; line-height: 2.2rem; // background-color: var(--color-graph-actionbar-background); background-color: transparent; border: none; color: inherit; color: var(--color-foreground); padding: 0 0.75rem; cursor: pointer; border-radius: 3px; height: auto; display: grid; grid-auto-flow: column; grid-gap: 0.5rem; gap: 0.5rem; max-width: fit-content; } .action-button[disabled] { pointer-events: none; cursor: default; opacity: 1; } .action-button:hover { background-color: var(--color-graph-actionbar-selectedBackground); color: var(--color-foreground); text-decoration: none; } .action-button[aria-checked] { border: 1px solid transparent; } .action-button[aria-checked='true'] { background-color: var(--vscode-inputOption-activeBackground); color: var(--vscode-inputOption-activeForeground); border-color: var(--vscode-inputOption-activeBorder); } .action-button code-icon { line-height: 2.2rem; vertical-align: bottom; } .action-button code-icon[icon='graph-line'] { transform: translateY(1px); } .is-ahead .action-button__pill { background-color: var(--branch-status-ahead-pill-background); } .is-behind .action-button__pill { background-color: var(--branch-status-behind-pill-background); } .is-ahead.is-behind .action-button__pill { background-color: var(--branch-status-both-pill-background); } .action-button__more, .action-button__more.codicon[class*='codicon-'] { font-size: 1rem; margin-right: -0.25rem; } code-icon.action-button__more::before { margin-left: -0.25rem; } .action-button__indicator { margin-left: -0.2rem; --gl-indicator-color: green; --gl-indicator-size: 0.4rem; } .action-button__small { font-size: smaller; opacity: 0.6; text-overflow: ellipsis; overflow: hidden; } .action-button.is-ahead { background-color: var(--branch-status-ahead-background); } .action-button.is-ahead:hover { background-color: var(--branch-status-ahead-hover-background); } .action-button.is-behind { background-color: var(--branch-status-behind-background); } .action-button.is-behind:hover { background-color: var(--branch-status-behind-hover-background); } .action-button.is-ahead.is-behind { background-color: var(--branch-status-both-background); } .action-button.is-ahead.is-behind:hover { background-color: var(--branch-status-both-hover-background); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "linkBase",
          "declaration": {
            "name": "linkBase",
            "module": "src/webviews/apps/plus/graph/styles/graph.css.ts"
          }
        },
        {
          "kind": "js",
          "name": "actionButton",
          "declaration": {
            "name": "actionButton",
            "module": "src/webviews/apps/plus/graph/styles/graph.css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/graph/styles/header.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "repoHeaderStyles",
          "default": "css` .jump-to-ref { --button-foreground: var(--color-foreground); } .merge-conflict-warning { flex: 0 0 100%; min-width: 0; } `"
        },
        {
          "kind": "variable",
          "name": "progressStyles",
          "default": "css` .progress-container { position: absolute; left: 0; bottom: 0; z-index: 5; height: 2px; width: 100%; overflow: hidden; } .progress-container .progress-bar { background-color: var(--vscode-progressBar-background); display: none; position: absolute; left: 0; width: 2%; height: 2px; } .progress-container.active .progress-bar { display: inherit; } .progress-container.discrete .progress-bar { left: 0; transition: width 0.1s linear; } .progress-container.discrete.done .progress-bar { width: 100%; } .progress-container.infinite .progress-bar { animation-name: progress; animation-duration: 4s; animation-iteration-count: infinite; animation-timing-function: steps(100); transform: translateZ(0); } @keyframes progress { 0% { transform: translateX(0) scaleX(1); } 50% { transform: translateX(2500%) scaleX(3); } to { transform: translateX(4900%) scaleX(1); } } `"
        },
        {
          "kind": "variable",
          "name": "titlebarStyles",
          "default": "css` .titlebar { background: var(--titlebar-bg); color: var(--titlebar-fg); padding: 0.6rem 0.8rem; font-size: 1.3rem; flex-wrap: wrap; } .titlebar, .titlebar__row, .titlebar__group { display: flex; flex-direction: row; align-items: center; gap: 0.5rem; } .titlebar > *, .titlebar__row > *, .titlebar__group > * { margin: 0; } .titlebar, .titlebar__row { justify-content: space-between; } .titlebar__row { flex: 0 0 100%; } .titlebar__row--wrap { display: grid; grid-auto-flow: column; justify-content: start; grid-template-columns: 1fr min-content; } .titlebar__group { flex: auto 1 1; } .titlebar__row--wrap .titlebar__group { white-space: nowrap; } .titlebar__row--wrap .titlebar__group:nth-child(odd) { min-width: 0; } .titlebar__debugging > * { display: inline-block; } .titlebar gl-feature-badge { color: var(--color-foreground); } `"
        },
        {
          "kind": "variable",
          "name": "graphHeaderControlStyles",
          "default": "css` .popover::part(body) { padding: 0; font-size: var(--vscode-font-size); background-color: var(--vscode-menu-background); } .titlebar__group gl-repo-button-group, .titlebar__group gl-ref-button { font-size: 1.2rem; } .shrink { max-width: fit-content; transition: all 0.2s; } .shrink.hidden { max-width: 0; overflow: hidden; } .titlebar__group .shrink.hidden:not(:first-child) { // compensate the parent gap margin-left: -0.5rem; } .branch-menu { display: flex; gap: 0.5em; align-items: center; } .branch-menu__avatar { width: 1.4rem; aspect-ratio: 1; vertical-align: text-bottom; } .action-divider { display: inline-block; width: 0.1rem; height: 2.2rem; vertical-align: middle; background-color: var(--titlebar-fg); opacity: 0.4; margin: { // left: 0.2rem; right: 0.2rem; } } .button-group { display: flex; flex-direction: row; align-items: stretch; } .button-group:hover, .button-group:focus-within { background-color: var(--color-graph-actionbar-selectedBackground); border-radius: 3px; } .button-group > *:not(:first-child), .button-group > *:not(:first-child) .action-button { display: flex; border-top-left-radius: 0; border-bottom-left-radius: 0; } .button-group > *:not(:first-child) .action-button { padding-left: 0.5rem; padding-right: 0.5rem; height: 100%; } .button-group:hover > *:not(:last-child), .button-group:active > *:not(:last-child), .button-group:focus-within > *:not(:last-child), .button-group:hover > *:not(:last-child) .action-button, .button-group:active > *:not(:last-child) .action-button, .button-group:focus-within > *:not(:last-child) .action-button { border-top-right-radius: 0; border-bottom-right-radius: 0; } .minimap-marker-swatch { display: inline-block; width: 1rem; height: 1rem; border-radius: 2px; transform: scale(1.6); margin-left: 0.3rem; margin-right: 1rem; } .minimap-marker-swatch[data-marker='localBranches'] { background-color: var(--color-graph-minimap-marker-local-branches); } .minimap-marker-swatch[data-marker='pullRequests'] { background-color: var(--color-graph-minimap-marker-pull-requests); } .minimap-marker-swatch[data-marker='remoteBranches'] { background-color: var(--color-graph-minimap-marker-remote-branches); } .minimap-marker-swatch[data-marker='stashes'] { background-color: var(--color-graph-minimap-marker-stashes); } .minimap-marker-swatch[data-marker='tags'] { background-color: var(--color-graph-minimap-marker-tags); } gl-search-box::part(search) { --gl-search-input-background: var(--color-graph-actionbar-background); --gl-search-input-border: var(--sl-input-border-color); } sl-option::part(base) { padding: 0.2rem 0.4rem; } sl-option[aria-selected='true']::part(base), sl-option:not([aria-selected='true']):hover::part(base), sl-option:not([aria-selected='true']):focus::part(base) { background-color: var(--vscode-list-activeSelectionBackground); color: var(--vscode-list-activeSelectionForeground); } sl-option::part(checked-icon) { display: none; } sl-select::part(listbox) { padding-block: 0.2rem 0; width: max-content; } sl-select::part(combobox) { --sl-input-background-color: var(--color-graph-actionbar-background); --sl-input-color: var(--color-foreground); --sl-input-color-hover: var(--color-foreground); padding: 0 0.75rem; color: var(--color-foreground); border-radius: var(--sl-border-radius-small); } sl-select::part(display-input) { field-sizing: content; } sl-select::part(expand-icon) { margin-inline-start: var(--sl-spacing-x-small); } sl-select[open]::part(combobox) { background-color: var(--color-graph-actionbar-background); } sl-select:hover::part(combobox), sl-select:focus::part(combobox) { background-color: var(--color-graph-actionbar-selectedBackground); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "repoHeaderStyles",
          "declaration": {
            "name": "repoHeaderStyles",
            "module": "src/webviews/apps/plus/graph/styles/header.css.ts"
          }
        },
        {
          "kind": "js",
          "name": "progressStyles",
          "declaration": {
            "name": "progressStyles",
            "module": "src/webviews/apps/plus/graph/styles/header.css.ts"
          }
        },
        {
          "kind": "js",
          "name": "titlebarStyles",
          "declaration": {
            "name": "titlebarStyles",
            "module": "src/webviews/apps/plus/graph/styles/header.css.ts"
          }
        },
        {
          "kind": "js",
          "name": "graphHeaderControlStyles",
          "declaration": {
            "name": "graphHeaderControlStyles",
            "module": "src/webviews/apps/plus/graph/styles/header.css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/timeline/components/chart.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "timelineChartStyles",
          "default": "css` :host { display: flex; flex-direction: column; width: 100%; height: 100%; position: relative; --scroller-track-top: unset; --scroller-track-left: 0; --scroller-track-width: 100%; --scroller-thumb-height: 0.6rem; --scroller-track-height: 1.2rem; } gl-chart-scroller { display: flex; flex-direction: column; height: 100%; width: 100%; min-height: 0; } gl-chart-scroller::part(track) { --track-top: var(--scroller-track-top); --track-left: var(--scroller-track-left); --track-width: var(--scroller-track-width); --track-height: var(--scroller-track-height); --thumb-height: var(--scroller-thumb-height); } #chart { flex: 1; width: 100%; height: 100%; min-height: 0; } footer { flex: 0 0 auto; display: flex; align-items: center; margin: 0 1rem 0.4rem 1rem; gap: 0.8rem; } gl-chart-slider { flex: 1 0 auto; margin-left: 1.4rem; } gl-commit-sha { color: var(--color-foreground--75); text-align: right; min-width: 7.5rem; /* Ugly but stops the text from jumping around */ } .bb svg { font: 10px var(--font-family); -webkit-tap-highlight-color: rgba(0, 0, 0, 0); } .bb path, .bb line { fill: none; } :host-context(.vscode-dark) .bb path.domain, :host-context(.vscode-high-contrast:not(.vscode-high-contrast-light)) .bb path.domain { stroke: var(--color-background--lighten-15); } :host-context(.vscode-light) .bb path.domain, :host-context(.vscode-high-contrast-light) .bb path.domain { stroke: var(--color-background--darken-15); } .bb text, .bb .bb-button { user-select: none; fill: var(--color-view-foreground); } .bb .bb-event-rects, .bb .bb-event-rect { cursor: pointer !important; } .bb .bb-event-rects:active, .bb .bb-event-rect:active { cursor: ew-resize !important; } .bb .bb-xgrid-focus, .bb .bb-ygrid-focus, .bb .bb-ygrid, .bb .bb-event-rect, .bb .bb-bars path { shape-rendering: crispEdges; } .bb .bb-legend-item text { fill: var(--color-foreground--85); } .bb .bb-legend-item-tile { stroke-width: 2px; transform: translate(0, 1px); } .bb .bb-chart-arc .bb-gauge-value { fill: #000; } .bb .bb-chart-arc path { stroke: #fff; } .bb .bb-chart-arc rect { stroke: #fff; stroke-width: 1; } .bb .bb-chart-arc text { fill: #fff; font-size: 13px; } .bb .bb-axis { shape-rendering: crispEdges; } .bb .bb-grid { pointer-events: none; } :host-context(.vscode-dark) .bb .bb-grid line, :host-context(.vscode-high-contrast:not(.vscode-high-contrast-light)) .bb .bb-grid line { stroke: var(--color-background--lighten-05); } :host-context(.vscode-dark) .bb .bb-grid line.bb-ygrid, :host-context(.vscode-high-contrast:not(.vscode-high-contrast-light)) .bb .bb-grid line.bb-ygrid { stroke: var(--color-background--lighten-05); } :host-context(.vscode-light) .bb .bb-grid line, :host-context(.vscode-high-contrast-light) .bb .bb-grid line { stroke: var(--color-background--darken-05); } :host-context(.vscode-light) .bb .bb-grid line.bb-ygrid, :host-context(.vscode-high-contrast-light) .bb .bb-grid line.bb-ygrid { stroke: var(--color-background--darken-05); } .bb .bb-grid text { fill: var(--color-view-foreground); } :host-context(.vscode-dark) .bb .bb-xgrid-focus line, :host-context(.vscode-high-contrast:not(.vscode-high-contrast-light)) .bb .bb-xgrid-focus line { stroke: var(--color-background--lighten-30); } :host-context(.vscode-light) .bb .bb-xgrid-focus line, :host-context(.vscode-high-contrast-light) .bb .bb-xgrid-focus line { stroke: var(--color-background--darken-30); } .bb .bb-text.bb-empty { fill: #808080; font-size: 2em; } .bb .bb-line { stroke-width: 1px; } .bb .bb-circle._expanded_ { opacity: 1 !important; fill-opacity: 1 !important; stroke-opacity: 1 !important; stroke-width: 3px; } .bb .bb-selected-circle { opacity: 1 !important; fill-opacity: 1 !important; stroke-opacity: 1 !important; stroke-width: 3px; } .bb .bb-bar { stroke-width: 0; opacity: 0.9 !important; fill-opacity: 0.9 !important; } .bb .bb-bar._expanded_ { opacity: 1 !important; fill-opacity: 1 !important; } .bb .bb-candlestick { stroke-width: 1px; } .bb .bb-candlestick._expanded_ { fill-opacity: 0.75; } .bb .bb-target.bb-focused, .bb .bb-circles.bb-focused { opacity: 1; } .bb .bb-target.bb-focused path.bb-line, .bb .bb-target.bb-focused path.bb-step, .bb .bb-circles.bb-focused path.bb-line, .bb .bb-circles.bb-focused path.bb-step { stroke-width: 2px; } .bb .bb-target.bb-defocused, .bb .bb-circles.bb-defocused { opacity: 0.2 !important; } .bb .bb-target.bb-defocused .text-overlapping, .bb .bb-circles.bb-defocused .text-overlapping { opacity: 0.05 !important; } .bb .bb-region { fill: steelblue; fill-opacity: 0.1; } :host-context(.vscode-dark) .bb .bb-zoom-brush, :host-context(.vscode-high-contrast:not(.vscode-high-contrast-light)) .bb .bb-zoom-brush { fill: white; fill-opacity: 0.2; } :host-context(.vscode-light) .bb .bb-zoom-brush, :host-context(.vscode-high-contrast-light) .bb .bb-zoom-brush { fill: black; fill-opacity: 0.1; } .bb .bb-brush .extent { fill-opacity: 0.1; } .bb .bb-legend-item { font-size: 12px; user-select: none; } .bb .bb-legend-item-hidden { opacity: 0.15; } .bb .bb-legend-background { opacity: 0.75; fill: white; stroke: lightgray; stroke-width: 1; } .bb .bb-title { font: 14px var(--font-family); } .bb .bb-tooltip-container { z-index: 10; user-select: none; } .bb .bb-area { stroke-width: 0; opacity: 0.2; } .bb .bb-chart-arcs-title { dominant-baseline: middle; font-size: 1.3em; } .bb text.bb-chart-arcs-gauge-title { dominant-baseline: middle; font-size: 2.7em; } .bb .bb-chart-arcs .bb-chart-arcs-background { fill: #e0e0e0; stroke: #fff; } .bb .bb-chart-arcs .bb-chart-arcs-gauge-unit { fill: #000; font-size: 16px; } .bb .bb-chart-arcs .bb-chart-arcs-gauge-max { fill: #777; } .bb .bb-chart-arcs .bb-chart-arcs-gauge-min { fill: #777; } .bb .bb-chart-radars .bb-levels polygon { fill: none; stroke: #848282; stroke-width: 0.5px; } .bb .bb-chart-radars .bb-levels text { fill: #848282; } .bb .bb-chart-radars .bb-axis line { stroke: #848282; stroke-width: 0.5px; } .bb .bb-chart-radars .bb-axis text { font-size: 1.15em; cursor: default; } .bb .bb-chart-radars .bb-shapes polygon { fill-opacity: 0.2; stroke-width: 1px; } .bb .bb-button { position: absolute; top: 0.4rem; right: -1.4rem; background-color: var(--color-button-background); color: var(--color-button-foreground); font-size: var(--font-size); font-family: var(--font-family); } :host-context([data-placement='view']) .bb .bb-button { margin-right: 2.8rem; } .bb .bb-zoom-reset { display: inline-block; padding: 0.5rem 1rem; cursor: pointer; } @keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } } .notice { position: absolute; top: 0; left: 0; bottom: 0; right: 0; display: flex; flex-direction: column; align-items: center; justify-content: center; padding: 10% 2rem 30% 2rem; font-size: var(--font-size); z-index: 1; } .notice--blur { backdrop-filter: blur(15px); -webkit-backdrop-filter: blur(15px); animation: fadeIn 0.2s ease-in; animation-fill-mode: forwards; opacity: 0; } :host-context([data-placement='view']) .notice--blur { animation-delay: 0.5s; } .notice p { margin: 0; } .bb-tooltip { display: flex; flex-direction: column; gap: 0.5rem; padding: 0.5rem 1rem; background-color: var(--color-hover-background); color: var(--color-hover-foreground); border: 1px solid var(--color-hover-border); box-shadow: 0 2px 8px var(--vscode-widget-shadow); font-size: var(--font-size); opacity: 1; white-space: nowrap; min-width: 0; max-width: 360px; overflow: hidden; } .bb-tooltip .author { font-weight: 600; } .bb-tooltip .branches { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; /* font-family: var(--vscode-editor-font-family); */ } .bb-tooltip .sha { /* background: var(--vscode-textCodeBlock-background); border-radius: 0.3rem; */ /* padding: 0.1rem 0.4rem 0.2rem 0.4rem; */ font-family: var(--vscode-editor-font-family); margin-right: 0.4rem; } .bb-tooltip .additions { color: var(--vscode-gitDecoration-addedResourceForeground); } .bb-tooltip .deletions { color: var(--vscode-gitDecoration-deletedResourceForeground); } .bb-tooltip .date { flex: 1 1 auto; display: inline-flex; flex-direction: row; align-items: center; justify-content: flex-start; font-weight: normal; gap: 0.5rem; min-width: 0; } .bb-tooltip .date--relative { flex: 0 1 auto; } .bb-tooltip .date--absolute { flex: 0 100000 auto; font-style: italic; } .bb-tooltip .message { margin-left: 0rem; margin-top: 0.5rem; margin-bottom: 0.5rem; max-height: 50vh; overflow-y: auto; overflow-x: hidden; } .bb-tooltip .message__content { white-space: pre-line; } :host-context([data-placement='editor']) .bb-axis-y .tick text { fill: var(--color-foreground--85); } :host-context([data-placement='view']) .bb-axis-y .tick text { transform: translate(0, 0.4rem); font-family: codicon; font-size: 1.5rem; } @media (max-height: 275px) { :host-context([data-placement='view']) .bb-axis-y .tick text { transform: none; font-size: 1rem; } } @media (max-height: 225px) { :host-context([data-placement='view']) .bb-axis-y .tick text { display: none; } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "timelineChartStyles",
          "declaration": {
            "name": "timelineChartStyles",
            "module": "src/webviews/apps/plus/timeline/components/chart.css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/timeline/components/chart.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "tagName",
          "type": {
            "text": "string"
          },
          "default": "'gl-timeline-chart'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "GlTimelineChart",
          "members": [
            {
              "kind": "field",
              "name": "tagName",
              "static": true,
              "readonly": true,
              "default": "'gl-timeline-chart'",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }"
            },
            {
              "kind": "field",
              "name": "chartContainer",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_chart",
              "type": {
                "text": "Chart | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "slider",
              "type": {
                "text": "GlChartSlider | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_chartAborter",
              "type": {
                "text": "AbortController | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_slices",
              "privacy": "private",
              "readonly": true,
              "default": "new Map< string, { x: string[]; y: number; z: Map<string, number>; } >()"
            },
            {
              "kind": "field",
              "name": "_slicesByIndex",
              "privacy": "private",
              "readonly": true,
              "default": "new Map<number, string>()"
            },
            {
              "kind": "field",
              "name": "_commitsByTimestamp",
              "privacy": "private",
              "readonly": true,
              "default": "new Map<number, TimelineDatum>()"
            },
            {
              "kind": "field",
              "name": "_loading",
              "type": {
                "text": "ReturnType<typeof defer<void>> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "compact",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "'editor' | 'view'"
              },
              "default": "'editor'",
              "attribute": "placement"
            },
            {
              "kind": "field",
              "name": "dateFormat",
              "type": {
                "text": "string"
              },
              "attribute": "dateFormat"
            },
            {
              "kind": "field",
              "name": "head",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "head"
            },
            {
              "kind": "field",
              "name": "scope",
              "type": {
                "text": "State['scope'] | undefined"
              },
              "attribute": "scope"
            },
            {
              "kind": "field",
              "name": "shortDateFormat",
              "type": {
                "text": "string"
              },
              "attribute": "shortDateFormat"
            },
            {
              "kind": "field",
              "name": "sliceBy",
              "type": {
                "text": "TimelineSliceBy"
              },
              "default": "'author'",
              "attribute": "sliceBy"
            },
            {
              "kind": "field",
              "name": "_data",
              "type": {
                "text": "Awaited<State['dataset']> | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "_dataReversed",
              "type": {
                "text": "Awaited<State['dataset']> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "Awaited<State['dataset']> | null"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_dataPromise",
              "type": {
                "text": "State['dataset']"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "dataPromise",
              "type": {
                "text": "State['dataset']"
              },
              "attribute": "dataPromise"
            },
            {
              "kind": "field",
              "name": "_shaHovered",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_shaSelected",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_shiftKeyPressed",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_range",
              "type": {
                "text": "[oldest: Date, newest: Date]"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_rangeScrollable",
              "type": {
                "text": "[oldest: number, newest: number]"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "range",
              "type": {
                "text": "[oldest: Date, newest: Date]"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_zoomedRange",
              "type": {
                "text": "[oldest: Date, newest: Date] | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_zoomedRangeScrollable",
              "type": {
                "text": "[oldest: number, newest: number] | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "zoomedRange",
              "type": {
                "text": "[oldest: Date, newest: Date] | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "zoomed",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "attribute": "zoomed",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "updateChart",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderNotice",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderFooter",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderActions",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onDataPointClicked",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "onDataPointHovered",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "onDataPointUnhovered",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "onDocumentKeyDown",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "onDocumentKeyUp",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "onFooterShaMouseOver",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onFooterShaMouseOut",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onResize",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_transitionDuration",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onScrollStart",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onScrollEnd",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onScroll",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<{ range: [number, number] }>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onSliderChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<SliderChangeEventDetail>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onSliderMouseOver",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onSliderMouseOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "onZoom",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "resetZoom",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "revealDate",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "date",
                  "type": {
                    "text": "Date"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "{ focus?: boolean; select?: boolean }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "selectDataPoint",
              "privacy": "private",
              "parameters": [
                {
                  "name": "date",
                  "type": {
                    "text": "Date"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "{ focus?: boolean; select?: boolean }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "showTooltip",
              "privacy": "private",
              "parameters": [
                {
                  "name": "datum",
                  "type": {
                    "text": "TimelineDatum | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "hideTooltip",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "zoom",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "factor",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "calculateBubbleSize",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "changes",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "{\n\t\t\tminRadius,\n\t\t\tmaxRadius,\n\t\t\tq1,\n\t\t\tq3,\n\t\t\tmaxChanges,\n\t\t}",
                  "type": {
                    "text": "{ minRadius: number; maxRadius: number; q1: number; q3: number; maxChanges: number }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "calculateChangeMetrics",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "{ q1: number; q3: number; maxChanges: number }"
                }
              },
              "parameters": [
                {
                  "name": "dataset",
                  "type": {
                    "text": "TimelineDatum[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getDataPoint",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "DataItem | undefined"
                }
              },
              "parameters": [
                {
                  "name": "date",
                  "type": {
                    "text": "string | number | Date"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getInternalChart",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "ChartInternal | undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "getOnRenderedCallback",
              "privacy": "private",
              "parameters": [
                {
                  "name": "host",
                  "type": {
                    "text": "GlTimelineChart"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "prepareChartData",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "PreparedChartData"
                }
              },
              "parameters": [
                {
                  "name": "dataset",
                  "type": {
                    "text": "TimelineDatum[]"
                  }
                },
                {
                  "name": "metrics",
                  "type": {
                    "text": "{ minRadius: number; maxRadius: number; q1: number; q3: number; maxChanges: number }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderChart",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "dataPromise",
                  "type": {
                    "text": "NonNullable<State['dataset']>"
                  }
                },
                {
                  "name": "loading",
                  "type": {
                    "text": "ReturnType<typeof defer<void>>"
                  }
                },
                {
                  "name": "signal",
                  "type": {
                    "text": "AbortSignal"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateChartSize",
              "privacy": "private",
              "parameters": [
                {
                  "name": "rect",
                  "optional": true,
                  "type": {
                    "text": "DOMRect"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateScrollerTrackPosition",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "placement",
              "type": {
                "text": "'editor' | 'view'"
              },
              "default": "'editor'",
              "fieldName": "placement"
            },
            {
              "name": "dateFormat",
              "type": {
                "text": "string"
              },
              "fieldName": "dateFormat"
            },
            {
              "name": "head",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "head"
            },
            {
              "name": "scope",
              "type": {
                "text": "State['scope'] | undefined"
              },
              "fieldName": "scope"
            },
            {
              "name": "shortDateFormat",
              "type": {
                "text": "string"
              },
              "fieldName": "shortDateFormat"
            },
            {
              "name": "sliceBy",
              "type": {
                "text": "TimelineSliceBy"
              },
              "default": "'author'",
              "fieldName": "sliceBy"
            },
            {
              "name": "dataPromise",
              "type": {
                "text": "State['dataset']"
              },
              "fieldName": "dataPromise"
            },
            {
              "name": "zoomed",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "fieldName": "zoomed"
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "tagName",
          "declaration": {
            "name": "tagName",
            "module": "src/webviews/apps/plus/timeline/components/chart.ts"
          }
        },
        {
          "kind": "js",
          "name": "GlTimelineChart",
          "declaration": {
            "name": "GlTimelineChart",
            "module": "src/webviews/apps/plus/timeline/components/chart.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "GlTimelineChart",
            "module": "src/webviews/apps/plus/timeline/components/chart.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/timeline/components/scroller.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlChartScroller",
          "members": [
            {
              "kind": "field",
              "name": "tagName",
              "static": true,
              "readonly": true,
              "default": "'gl-chart-scroller'",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "range",
              "type": {
                "text": "[number, number] | undefined"
              },
              "attribute": "range"
            },
            {
              "kind": "field",
              "name": "visibleRange",
              "type": {
                "text": "[number, number] | undefined"
              },
              "attribute": "visibleRange"
            },
            {
              "kind": "field",
              "name": "position",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "100"
            },
            {
              "kind": "method",
              "name": "isScrollable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "this is typeof this & { range: [number, number]; visibleRange: [number, number] }"
                }
              }
            },
            {
              "kind": "field",
              "name": "_dragInfo",
              "type": {
                "text": "| {\n\t\t\t\tstartX: number;\n\t\t\t\tstartPosition: number;\n\t\t\t\ttrackWidth: number;\n\t\t\t\tviewRange: number;\n\t\t\t\tzoomRange: number;\n\t\t\t\tviewStart: number;\n\t\t\t\tmaxPosition: number;\n\t\t\t\tpointerId: number;\n\t\t  }\n\t\t| undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onDragStart",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "onDragMove",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "onDragEnd",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "onTrackClick",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_wheelTimer",
              "type": {
                "text": "ReturnType<typeof setTimeout> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onWheel",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "calculateScrollState",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "{ position: number; size: number }"
                }
              }
            },
            {
              "kind": "method",
              "name": "emitScrollEvent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "start",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "end",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "range",
              "type": {
                "text": "[number, number] | undefined"
              },
              "fieldName": "range"
            },
            {
              "name": "visibleRange",
              "type": {
                "text": "[number, number] | undefined"
              },
              "fieldName": "visibleRange"
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlChartScroller",
          "declaration": {
            "name": "GlChartScroller",
            "module": "src/webviews/apps/plus/timeline/components/scroller.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "GlChartScroller",
            "module": "src/webviews/apps/plus/timeline/components/scroller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/plus/timeline/components/slider.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlChartSlider",
          "members": [
            {
              "kind": "field",
              "name": "tagName",
              "static": true,
              "readonly": true,
              "default": "'gl-chart-slider'",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "_value",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_max",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_min",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_data",
              "type": {
                "text": "TimelineDatum[] | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "data",
              "attribute": "data"
            },
            {
              "kind": "field",
              "name": "_shift",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "shift",
              "attribute": "shift"
            },
            {
              "kind": "field",
              "name": "value",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "select",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "select",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "date",
                  "type": {
                    "text": "Date"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "select",
              "parameters": [
                {
                  "name": "idOrDate",
                  "type": {
                    "text": "string | Date"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSliderInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent | CustomEvent<void>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "data",
              "fieldName": "data"
            },
            {
              "name": "shift",
              "fieldName": "shift"
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlChartSlider",
          "declaration": {
            "name": "GlChartSlider",
            "module": "src/webviews/apps/plus/timeline/components/slider.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "GlChartSlider",
            "module": "src/webviews/apps/plus/timeline/components/slider.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/accordion/accordion.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlAccordion",
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "headerId",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "_handleToggle",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "gl-toggle",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "open"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlAccordion",
          "declaration": {
            "name": "GlAccordion",
            "module": "src/webviews/apps/shared/components/accordion/accordion.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "GlAccordion",
            "module": "src/webviews/apps/shared/components/accordion/accordion.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/actions/action-item.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ActionItem",
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "altHref",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "alt-href"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "altLabel",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "alt-label"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "icon"
            },
            {
              "kind": "field",
              "name": "altIcon",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "alt-icon"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "defaultFocusEl",
              "type": {
                "text": "HTMLAnchorElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "isAltKeyPressed",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "effectiveIcon",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "effectiveTooltip",
              "type": {
                "text": "string | undefined"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "effectiveLabel",
              "type": {
                "text": "string | undefined"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "effectiveHref",
              "type": {
                "text": "string | undefined"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "handleEvent",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "focus",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "href"
            },
            {
              "name": "alt-href",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "altHref"
            },
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "label"
            },
            {
              "name": "alt-label",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "altLabel"
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "icon"
            },
            {
              "name": "alt-icon",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "altIcon"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "action-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ActionItem",
          "declaration": {
            "name": "ActionItem",
            "module": "src/webviews/apps/shared/components/actions/action-item.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "action-item",
          "declaration": {
            "name": "ActionItem",
            "module": "src/webviews/apps/shared/components/actions/action-item.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/actions/action-nav.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ActionNav",
          "members": [
            {
              "kind": "field",
              "name": "_slotSubscriptionsDisposer",
              "type": {
                "text": "() => void | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "actionNodes",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleKeydown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "action-nav",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ActionNav",
          "declaration": {
            "name": "ActionNav",
            "module": "src/webviews/apps/shared/components/actions/action-nav.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "action-nav",
          "declaration": {
            "name": "ActionNav",
            "module": "src/webviews/apps/shared/components/actions/action-nav.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/avatar/avatar-list.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlAvatarList",
          "members": [
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "default": "3",
              "attribute": "max"
            },
            {
              "kind": "field",
              "name": "avatars",
              "type": {
                "text": "AvatarShape[]"
              },
              "default": "[]",
              "attribute": "avatars"
            },
            {
              "kind": "method",
              "name": "renderList",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "max",
              "type": {
                "text": "number"
              },
              "default": "3",
              "fieldName": "max"
            },
            {
              "name": "avatars",
              "type": {
                "text": "AvatarShape[]"
              },
              "default": "[]",
              "fieldName": "avatars"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-avatar-list",
          "customElement": true
        },
        {
          "kind": "class",
          "description": "",
          "name": "GlAvatarGroup",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-avatar-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlAvatarList",
          "declaration": {
            "name": "GlAvatarList",
            "module": "src/webviews/apps/shared/components/avatar/avatar-list.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-avatar-list",
          "declaration": {
            "name": "GlAvatarList",
            "module": "src/webviews/apps/shared/components/avatar/avatar-list.ts"
          }
        },
        {
          "kind": "js",
          "name": "GlAvatarGroup",
          "declaration": {
            "name": "GlAvatarGroup",
            "module": "src/webviews/apps/shared/components/avatar/avatar-list.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-avatar-group",
          "declaration": {
            "name": "GlAvatarGroup",
            "module": "src/webviews/apps/shared/components/avatar/avatar-list.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/avatar/avatar.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlAvatar",
          "members": [
            {
              "kind": "field",
              "name": "src",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "src"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "href"
            },
            {
              "kind": "method",
              "name": "renderAvatar",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderContent",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "src",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "src"
            },
            {
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "name"
            },
            {
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "href"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-avatar",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlAvatar",
          "declaration": {
            "name": "GlAvatar",
            "module": "src/webviews/apps/shared/components/avatar/avatar.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-avatar",
          "declaration": {
            "name": "GlAvatar",
            "module": "src/webviews/apps/shared/components/avatar/avatar.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/badges/badge.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Badge",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-badge",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Badge",
          "declaration": {
            "name": "Badge",
            "module": "src/webviews/apps/shared/components/badges/badge.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-badge",
          "declaration": {
            "name": "Badge",
            "module": "src/webviews/apps/shared/components/badges/badge.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/badges/badges.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "badgeBase",
          "default": "css` .badge { display: inline-flex; font-size: var(--gl-badge-font-size, x-small); font-variant: all-small-caps; font-weight: 600; color: var(--gl-badge-color, var(--color-foreground--50)); border: currentColor 1px solid; border-radius: 1rem; padding: 0 0.8rem 0.1rem; white-space: nowrap; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "badgeBase",
          "declaration": {
            "name": "badgeBase",
            "module": "src/webviews/apps/shared/components/badges/badges.css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/card/card.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "cardStyles",
          "default": "css` :host { --gl-color-mix-base: var( --gl-card-background, color-mix(in lab, var(--vscode-sideBar-background) 100%, #fff 3%) ); } .card { display: block; flex-direction: column; gap: 0.8rem; padding: 0.8rem 1.2rem; border-radius: 0.4rem; border-inline-start: 0.3rem solid transparent; /* border-inline-end: 0.3rem solid transparent; */ background-color: var(--gl-card-background, color-mix(in lab, var(--vscode-sideBar-background) 100%, #fff 3%)); margin-block-end: 0.6rem; position: relative; } :host-context(.vscode-dark) .card.is-base, :host-context(.vscode-high-contrast) .card.is-base { border-inline-start-color: color-mix(in lab, var(--gl-color-mix-base) 100%, #fff 7%); } :host-context(.vscode-light) .card.is-base, :host-context(.vscode-high-contrast-light) .card.is-base { border-inline-start-color: color-mix(in lab, var(--gl-color-mix-base) 100%, #000 5%); } .card.is-active { border-inline-start-color: var(--gl-card-indicator-border, var(--vscode-gitDecoration-addedResourceForeground)); } .card.is-cherry-picking, .card.is-merging, .card.is-rebasing, .card.is-reverting { border-inline-start-color: var( --gl-card-indicator-border, var(--vscode-gitlens-decorations\\\\.statusMergingOrRebasingForegroundColor) ); } .card.is-conflict { border-inline-start-color: var( --gl-card-indicator-border, var(--vscode-gitlens-decorations\\\\.statusMergingOrRebasingConflictForegroundColor) ); } .card.is-issue-open { border-inline-start-color: var( --gl-card-indicator-border, color-mix(in lab, var(--vscode-gitlens-openAutolinkedIssueIconColor) 0%, transparent) ); } .card.is-issue-closed { border-inline-start-color: var( --gl-card-indicator-border, color-mix(in lab, var(--vscode-gitlens-closedAutolinkedIssueIconColor) 0%, transparent) ); } .card.is-pr-open { border-inline-start-color: var( --gl-card-indicator-border, color-mix(in lab, var(--vscode-gitlens-openPullRequestIconColor) 0%, transparent) ); } .card.is-pr-closed { border-inline-start-color: var( --gl-card-indicator-border, color-mix(in lab, var(--vscode-gitlens-closedPullRequestIconColor) 0%, transparent) ); } .card.is-pr-merged { border-inline-start-color: var( --gl-card-indicator-border, color-mix(in lab, var(--vscode-gitlens-mergedPullRequestIconColor) 0%, transparent) ); } .card.is-mergeable { border-inline-start-color: var( --gl-card-indicator-border, var(var(--vscode-gitlens-launchpadIndicatorMergeableColor)) ); } .card.is-blocked { border-inline-start-color: var( --gl-card-indicator-border, var(--vscode-gitlens-launchpadIndicatorBlockedColor) ); } .card.is-attention { border-inline-start-color: var( --gl-card-indicator-border, var(--vscode-gitlens-launchpadIndicatorAttentionColor) ); } .card.is-branch-merged { border-inline-start-color: var(--gl-card-indicator-border, var(--vscode-gitlens-mergedPullRequestIconColor)); } .card.is-branch-synced { border-inline-start-color: var( --gl-card-indicator-border, color-mix(in lab, var(--vscode-gitlens-decorations\\\\.branchUpToDateForegroundColor) 20%, transparent) ); } .card.is-branch-diverged { border-inline-start-color: var( --gl-card-indicator-border, color-mix(in lab, var(--vscode-gitlens-decorations\\\\.branchDivergedForegroundColor) 70%, transparent) ); } .card.is-branch-behind { border-inline-start-color: var( --gl-card-indicator-border, var(--vscode-gitlens-decorations\\\\.branchBehindForegroundColor) ); } .card.is-branch-ahead { border-inline-start-color: var( --gl-card-indicator-border, var(--vscode-gitlens-decorations\\\\.branchBehindForegroundColor) ); } .card.is-info, .card.is-branch-changes { border-inline-start-color: var(--gl-card-indicator-border, color-mix(in lab, #1a79ff 80%, transparent)); } .card.is-branch-missingUpstream { border-inline-start-color: var( --gl-card-indicator-border, var(--vscode-gitlens-decorations\\\\.branchMissingUpstreamForegroundColor) ); } .card--focusable { cursor: pointer; } .card--focusable:focus, .card:focus-within, .card:hover { background-color: var( --gl-card-hover-background, color-mix(in lab, var(--vscode-sideBar-background) 100%, #fff 8%) ); } .card--focusable:focus-visible { outline: 0.1rem solid var(--vscode-focusBorder); } .card__actions { position: absolute; top: 0.4rem; right: 0.4rem; display: block; } .card__content { display: block; } .card__content::slotted(:first-child) { margin-block-start: 0; } .card__content::slotted(:last-child) { margin-block-end: 0; } :host-context(.vscode-dark) .card--grouping-item, :host-context(.vscode-high-contrast) .card--grouping-item { --gl-card-background: color-mix(in lab, var(--vscode-sideBar-background) 100%, #fff 3%); --gl-card-hover-background: color-mix(in lab, var(--vscode-sideBar-background) 100%, #fff 1.5%); } :host-context(.vscode-light) .card--grouping-item, :host-context(.vscode-high-contrast-light) .card--grouping-item { --gl-card-background: color-mix(in lab, var(--vscode-sideBar-background) 100%, #000 8%); --gl-card-hover-background: color-mix(in lab, var(--vscode-sideBar-background) 100%, #000 10%); } .card--grouping-item-primary { --gl-card-background: transparent; --gl-card-hover-background: transparent; } .card--density-tight { padding: 0; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "cardStyles",
          "declaration": {
            "name": "cardStyles",
            "module": "src/webviews/apps/shared/components/card/card.css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/card/card.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "cardTagName",
          "type": {
            "text": "string"
          },
          "default": "'gl-card'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "GlCard",
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }"
            },
            {
              "kind": "field",
              "name": "indicator",
              "type": {
                "text": "| 'base'\n\t\t| 'active'\n\t\t| 'info'\n\t\t| 'cherry-picking'\n\t\t| 'merging'\n\t\t| 'rebasing'\n\t\t| 'reverting'\n\t\t| 'conflict'\n\t\t| 'issue-open'\n\t\t| 'issue-closed'\n\t\t| 'pr-open'\n\t\t| 'pr-closed'\n\t\t| 'pr-merged'\n\t\t| 'mergeable'\n\t\t| 'blocked'\n\t\t| 'attention'\n\t\t| 'branch-merged'\n\t\t| 'branch-synced'\n\t\t| 'branch-diverged'\n\t\t| 'branch-behind'\n\t\t| 'branch-ahead'\n\t\t| 'branch-changes'\n\t\t| 'branch-missingUpstream' | undefined"
              },
              "attribute": "indicator",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "grouping",
              "type": {
                "text": "'unit' | 'item' | 'item-primary' | undefined"
              },
              "attribute": "grouping",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "density",
              "type": {
                "text": "'tight' | undefined"
              },
              "attribute": "density",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "_focusable",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "focusable",
              "type": {
                "text": "boolean"
              },
              "attribute": "focusable",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "classNames",
              "type": {
                "text": "Record<string, boolean>"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "renderContent",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "focus",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "indicator",
              "type": {
                "text": "| 'base'\n\t\t| 'active'\n\t\t| 'info'\n\t\t| 'cherry-picking'\n\t\t| 'merging'\n\t\t| 'rebasing'\n\t\t| 'reverting'\n\t\t| 'conflict'\n\t\t| 'issue-open'\n\t\t| 'issue-closed'\n\t\t| 'pr-open'\n\t\t| 'pr-closed'\n\t\t| 'pr-merged'\n\t\t| 'mergeable'\n\t\t| 'blocked'\n\t\t| 'attention'\n\t\t| 'branch-merged'\n\t\t| 'branch-synced'\n\t\t| 'branch-diverged'\n\t\t| 'branch-behind'\n\t\t| 'branch-ahead'\n\t\t| 'branch-changes'\n\t\t| 'branch-missingUpstream' | undefined"
              },
              "fieldName": "indicator"
            },
            {
              "name": "grouping",
              "type": {
                "text": "'unit' | 'item' | 'item-primary' | undefined"
              },
              "fieldName": "grouping"
            },
            {
              "name": "density",
              "type": {
                "text": "'tight' | undefined"
              },
              "fieldName": "density"
            },
            {
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "href"
            },
            {
              "name": "focusable",
              "type": {
                "text": "boolean"
              },
              "fieldName": "focusable"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "cardTagName",
          "declaration": {
            "name": "cardTagName",
            "module": "src/webviews/apps/shared/components/card/card.ts"
          }
        },
        {
          "kind": "js",
          "name": "GlCard",
          "declaration": {
            "name": "GlCard",
            "module": "src/webviews/apps/shared/components/card/card.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "GlCard",
            "module": "src/webviews/apps/shared/components/card/card.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/checkbox/checkbox.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "tagName",
          "type": {
            "text": "string"
          },
          "default": "'gl-checkbox'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "Checkbox",
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{ ...GlElement.shadowRootOptions, delegatesFocus: true, }"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "_defaultChecked",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "defaultChecked",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "attribute": "defaultChecked"
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "checked",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderCheck",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "value"
            },
            {
              "name": "defaultChecked",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "fieldName": "defaultChecked"
            },
            {
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "checked"
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "tagName",
          "declaration": {
            "name": "tagName",
            "module": "src/webviews/apps/shared/components/checkbox/checkbox.ts"
          }
        },
        {
          "kind": "js",
          "name": "Checkbox",
          "declaration": {
            "name": "Checkbox",
            "module": "src/webviews/apps/shared/components/checkbox/checkbox.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "Checkbox",
            "module": "src/webviews/apps/shared/components/checkbox/checkbox.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/chips/action-chip.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ActionChip",
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "overlay",
              "type": {
                "text": "'tooltip' | 'popover'"
              },
              "default": "'tooltip'",
              "attribute": "overlay"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "icon"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "defaultFocusEl",
              "type": {
                "text": "HTMLAnchorElement"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderContent",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "focus",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "href"
            },
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "label"
            },
            {
              "name": "overlay",
              "type": {
                "text": "'tooltip' | 'popover'"
              },
              "default": "'tooltip'",
              "fieldName": "overlay"
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "icon"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-action-chip",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ActionChip",
          "declaration": {
            "name": "ActionChip",
            "module": "src/webviews/apps/shared/components/chips/action-chip.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-action-chip",
          "declaration": {
            "name": "ActionChip",
            "module": "src/webviews/apps/shared/components/chips/action-chip.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/chips/autolink-chip.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlAutolinkChip",
          "members": [
            {
              "kind": "field",
              "name": "url",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "url"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "date",
              "type": {
                "text": "number | string | Date | undefined"
              },
              "attribute": "date"
            },
            {
              "kind": "field",
              "name": "dateFormat",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "dateFormat"
            },
            {
              "kind": "field",
              "name": "dateStyle",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "dateStyle"
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "'opened' | 'closed' | 'merged'"
              },
              "default": "'merged'",
              "attribute": "status"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'autolink' | 'issue' | 'pr'"
              },
              "default": "'autolink'",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "identifier"
            },
            {
              "kind": "field",
              "name": "details",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "details"
            }
          ],
          "attributes": [
            {
              "name": "url",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "url"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "name"
            },
            {
              "name": "date",
              "type": {
                "text": "number | string | Date | undefined"
              },
              "fieldName": "date"
            },
            {
              "name": "dateFormat",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "dateFormat"
            },
            {
              "name": "dateStyle",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "dateStyle"
            },
            {
              "name": "status",
              "type": {
                "text": "'opened' | 'closed' | 'merged'"
              },
              "default": "'merged'",
              "fieldName": "status"
            },
            {
              "name": "type",
              "type": {
                "text": "'autolink' | 'issue' | 'pr'"
              },
              "default": "'autolink'",
              "fieldName": "type"
            },
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "identifier"
            },
            {
              "name": "details",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "details"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-autolink-chip",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlAutolinkChip",
          "declaration": {
            "name": "GlAutolinkChip",
            "module": "src/webviews/apps/shared/components/chips/autolink-chip.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-autolink-chip",
          "declaration": {
            "name": "GlAutolinkChip",
            "module": "src/webviews/apps/shared/components/chips/autolink-chip.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/commit/commit-author.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlCommitAuthor",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "url",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "url"
            },
            {
              "kind": "field",
              "name": "avatarUrl",
              "type": {
                "text": "string"
              },
              "default": "'https://www.gravatar.com/avatar/?s=64&d=robohash'",
              "attribute": "avatarUrl"
            },
            {
              "kind": "field",
              "name": "showAvatar",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "show-avatar",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "renderAvatar",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "name"
            },
            {
              "name": "url",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "url"
            },
            {
              "name": "avatarUrl",
              "type": {
                "text": "string"
              },
              "default": "'https://www.gravatar.com/avatar/?s=64&d=robohash'",
              "fieldName": "avatarUrl"
            },
            {
              "name": "show-avatar",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "showAvatar"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-commit-author",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlCommitAuthor",
          "declaration": {
            "name": "GlCommitAuthor",
            "module": "src/webviews/apps/shared/components/commit/commit-author.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-commit-author",
          "declaration": {
            "name": "GlCommitAuthor",
            "module": "src/webviews/apps/shared/components/commit/commit-author.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/commit/commit-date.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlCommitDate",
          "members": [
            {
              "kind": "field",
              "name": "date",
              "type": {
                "text": "Date | undefined"
              },
              "attribute": "date",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "dateFormat",
              "type": {
                "text": "string"
              },
              "default": "'MMMM Do, YYYY h:mma'",
              "attribute": "dateFormat"
            },
            {
              "kind": "field",
              "name": "dateStyle",
              "type": {
                "text": "'relative' | 'absolute'"
              },
              "default": "'relative'",
              "attribute": "dateStyle"
            },
            {
              "kind": "field",
              "name": "committer",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "committer"
            },
            {
              "kind": "field",
              "name": "actionLabel",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "actionLabel"
            },
            {
              "kind": "field",
              "name": "dateElement",
              "type": {
                "text": "FormattedDate"
              }
            },
            {
              "kind": "field",
              "name": "absoluteDate",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "dateLabel",
              "type": {
                "text": "string"
              },
              "readonly": true
            }
          ],
          "attributes": [
            {
              "name": "date",
              "type": {
                "text": "Date | undefined"
              },
              "fieldName": "date"
            },
            {
              "name": "dateFormat",
              "type": {
                "text": "string"
              },
              "default": "'MMMM Do, YYYY h:mma'",
              "fieldName": "dateFormat"
            },
            {
              "name": "dateStyle",
              "type": {
                "text": "'relative' | 'absolute'"
              },
              "default": "'relative'",
              "fieldName": "dateStyle"
            },
            {
              "name": "committer",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "committer"
            },
            {
              "name": "actionLabel",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "actionLabel"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-commit-date",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlCommitDate",
          "declaration": {
            "name": "GlCommitDate",
            "module": "src/webviews/apps/shared/components/commit/commit-date.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-commit-date",
          "declaration": {
            "name": "GlCommitDate",
            "module": "src/webviews/apps/shared/components/commit/commit-date.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/commit/commit-identity.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CommitIdentity",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "url",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "url"
            },
            {
              "kind": "field",
              "name": "date",
              "type": {
                "text": "Date | undefined"
              },
              "attribute": "date",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "avatarUrl",
              "type": {
                "text": "string"
              },
              "default": "'https://www.gravatar.com/avatar/?s=64&d=robohash'",
              "attribute": "avatarUrl"
            },
            {
              "kind": "field",
              "name": "showAvatar",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "show-avatar",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "dateFormat",
              "type": {
                "text": "string"
              },
              "default": "'MMMM Do, YYYY h:mma'",
              "attribute": "dateFormat"
            },
            {
              "kind": "field",
              "name": "dateStyle",
              "type": {
                "text": "'relative' | 'absolute'"
              },
              "default": "'relative'",
              "attribute": "dateStyle"
            },
            {
              "kind": "field",
              "name": "committer",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "committer"
            },
            {
              "kind": "field",
              "name": "actionLabel",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "actionLabel"
            },
            {
              "kind": "method",
              "name": "renderAvatar",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "name"
            },
            {
              "name": "url",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "url"
            },
            {
              "name": "date",
              "type": {
                "text": "Date | undefined"
              },
              "fieldName": "date"
            },
            {
              "name": "avatarUrl",
              "type": {
                "text": "string"
              },
              "default": "'https://www.gravatar.com/avatar/?s=64&d=robohash'",
              "fieldName": "avatarUrl"
            },
            {
              "name": "show-avatar",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "showAvatar"
            },
            {
              "name": "dateFormat",
              "type": {
                "text": "string"
              },
              "default": "'MMMM Do, YYYY h:mma'",
              "fieldName": "dateFormat"
            },
            {
              "name": "dateStyle",
              "type": {
                "text": "'relative' | 'absolute'"
              },
              "default": "'relative'",
              "fieldName": "dateStyle"
            },
            {
              "name": "committer",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "committer"
            },
            {
              "name": "actionLabel",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "actionLabel"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "commit-identity",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CommitIdentity",
          "declaration": {
            "name": "CommitIdentity",
            "module": "src/webviews/apps/shared/components/commit/commit-identity.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "commit-identity",
          "declaration": {
            "name": "CommitIdentity",
            "module": "src/webviews/apps/shared/components/commit/commit-identity.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/commit/commit-stats.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CommitStats",
          "members": [
            {
              "kind": "field",
              "name": "added",
              "type": {
                "text": "number | undefined"
              },
              "default": "0",
              "attribute": "added"
            },
            {
              "kind": "field",
              "name": "modified",
              "type": {
                "text": "number | undefined"
              },
              "default": "0",
              "attribute": "modified"
            },
            {
              "kind": "field",
              "name": "removed",
              "type": {
                "text": "number | undefined"
              },
              "default": "0",
              "attribute": "removed"
            },
            {
              "kind": "field",
              "name": "symbol",
              "type": {
                "text": "'icons' | undefined"
              },
              "attribute": "symbol"
            },
            {
              "kind": "method",
              "name": "renderStat",
              "privacy": "private",
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "string[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderSymbol",
              "privacy": "private",
              "parameters": [
                {
                  "name": "[symbol, icon]",
                  "type": {
                    "text": "string[]"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "added",
              "type": {
                "text": "number | undefined"
              },
              "default": "0",
              "fieldName": "added"
            },
            {
              "name": "modified",
              "type": {
                "text": "number | undefined"
              },
              "default": "0",
              "fieldName": "modified"
            },
            {
              "name": "removed",
              "type": {
                "text": "number | undefined"
              },
              "default": "0",
              "fieldName": "removed"
            },
            {
              "name": "symbol",
              "type": {
                "text": "'icons' | undefined"
              },
              "fieldName": "symbol"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "commit-stats",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CommitStats",
          "declaration": {
            "name": "CommitStats",
            "module": "src/webviews/apps/shared/components/commit/commit-stats.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "commit-stats",
          "declaration": {
            "name": "CommitStats",
            "module": "src/webviews/apps/shared/components/commit/commit-stats.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/converters/date-converter.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "dateConverter",
          "return": {
            "type": {
              "text": "ComplexAttributeConverter<Date, number>"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "dateConverter",
          "declaration": {
            "name": "dateConverter",
            "module": "src/webviews/apps/shared/components/converters/date-converter.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/forms/checkbox.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "checkboxBaseStyles",
          "default": "css` :host { --checkbox-foreground: var(--vscode-checkbox-foreground); --checkbox-background: var(--vscode-checkbox-background); --checkbox-border: var(--vscode-checkbox-border); --checkbox-checked-foreground: var(--vscode-inputOption-activeForeground); --checkbox-checked-background: var(--vscode-inputOption-activeBackground); --checkbox-checked-border: var(--vscode-inputOption-activeBorder); --checkbox-active-background: var(--vscode-checkbox-selectBackground); --checkbox-active-border: var(--vscode-checkbox-selectBorder); --checkbox-hover-background: var(--vscode-inputOption-hoverBackground); --checkbox-radius: 3px; --checkbox-border-width: 1px; --checkbox-size: 1.6rem; --checkbox-spacing: 1rem; display: block; margin-block: 0.8rem; } label { display: flex; gap: var(--checkbox-spacing); align-items: center; user-select: none; white-space: nowrap; cursor: pointer; color: var(--checkbox-foreground); } :host([disabled]) label { cursor: default; opacity: 0.5; } .label-text { display: block; line-height: normal; margin-inline-end: var(--checkbox-spacing); } .input { position: absolute; z-index: -1; opacity: 0; } .control { flex-shrink: 0; display: inline-flex; align-items: center; justify-content: center; position: relative; width: var(--checkbox-size); height: var(--checkbox-size); box-sizing: border-box; border-radius: var(--checkbox-radius); color: var(--checkbox-foreground); background: var(--checkbox-background); border: var(--checkbox-border-width, 1px) solid var(--vscode-checkbox-border); } .input:hover + .control { background-color: var(--checkbox-hover-background); } .input:focus-visible + .control, .input:focus + .control { outline: 1px solid var(--vscode-focusBorder); outline-offset: 2px; } .input:active + .control { background-color: var(--checkbox-active-background); border-color: var(--checkbox-active-border); } :host([checked]) .control { color: var(--checkbox-checked-foreground); background-color: var(--checkbox-checked-background); border-color: var(--checkbox-checked-border); } code-icon { pointer-events: none; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "checkboxBaseStyles",
          "declaration": {
            "name": "checkboxBaseStyles",
            "module": "src/webviews/apps/shared/components/forms/checkbox.css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/helpers/react-wrapper.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "reactWrapper",
          "return": {
            "type": {
              "text": "ReactWebComponent<I, E>"
            }
          },
          "parameters": [
            {
              "name": "elementClass",
              "type": {
                "text": "Constructor<I>"
              }
            },
            {
              "name": "options",
              "type": {
                "text": "Opts<I, E>"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "reactWrapper",
          "declaration": {
            "name": "reactWrapper",
            "module": "src/webviews/apps/shared/components/helpers/react-wrapper.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/helpers/slots.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "hasNodes",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "nodes",
              "type": {
                "text": "(Node[] | undefined)[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "nodeTypeFilter",
          "return": {
            "type": {
              "text": "(node: Node) => boolean"
            }
          },
          "parameters": [
            {
              "name": "nodeType",
              "type": {
                "text": "Node['nodeType']"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasNodes",
          "declaration": {
            "name": "hasNodes",
            "module": "src/webviews/apps/shared/components/helpers/slots.ts"
          }
        },
        {
          "kind": "js",
          "name": "nodeTypeFilter",
          "declaration": {
            "name": "nodeTypeFilter",
            "module": "src/webviews/apps/shared/components/helpers/slots.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/icons/codicons-map.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "iconFontFamily",
          "type": {
            "text": "string"
          },
          "default": "'codicon'"
        },
        {
          "kind": "variable",
          "name": "iconMap"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "iconFontFamily",
          "declaration": {
            "name": "iconFontFamily",
            "module": "src/webviews/apps/shared/components/icons/codicons-map.ts"
          }
        },
        {
          "kind": "js",
          "name": "iconMap",
          "declaration": {
            "name": "iconMap",
            "module": "src/webviews/apps/shared/components/icons/codicons-map.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/icons/glicons-map.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "iconFontFamily",
          "type": {
            "text": "string"
          },
          "default": "'glicons'"
        },
        {
          "kind": "variable",
          "name": "iconMap"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "iconFontFamily",
          "declaration": {
            "name": "iconFontFamily",
            "module": "src/webviews/apps/shared/components/icons/glicons-map.ts"
          }
        },
        {
          "kind": "js",
          "name": "iconMap",
          "declaration": {
            "name": "iconMap",
            "module": "src/webviews/apps/shared/components/icons/glicons-map.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/indicators/indicator.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "baseStyles",
          "default": "css` /* :host { display: inline-block; } */ .indicator { box-sizing: border-box; display: inline-block; border-radius: calc(var(--gl-indicator-size, 0.8rem) * 2); width: var(--gl-indicator-size, 0.8rem); aspect-ratio: 1; background-color: var(--gl-indicator-color); vertical-align: text-bottom; } `"
        },
        {
          "kind": "variable",
          "name": "pulseStyles",
          "default": "css` .indicator--pulse { animation: 1.5s ease 0s infinite normal none running pulse; } @keyframes pulse { 0% { box-shadow: 0 0 0 0 var(--gl-indicator-pulse-color); } 70% { box-shadow: 0 0 0 var(--gl-indicator-size, 0.8rem) transparent; } 100% { box-shadow: 0 0 0 0 transparent; } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "baseStyles",
          "declaration": {
            "name": "baseStyles",
            "module": "src/webviews/apps/shared/components/indicators/indicator.css.ts"
          }
        },
        {
          "kind": "js",
          "name": "pulseStyles",
          "declaration": {
            "name": "pulseStyles",
            "module": "src/webviews/apps/shared/components/indicators/indicator.css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/indicators/indicator.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "tagName",
          "type": {
            "text": "string"
          },
          "default": "'gl-indicator'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "GlIndicator",
          "members": [
            {
              "kind": "field",
              "name": "pulse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "pulse"
            }
          ],
          "attributes": [
            {
              "name": "pulse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "pulse"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "tagName",
          "declaration": {
            "name": "tagName",
            "module": "src/webviews/apps/shared/components/indicators/indicator.ts"
          }
        },
        {
          "kind": "js",
          "name": "GlIndicator",
          "declaration": {
            "name": "GlIndicator",
            "module": "src/webviews/apps/shared/components/indicators/indicator.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "GlIndicator",
            "module": "src/webviews/apps/shared/components/indicators/indicator.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/indicators/watermark-loader.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "baseStyles",
          "default": "css` .container { display: flex; flex-direction: column; align-items: center; justify-content: center; margin: auto; position: absolute; top: 5%; bottom: 45%; left: 0; right: 0; } ::slotted(p) { padding-top: 1rem; color: var(--color-foreground--75); font-size: 1.4rem; } .watermark { width: 12rem; height: 12rem; fill: color-mix(in srgb, var(--color-foreground) 15%, var(--color-background)); transform-origin: center; } `"
        },
        {
          "kind": "variable",
          "name": "pulseStyles",
          "default": "css` @keyframes pulse { 0% { transform: scale(0.9); } 50% { transform: scale(1.05); } 100% { transform: scale(0.9); } } .watermark--pulse .watermark-path { transform: scale(0.9); animation: pulse 1.8s ease-in-out infinite; transform-origin: center; } /* Stagger the pulse animation for a wave effect on all paths */ /* Targeting all paths using their order within the SVG */ .watermark-path:nth-of-type(1) { /* Target the outer circle path */ animation-delay: 0.2s; } .watermark-path:nth-of-type(2) { /* Target the connection path */ animation-delay: 0.4s; } .watermark-path:nth-of-type(3) { /* Target the first dot path */ animation-delay: 0.1s; } .watermark-path:nth-of-type(4) { /* Target the second dot path */ animation-delay: 0.1s; } .watermark-path:nth-of-type(5) { /* Target the third dot path */ animation-delay: 0.1s; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "baseStyles",
          "declaration": {
            "name": "baseStyles",
            "module": "src/webviews/apps/shared/components/indicators/watermark-loader.css.ts"
          }
        },
        {
          "kind": "js",
          "name": "pulseStyles",
          "declaration": {
            "name": "pulseStyles",
            "module": "src/webviews/apps/shared/components/indicators/watermark-loader.css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/indicators/watermark-loader.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "tagName",
          "type": {
            "text": "string"
          },
          "default": "'gl-watermark-loader'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "GlWatermarkLoader",
          "members": [
            {
              "kind": "field",
              "name": "pulse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "pulse"
            }
          ],
          "attributes": [
            {
              "name": "pulse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "pulse"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "tagName",
          "declaration": {
            "name": "tagName",
            "module": "src/webviews/apps/shared/components/indicators/watermark-loader.ts"
          }
        },
        {
          "kind": "js",
          "name": "GlWatermarkLoader",
          "declaration": {
            "name": "GlWatermarkLoader",
            "module": "src/webviews/apps/shared/components/indicators/watermark-loader.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "GlWatermarkLoader",
            "module": "src/webviews/apps/shared/components/indicators/watermark-loader.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/integrations/connect.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlConnect",
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'text' | 'inline' | 'action'"
              },
              "default": "'text'",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "account",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "account"
            },
            {
              "kind": "field",
              "name": "connected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "connected"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "'Provider'",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "integration",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "integration"
            },
            {
              "kind": "field",
              "name": "connectUrl",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "connect-url"
            },
            {
              "kind": "field",
              "name": "url",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "url"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "icon"
            },
            {
              "kind": "field",
              "name": "connectIntegrationUrl",
              "type": {
                "text": "string | undefined"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "integrationLabel",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "renderText",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderInline",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderAction",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "type",
              "type": {
                "text": "'text' | 'inline' | 'action'"
              },
              "default": "'text'",
              "fieldName": "type"
            },
            {
              "name": "account",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "account"
            },
            {
              "name": "connected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "connected"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "'Provider'",
              "fieldName": "label"
            },
            {
              "name": "integration",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "integration"
            },
            {
              "name": "connect-url",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "connectUrl"
            },
            {
              "name": "url",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "url"
            },
            {
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "icon"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-connect",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlConnect",
          "declaration": {
            "name": "GlConnect",
            "module": "src/webviews/apps/shared/components/integrations/connect.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-connect",
          "declaration": {
            "name": "GlConnect",
            "module": "src/webviews/apps/shared/components/integrations/connect.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/menu/menu-divider.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MenuDivider",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "menu-divider",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MenuDivider",
          "declaration": {
            "name": "MenuDivider",
            "module": "src/webviews/apps/shared/components/menu/menu-divider.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "menu-divider",
          "declaration": {
            "name": "MenuDivider",
            "module": "src/webviews/apps/shared/components/menu/menu-divider.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/menu/menu-item.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MenuItem",
          "members": [
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "href",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'option'",
              "attribute": "role",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "updateInteractiveState",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "href"
            },
            {
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'option'",
              "fieldName": "role"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "menu-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MenuItem",
          "declaration": {
            "name": "MenuItem",
            "module": "src/webviews/apps/shared/components/menu/menu-item.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "menu-item",
          "declaration": {
            "name": "MenuItem",
            "module": "src/webviews/apps/shared/components/menu/menu-item.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/menu/menu-label.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MenuLabel",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "menu-label",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MenuLabel",
          "declaration": {
            "name": "MenuLabel",
            "module": "src/webviews/apps/shared/components/menu/menu-label.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "menu-label",
          "declaration": {
            "name": "MenuLabel",
            "module": "src/webviews/apps/shared/components/menu/menu-label.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/menu/menu-list.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MenuList",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "menu-list",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MenuList",
          "declaration": {
            "name": "MenuList",
            "module": "src/webviews/apps/shared/components/menu/menu-list.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "menu-list",
          "declaration": {
            "name": "MenuList",
            "module": "src/webviews/apps/shared/components/menu/menu-list.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/markdown/markdown.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlMarkdown",
          "members": [
            {
              "kind": "field",
              "name": "markdown",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''",
              "attribute": "markdown"
            },
            {
              "kind": "method",
              "name": "renderMarkdown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "markdown",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "markdown",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "markdown"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-markdown",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlMarkdown",
          "declaration": {
            "name": "GlMarkdown",
            "module": "src/webviews/apps/shared/components/markdown/markdown.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-markdown",
          "declaration": {
            "name": "GlMarkdown",
            "module": "src/webviews/apps/shared/components/markdown/markdown.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/overlays/overlays.utils.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "handleUnsafeOverlayContent",
          "parameters": [
            {
              "name": "content",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "handleUnsafeOverlayContent",
          "declaration": {
            "name": "handleUnsafeOverlayContent",
            "module": "src/webviews/apps/shared/components/overlays/overlays.utils.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/overlays/popover.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlPopover",
          "cssParts": [
            {
              "description": "Styles the sl-popup element itself",
              "name": "base"
            },
            {
              "description": "Styles the arrow's container",
              "name": "arrow"
            },
            {
              "description": "Styles the popup's container",
              "name": "popup"
            },
            {
              "description": "Styles the element that wraps the content slot",
              "name": "body"
            }
          ],
          "slots": [
            {
              "description": "The element that triggers the popover",
              "name": "anchor"
            },
            {
              "description": "The content of the popover",
              "name": "content"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }"
            },
            {
              "kind": "field",
              "name": "openPopovers",
              "privacy": "private",
              "static": true,
              "readonly": true,
              "default": "new Set<GlPopover>()",
              "description": "static registry to track all open popovers"
            },
            {
              "kind": "method",
              "name": "closeOthers",
              "privacy": "private",
              "static": true,
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "openingPopover",
                  "type": {
                    "text": "GlPopover"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "closeWatcher",
              "type": {
                "text": "CloseWatcher | null"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "hoverTimeout",
              "type": {
                "text": "ReturnType<typeof setTimeout>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "body",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "popup",
              "type": {
                "text": "SlPopup"
              }
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "SlPopup['placement']"
              },
              "default": "'bottom'",
              "attribute": "placement",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "string | HTMLElement | { getBoundingClientRect: () => Omit<DOMRect, 'toJSON'> } | undefined"
              },
              "attribute": "anchor"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "distance",
              "type": {
                "text": "number"
              },
              "default": "8",
              "attribute": "distance"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "open",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "arrow",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "attribute": "arrow",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "skidding",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "The distance in pixels from which to offset the popover along its target.",
              "attribute": "skidding"
            },
            {
              "kind": "field",
              "name": "trigger",
              "type": {
                "text": "Triggers"
              },
              "default": "'hover focus'",
              "attribute": "trigger"
            },
            {
              "kind": "field",
              "name": "hoist",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable this option to prevent the popover from being clipped when the component is placed inside a container with\n`overflow: auto|hidden|scroll`. Hoisting uses a fixed positioning strategy that works in many, but not all,\nscenarios.",
              "attribute": "hoist"
            },
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "'menu' | undefined"
              },
              "attribute": "appearance",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "currentPlacement",
              "type": {
                "text": "SlPopup['placement']"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_triggeredBy",
              "type": {
                "text": "TriggerType | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "show",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "triggeredBy",
                  "optional": true,
                  "type": {
                    "text": "TriggerType"
                  }
                }
              ],
              "description": "Shows the popover."
            },
            {
              "kind": "method",
              "name": "hide",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "description": "Hides the popover"
            },
            {
              "kind": "field",
              "name": "handleTriggerBlur",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "handleTriggerClick",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_skipHideOnClick",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "handleTriggerMouseDown",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "handleTriggerFocus",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "handleDocumentKeyDown",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "handlePopupBlur",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "handleWebviewBlur",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "handleWebviewMouseDown",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "handleMouseOver",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "handleMouseOut",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "hasPopupFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "hasTrigger",
              "privacy": "private",
              "parameters": [
                {
                  "name": "triggerType",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleOpenChange",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleOptionsChange",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleDisabledChange",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "events": [
            {
              "description": "Fired when the popover is shown",
              "name": "gl-popover-show"
            },
            {
              "description": "Fired after the popover is shown",
              "name": "gl-popover-after-show"
            },
            {
              "description": "Fired when the popover is hidden",
              "name": "gl-popover-hide"
            },
            {
              "description": "Fired after the popover is hidden",
              "name": "gl-popover-after-hide"
            }
          ],
          "attributes": [
            {
              "name": "placement",
              "type": {
                "text": "SlPopup['placement']"
              },
              "default": "'bottom'",
              "fieldName": "placement"
            },
            {
              "name": "anchor",
              "type": {
                "text": "string | HTMLElement | { getBoundingClientRect: () => Omit<DOMRect, 'toJSON'> } | undefined"
              },
              "fieldName": "anchor"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "distance",
              "type": {
                "text": "number"
              },
              "default": "8",
              "fieldName": "distance"
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "open"
            },
            {
              "name": "arrow",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "arrow"
            },
            {
              "name": "skidding",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "The distance in pixels from which to offset the popover along its target.",
              "fieldName": "skidding"
            },
            {
              "name": "trigger",
              "type": {
                "text": "Triggers"
              },
              "default": "'hover focus'",
              "fieldName": "trigger"
            },
            {
              "name": "hoist",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable this option to prevent the popover from being clipped when the component is placed inside a container with\n`overflow: auto|hidden|scroll`. Hoisting uses a fixed positioning strategy that works in many, but not all,\nscenarios.",
              "fieldName": "hoist"
            },
            {
              "name": "appearance",
              "type": {
                "text": "'menu' | undefined"
              },
              "fieldName": "appearance"
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          },
          "tagName": "gl-popover",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlPopover",
          "declaration": {
            "name": "GlPopover",
            "module": "src/webviews/apps/shared/components/overlays/popover.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-popover",
          "declaration": {
            "name": "GlPopover",
            "module": "src/webviews/apps/shared/components/overlays/popover.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/overlays/tooltip.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlTooltip",
          "members": [
            {
              "kind": "field",
              "name": "content",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "content"
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "SlTooltip['placement'] | undefined"
              },
              "default": "'bottom'",
              "attribute": "placement",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "distance",
              "type": {
                "text": "number | undefined"
              },
              "attribute": "distance"
            },
            {
              "kind": "field",
              "name": "hoist",
              "type": {
                "text": "boolean | undefined"
              },
              "attribute": "hoist"
            },
            {
              "kind": "field",
              "name": "observer",
              "type": {
                "text": "MutationObserver | undefined"
              },
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "content",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "content"
            },
            {
              "name": "placement",
              "type": {
                "text": "SlTooltip['placement'] | undefined"
              },
              "default": "'bottom'",
              "fieldName": "placement"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "distance",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "distance"
            },
            {
              "name": "hoist",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "hoist"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-tooltip",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlTooltip",
          "declaration": {
            "name": "GlTooltip",
            "module": "src/webviews/apps/shared/components/overlays/tooltip.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-tooltip",
          "declaration": {
            "name": "GlTooltip",
            "module": "src/webviews/apps/shared/components/overlays/tooltip.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/panes/pane-group.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "WebviewPaneGroup",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "webview-pane-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "WebviewPaneGroup",
          "declaration": {
            "name": "WebviewPaneGroup",
            "module": "src/webviews/apps/shared/components/panes/pane-group.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "webview-pane-group",
          "declaration": {
            "name": "WebviewPaneGroup",
            "module": "src/webviews/apps/shared/components/panes/pane-group.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/pills/pill.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "baseStyles",
          "default": "css` :host { box-sizing: border-box; display: inline-block; vertical-align: text-bottom; } .pill { box-sizing: border-box; display: inline-flex; align-items: center; justify-content: center; padding: 0.2rem 0.5rem; border-radius: 0.5rem; font-size: 1rem; font-weight: 500; line-height: normal; text-transform: uppercase; color: var(--gl-pill-foreground, var(--vscode-foreground)); background-color: var(--gl-pill-background, var(--vscode-editorWidget-background)); white-space: nowrap; } .pill--outlined { padding: 0.1rem 0.4rem; background-color: transparent; border: 1px solid var(--gl-pill-border, var(--vscode-foreground)); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "baseStyles",
          "declaration": {
            "name": "baseStyles",
            "module": "src/webviews/apps/shared/components/pills/pill.css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/pills/tracking.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlTrackingPill",
          "members": [
            {
              "kind": "field",
              "name": "ahead",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "ahead"
            },
            {
              "kind": "field",
              "name": "behind",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "behind"
            },
            {
              "kind": "field",
              "name": "working",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "working"
            },
            {
              "kind": "field",
              "name": "alwaysShow",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "always-show"
            },
            {
              "kind": "field",
              "name": "outlined",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "outlined"
            },
            {
              "kind": "field",
              "name": "colorized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "colorized"
            },
            {
              "kind": "field",
              "name": "missingUpstream",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "missingUpstream"
            }
          ],
          "attributes": [
            {
              "name": "ahead",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "ahead"
            },
            {
              "name": "behind",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "behind"
            },
            {
              "name": "working",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "working"
            },
            {
              "name": "always-show",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "alwaysShow"
            },
            {
              "name": "outlined",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "outlined"
            },
            {
              "name": "colorized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "colorized"
            },
            {
              "name": "missingUpstream",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "missingUpstream"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-tracking-pill",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlTrackingPill",
          "declaration": {
            "name": "GlTrackingPill",
            "module": "src/webviews/apps/shared/components/pills/tracking.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-tracking-pill",
          "declaration": {
            "name": "GlTrackingPill",
            "module": "src/webviews/apps/shared/components/pills/tracking.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/rich/issue-icon.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "IssueIcon",
          "members": [
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "'opened' | 'closed' | string | undefined"
              },
              "attribute": "state"
            },
            {
              "kind": "field",
              "name": "issueId",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "issue-id"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "classes",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "readonly": true
            }
          ],
          "attributes": [
            {
              "name": "state",
              "type": {
                "text": "'opened' | 'closed' | string | undefined"
              },
              "fieldName": "state"
            },
            {
              "name": "issue-id",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "issueId"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "issue-icon",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "IssueIcon",
          "declaration": {
            "name": "IssueIcon",
            "module": "src/webviews/apps/shared/components/rich/issue-icon.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "issue-icon",
          "declaration": {
            "name": "IssueIcon",
            "module": "src/webviews/apps/shared/components/rich/issue-icon.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/rich/issue-pull-request.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "IssuePullRequest",
          "members": [
            {
              "kind": "field",
              "name": "url",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "url"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "date",
              "type": {
                "text": "number | string | Date | undefined"
              },
              "attribute": "date"
            },
            {
              "kind": "field",
              "name": "dateFormat",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "dateFormat"
            },
            {
              "kind": "field",
              "name": "dateStyle",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "dateStyle"
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "'opened' | 'closed' | 'merged'"
              },
              "default": "'merged'",
              "attribute": "status"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'autolink' | 'issue' | 'pr'"
              },
              "default": "'autolink'",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "identifier"
            },
            {
              "kind": "field",
              "name": "compact",
              "type": {
                "text": "boolean | undefined"
              },
              "attribute": "compact",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "details",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "details"
            },
            {
              "kind": "method",
              "name": "renderDate",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onDetailsClicked",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "url",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "url"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "name"
            },
            {
              "name": "date",
              "type": {
                "text": "number | string | Date | undefined"
              },
              "fieldName": "date"
            },
            {
              "name": "dateFormat",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "dateFormat"
            },
            {
              "name": "dateStyle",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "dateStyle"
            },
            {
              "name": "status",
              "type": {
                "text": "'opened' | 'closed' | 'merged'"
              },
              "default": "'merged'",
              "fieldName": "status"
            },
            {
              "name": "type",
              "type": {
                "text": "'autolink' | 'issue' | 'pr'"
              },
              "default": "'autolink'",
              "fieldName": "type"
            },
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "identifier"
            },
            {
              "name": "compact",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "compact"
            },
            {
              "name": "details",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "details"
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          },
          "tagName": "issue-pull-request",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "IssuePullRequest",
          "declaration": {
            "name": "IssuePullRequest",
            "module": "src/webviews/apps/shared/components/rich/issue-pull-request.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "issue-pull-request",
          "declaration": {
            "name": "IssuePullRequest",
            "module": "src/webviews/apps/shared/components/rich/issue-pull-request.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/rich/issue.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "issueIconStyles",
          "default": "css` .issue-icon--opened { color: var(--vscode-gitlens-openAutolinkedIssueIconColor); } .issue-icon--closed { color: var(--vscode-gitlens-closedAutolinkedIssueIconColor); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "issueIconStyles",
          "declaration": {
            "name": "issueIconStyles",
            "module": "src/webviews/apps/shared/components/rich/issue.css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/rich/pr-icon.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrIcon",
          "members": [
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "'merged' | 'opened' | 'closed' | string | undefined"
              },
              "attribute": "state"
            },
            {
              "kind": "field",
              "name": "draft",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "draft"
            },
            {
              "kind": "field",
              "name": "prId",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "pr-id"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "classes",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "readonly": true
            }
          ],
          "attributes": [
            {
              "name": "state",
              "type": {
                "text": "'merged' | 'opened' | 'closed' | string | undefined"
              },
              "fieldName": "state"
            },
            {
              "name": "draft",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "draft"
            },
            {
              "name": "pr-id",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "prId"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pr-icon",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrIcon",
          "declaration": {
            "name": "PrIcon",
            "module": "src/webviews/apps/shared/components/rich/pr-icon.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pr-icon",
          "declaration": {
            "name": "PrIcon",
            "module": "src/webviews/apps/shared/components/rich/pr-icon.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/rich/pr.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "prIconStyles",
          "default": "css` .pr-icon--opened { color: var(--vscode-gitlens-openPullRequestIconColor); } .pr-icon--closed { color: var(--vscode-gitlens-closedPullRequestIconColor); } .pr-icon--merged { color: var(--vscode-gitlens-mergedPullRequestIconColor); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "prIconStyles",
          "declaration": {
            "name": "prIconStyles",
            "module": "src/webviews/apps/shared/components/rich/pr.css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/rich/utils.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "getAutolinkIcon",
          "return": {
            "type": {
              "text": "{ icon: string; modifier: string }"
            }
          },
          "parameters": [
            {
              "name": "type",
              "default": "'autolink'",
              "type": {
                "text": "'autolink' | 'issue' | 'pr'"
              }
            },
            {
              "name": "status",
              "default": "'merged'",
              "type": {
                "text": "'opened' | 'closed' | 'merged'"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getAutolinkIcon",
          "declaration": {
            "name": "getAutolinkIcon",
            "module": "src/webviews/apps/shared/components/rich/utils.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/radio/radio-group.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "tagName",
          "type": {
            "text": "string"
          },
          "default": "'gl-radio-group'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "RadioGroup",
          "members": [
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "value"
            },
            {
              "kind": "method",
              "name": "handleValueChange",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "radioEls",
              "type": {
                "text": "Radio[]"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "updateRadioElements",
              "privacy": "private",
              "parameters": [
                {
                  "name": "updateParentGroup",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "setValue",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "tagName",
          "declaration": {
            "name": "tagName",
            "module": "src/webviews/apps/shared/components/radio/radio-group.ts"
          }
        },
        {
          "kind": "js",
          "name": "RadioGroup",
          "declaration": {
            "name": "RadioGroup",
            "module": "src/webviews/apps/shared/components/radio/radio-group.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "RadioGroup",
            "module": "src/webviews/apps/shared/components/radio/radio-group.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/radio/radio.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "radioStyles",
          "default": "css` :host { --checkbox-radius: 50%; --checkbox-foreground: var(--vscode-radio-inactiveForeground); --checkbox-background: var(--vscode-radio-inactiveBackground); --checkbox-border: var(--vscode-radio-inactiveBorder); --checkbox-checked-foreground: var(--vscode-radio-activeForeground); --checkbox-checked-background: var(--vscode-radio-activeBackground); --checkbox-checked-border: var(--vscode-radio-activeBorder); --checkbox-hover-background: var(--vscode-radio-inactiveHoverBackground); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "radioStyles",
          "declaration": {
            "name": "radioStyles",
            "module": "src/webviews/apps/shared/components/radio/radio.css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/radio/radio.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "tagName",
          "type": {
            "text": "string"
          },
          "default": "'gl-radio'"
        },
        {
          "kind": "class",
          "description": "",
          "name": "Radio",
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{ ...GlElement.shadowRootOptions, delegatesFocus: true, }"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "name",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "checked",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_parentGroup",
              "type": {
                "text": "RadioGroup | undefined"
              },
              "privacy": "private",
              "default": "undefined"
            },
            {
              "kind": "field",
              "name": "parentGroup",
              "type": {
                "text": "RadioGroup | undefined"
              }
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderCircle",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "value"
            },
            {
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "name"
            },
            {
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "checked"
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "tagName",
          "declaration": {
            "name": "tagName",
            "module": "src/webviews/apps/shared/components/radio/radio.ts"
          }
        },
        {
          "kind": "js",
          "name": "Radio",
          "declaration": {
            "name": "Radio",
            "module": "src/webviews/apps/shared/components/radio/radio.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "Radio",
            "module": "src/webviews/apps/shared/components/radio/radio.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/search/search-box.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlSearchBox",
          "members": [
            {
              "kind": "field",
              "name": "errorMessage",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "errorMessage"
            },
            {
              "kind": "field",
              "name": "_value",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "matchAll",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "matchAll"
            },
            {
              "kind": "field",
              "name": "matchCase",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "matchCase"
            },
            {
              "kind": "field",
              "name": "matchRegex",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "attribute": "matchRegex"
            },
            {
              "kind": "field",
              "name": "filter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "filter"
            },
            {
              "kind": "field",
              "name": "total",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "total"
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "step"
            },
            {
              "kind": "field",
              "name": "more",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "more"
            },
            {
              "kind": "field",
              "name": "searching",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "searching"
            },
            {
              "kind": "field",
              "name": "valid",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "valid"
            },
            {
              "kind": "field",
              "name": "resultsHidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "resultsHidden"
            },
            {
              "kind": "field",
              "name": "resultsLabel",
              "type": {
                "text": "string"
              },
              "default": "'result'",
              "attribute": "resultsLabel"
            },
            {
              "kind": "field",
              "name": "resultsLoaded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "resultsLoaded"
            },
            {
              "kind": "field",
              "name": "hasResults",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "searchInput",
              "type": {
                "text": "GlSearchInput"
              }
            },
            {
              "kind": "field",
              "name": "_disposable",
              "type": {
                "text": "Disposable | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "focus",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "navigate",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "direction",
                  "type": {
                    "text": "SearchNavigationEventDetail['direction']"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "logSearch",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "query",
                  "type": {
                    "text": "SearchQuery"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setSearchQuery",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "query",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleShortcutKeys",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePrevious",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleNext",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleOpenInView",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "resultsHtml",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "errorMessage",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "errorMessage"
            },
            {
              "name": "value",
              "fieldName": "value"
            },
            {
              "name": "matchAll",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "matchAll"
            },
            {
              "name": "matchCase",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "matchCase"
            },
            {
              "name": "matchRegex",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "matchRegex"
            },
            {
              "name": "filter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "filter"
            },
            {
              "name": "total",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "total"
            },
            {
              "name": "step",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "step"
            },
            {
              "name": "more",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "more"
            },
            {
              "name": "searching",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "searching"
            },
            {
              "name": "valid",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "valid"
            },
            {
              "name": "resultsHidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "resultsHidden"
            },
            {
              "name": "resultsLabel",
              "type": {
                "text": "string"
              },
              "default": "'result'",
              "fieldName": "resultsLabel"
            },
            {
              "name": "resultsLoaded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "resultsLoaded"
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          },
          "tagName": "gl-search-box",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SearchModeChangeEventDetail",
          "declaration": {
            "name": "SearchModeChangeEventDetail",
            "module": "src/webviews/apps/shared/components/search/search-box.ts"
          }
        },
        {
          "kind": "js",
          "name": "SearchNavigationEventDetail",
          "declaration": {
            "name": "SearchNavigationEventDetail",
            "module": "src/webviews/apps/shared/components/search/search-box.ts"
          }
        },
        {
          "kind": "js",
          "name": "GlSearchBox",
          "declaration": {
            "name": "GlSearchBox",
            "module": "src/webviews/apps/shared/components/search/search-box.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-search-box",
          "declaration": {
            "name": "GlSearchBox",
            "module": "src/webviews/apps/shared/components/search/search-box.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/search/search-input.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlSearchInput",
          "members": [
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "HTMLInputElement"
              }
            },
            {
              "kind": "field",
              "name": "popoverEl",
              "type": {
                "text": "GlPopover"
              }
            },
            {
              "kind": "field",
              "name": "errorMessage",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "helpType",
              "type": {
                "text": "SearchOperatorsLongForm | undefined"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "placeholder",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_value",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "filter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "filter"
            },
            {
              "kind": "field",
              "name": "matchAll",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "matchAll"
            },
            {
              "kind": "field",
              "name": "matchCase",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "matchCase"
            },
            {
              "kind": "field",
              "name": "matchRegex",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "attribute": "matchRegex"
            },
            {
              "kind": "field",
              "name": "matchCaseOverride",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "focus",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleFocus",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClear",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_updateHelpTextDebounced",
              "type": {
                "text": "Deferrable<GlSearchInput['updateHelpText']> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "updateHelpText",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "updateHelpTextCore",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleInputClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMatchAll",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMatchCase",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMatchRegex",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleFilter",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleKeyup",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleShortcutKeys",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleInsertToken",
              "privacy": "private",
              "parameters": [
                {
                  "name": "token",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onSearchChanged",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "debouncedOnSearchChanged",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setCustomValidity",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "errorMessage",
                  "default": "''",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "searchHistory",
              "type": {
                "text": "string[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "searchHistoryPos",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "method",
              "name": "logSearch",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "query",
                  "type": {
                    "text": "SearchQuery"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setSearchQuery",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "query",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "value",
              "fieldName": "value"
            },
            {
              "name": "filter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "filter"
            },
            {
              "name": "matchAll",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "matchAll"
            },
            {
              "name": "matchCase",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "matchCase"
            },
            {
              "name": "matchRegex",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "matchRegex"
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          },
          "tagName": "gl-search-input",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlSearchInput",
          "declaration": {
            "name": "GlSearchInput",
            "module": "src/webviews/apps/shared/components/search/search-input.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-search-input",
          "declaration": {
            "name": "GlSearchInput",
            "module": "src/webviews/apps/shared/components/search/search-input.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/status/git-status.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlGitStatus",
          "members": [
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "GitFileStatus | 'T' | undefined"
              },
              "attribute": "status"
            },
            {
              "kind": "field",
              "name": "statusName",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "renderIgnored",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderUntracked",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderAdded",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderDeleted",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderModified",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderRenamed",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderCopied",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderConflict",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderUnknown",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "status",
              "type": {
                "text": "GitFileStatus | 'T' | undefined"
              },
              "fieldName": "status"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-git-status",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlGitStatus",
          "declaration": {
            "name": "GlGitStatus",
            "module": "src/webviews/apps/shared/components/status/git-status.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-git-status",
          "declaration": {
            "name": "GlGitStatus",
            "module": "src/webviews/apps/shared/components/status/git-status.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/tree/base.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/tree/tree-generator.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlTreeGenerator",
          "members": [
            {
              "kind": "field",
              "name": "treeItems",
              "type": {
                "text": "TreeModelFlat[] | undefined"
              },
              "default": "undefined"
            },
            {
              "kind": "field",
              "name": "guides",
              "type": {
                "text": "'none' | 'onHover' | 'always' | undefined"
              },
              "attribute": "guides",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_model",
              "type": {
                "text": "TreeModel[] | undefined"
              }
            },
            {
              "kind": "field",
              "name": "model"
            },
            {
              "kind": "method",
              "name": "renderIcon",
              "privacy": "private",
              "parameters": [
                {
                  "name": "icon",
                  "optional": true,
                  "type": {
                    "text": "string | { type: 'status'; name: GlGitStatus['status'] }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderActions",
              "privacy": "private",
              "parameters": [
                {
                  "name": "model",
                  "type": {
                    "text": "TreeModelFlat"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderDecorations",
              "privacy": "private",
              "parameters": [
                {
                  "name": "model",
                  "type": {
                    "text": "TreeModelFlat"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderTreeItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "model",
                  "type": {
                    "text": "TreeModelFlat"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderTree",
              "privacy": "private",
              "parameters": [
                {
                  "name": "nodes",
                  "optional": true,
                  "type": {
                    "text": "TreeModelFlat[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onTreeItemSelected",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemSelectionDetail>"
                  }
                },
                {
                  "name": "model",
                  "type": {
                    "text": "TreeModelFlat"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onTreeItemChecked",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemCheckedDetail>"
                  }
                },
                {
                  "name": "model",
                  "type": {
                    "text": "TreeModelFlat"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onTreeItemActionClicked",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                },
                {
                  "name": "model",
                  "type": {
                    "text": "TreeModelFlat"
                  }
                },
                {
                  "name": "action",
                  "type": {
                    "text": "TreeItemAction"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onTreeItemActionDblClicked",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                },
                {
                  "name": "model",
                  "type": {
                    "text": "TreeModelFlat"
                  }
                },
                {
                  "name": "action",
                  "type": {
                    "text": "TreeItemAction"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "guides",
              "type": {
                "text": "'none' | 'onHover' | 'always' | undefined"
              },
              "fieldName": "guides"
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          },
          "tagName": "gl-tree-generator",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlTreeGenerator",
          "declaration": {
            "name": "GlTreeGenerator",
            "module": "src/webviews/apps/shared/components/tree/tree-generator.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-tree-generator",
          "declaration": {
            "name": "GlTreeGenerator",
            "module": "src/webviews/apps/shared/components/tree/tree-generator.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/tree/tree-item.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlTreeItem",
          "members": [
            {
              "kind": "field",
              "name": "branch",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "branch"
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "attribute": "expanded"
            },
            {
              "kind": "field",
              "name": "path",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "path"
            },
            {
              "kind": "field",
              "name": "parentPath",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "parent-path"
            },
            {
              "kind": "field",
              "name": "parentExpanded",
              "type": {
                "text": "boolean | undefined"
              },
              "attribute": "parent-expanded"
            },
            {
              "kind": "field",
              "name": "level",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "level"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "1",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "position",
              "type": {
                "text": "number"
              },
              "default": "1",
              "attribute": "position"
            },
            {
              "kind": "field",
              "name": "checkable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "checkable"
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "checked"
            },
            {
              "kind": "field",
              "name": "disableCheck",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disableCheck"
            },
            {
              "kind": "field",
              "name": "showIcon",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "attribute": "showIcon"
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "focused",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "buttonEl",
              "type": {
                "text": "HTMLButtonElement"
              }
            },
            {
              "kind": "field",
              "name": "isHidden",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "onComponentClick",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "updateAttrs",
              "privacy": "private",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "Map<string, any>"
                  }
                },
                {
                  "name": "force",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderBranching",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderCheckbox",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderActions",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderDecorations",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "selectCore",
              "privacy": "private",
              "parameters": [
                {
                  "name": "modifiers",
                  "optional": true,
                  "type": {
                    "text": "{ dblClick: boolean; altKey?: boolean; ctrlKey?: boolean; metaKey?: boolean }"
                  }
                },
                {
                  "name": "quiet",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "select",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "deselect",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "onButtonClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onButtonDblClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onCheckboxClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onCheckboxChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "emit",
              "return": {
                "type": {
                  "text": "CustomEventType<T>"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "CustomEventDetailType<T>"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Omit<CustomEventInit<CustomEventDetailType<T>>, 'detail'>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "GlElement",
                "module": "src/webviews/apps/shared/components/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "branch",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "branch"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "expanded"
            },
            {
              "name": "path",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "path"
            },
            {
              "name": "parent-path",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "parentPath"
            },
            {
              "name": "parent-expanded",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "parentExpanded"
            },
            {
              "name": "level",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "level"
            },
            {
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "size"
            },
            {
              "name": "position",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "position"
            },
            {
              "name": "checkable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "checkable"
            },
            {
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "checked"
            },
            {
              "name": "disableCheck",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disableCheck"
            },
            {
              "name": "showIcon",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "showIcon"
            }
          ],
          "superclass": {
            "name": "GlElement",
            "module": "/src/webviews/apps/shared/components/element"
          },
          "tagName": "gl-tree-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlTreeItem",
          "declaration": {
            "name": "GlTreeItem",
            "module": "src/webviews/apps/shared/components/tree/tree-item.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-tree-item",
          "declaration": {
            "name": "GlTreeItem",
            "module": "src/webviews/apps/shared/components/tree/tree-item.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/tree/tree.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "treeStyles",
          "type": {
            "text": "array"
          },
          "default": "[elementBase, css``]"
        },
        {
          "kind": "variable",
          "name": "treeItemStyles",
          "type": {
            "text": "array"
          },
          "default": "[ elementBase, css` :host { --tree-connector-spacing: 0.6rem; --tree-connector-size: var(--gitlens-tree-indent, 1.6rem); box-sizing: border-box; padding-left: var(--gitlens-gutter-width); /* padding-right: var(--gitlens-scrollbar-gutter-width); */ padding-right: 0.5rem; padding-top: 0.1rem; padding-bottom: 0.1rem; line-height: 2.2rem; height: 2.2rem; display: flex; flex-direction: row; align-items: center; justify-content: space-between; font-size: var(--vscode-font-size); color: var(--gitlens-tree-foreground, var(--vscode-foreground)); content-visibility: auto; contain-intrinsic-size: auto 2.2rem; cursor: pointer; } :host(:hover), :host(:focus-within) { content-visibility: visible; } :host([aria-hidden='true']) { display: none; } :host(:hover) { color: var(--vscode-list-hoverForeground); background-color: var(--vscode-list-hoverBackground); } :host([aria-selected='true']) { color: var(--vscode-list-inactiveSelectionForeground); background-color: var(--vscode-list-inactiveSelectionBackground); } /* TODO: these should be :has(.input:focus) instead of :focus-within */ :host(:focus-within) { outline: 1px solid var(--vscode-list-focusOutline); outline-offset: -0.1rem; } :host([aria-selected='true']:focus-within) { color: var(--vscode-list-activeSelectionForeground); background-color: var(--vscode-list-activeSelectionBackground); } .item { appearance: none; display: flex; flex-direction: row; justify-content: flex-start; align-items: center; gap: 0.6rem; width: 100%; padding: 0; font-family: inherit; font-size: inherit; text-decoration: none; color: inherit; background: none; border: none; outline: none; cursor: pointer; min-width: 0; } /* FIXME: remove, this is for debugging .item:focus { outline: 1px solid var(--vscode-list-focusOutline); outline-offset: -0.1rem; } */ .icon { display: inline-block; width: 1.6rem; text-align: center; height: 2.2rem; line-height: 2.2rem; pointer-events: none; vertical-align: text-bottom; } slot[name='icon']::slotted(*) { width: 1.6rem; aspect-ratio: 1; vertical-align: text-bottom; } .node { display: inline-block; width: var(--tree-connector-size); text-align: center; flex: none; height: 2.2rem; line-height: 2.2rem; pointer-events: none; vertical-align: text-bottom; } .node:last-of-type { margin-right: 0.3rem; } .node--connector { position: relative; } .node--connector::before { content: ''; position: absolute; height: 2.2rem; border-left: 1px solid transparent; top: 50%; transform: translate(-1px, -50%); left: 0.8rem; width: 0.1rem; transition: border-color 0.1s linear; opacity: 0.4; } :host-context([guides='always']) .node--connector::before, :host-context([guides='onHover']:focus-within) .node--connector::before, :host-context([guides='onHover']:hover) .node--connector::before { border-color: var(--vscode-tree-indentGuidesStroke); } .branch { display: inline-block; margin-right: 0.6rem; height: 2.2rem; line-height: 2.2rem; vertical-align: text-bottom; } .text { line-height: 1.6rem; overflow: hidden; white-space: nowrap; text-align: left; text-overflow: ellipsis; flex: 1; } .main { display: inline; } .description { display: inline; opacity: 0.7; font-size: 0.9em; margin-left: 0.3rem; pointer-events: none; } .actions { flex: none; user-select: none; color: var(--vscode-icon-foreground); } :host(:focus-within) .actions { color: var(--vscode-list-activeSelectionIconForeground); } :host(:not(:hover):not(:focus-within)) .actions { display: none; } .checkbox { position: relative; display: inline-flex; width: 1.6rem; aspect-ratio: 1 / 1; text-align: center; color: var(--vscode-checkbox-foreground); background: var(--vscode-checkbox-background); border: 1px solid var(--vscode-checkbox-border); border-radius: 0.3rem; // overflow: hidden; margin-right: 0.6rem; } .checkbox:has(:checked) { color: var(--vscode-inputOption-activeForeground); border-color: var(--vscode-inputOption-activeBorder); background-color: var(--vscode-inputOption-activeBackground); } .checkbox:has(:disabled) { opacity: 0.4; } .checkbox__input { position: absolute; top: 0; left: 0; appearance: none; width: 1.4rem; aspect-ratio: 1 / 1; margin: 0; cursor: pointer; border-radius: 0.3rem; } .checkbox__input:disabled { cursor: default; } .checkbox__check { width: 1.6rem; aspect-ratio: 1 / 1; opacity: 0; transition: opacity 0.1s linear; color: var(--vscode-checkbox-foreground); pointer-events: none; } .checkbox__input:checked + .checkbox__check { opacity: 1; } slot[name='decorations'] { display: inline-block; margin-left: 0.4rem; } `, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "treeStyles",
          "declaration": {
            "name": "treeStyles",
            "module": "src/webviews/apps/shared/components/tree/tree.css.ts"
          }
        },
        {
          "kind": "js",
          "name": "treeItemStyles",
          "declaration": {
            "name": "treeItemStyles",
            "module": "src/webviews/apps/shared/components/tree/tree.css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/tree/tree.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlTree",
          "members": [
            {
              "kind": "field",
              "name": "guides",
              "type": {
                "text": "'none' | 'onHover' | 'always' | undefined"
              },
              "attribute": "guides",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_slotSubscriptionsDisposer",
              "type": {
                "text": "() => void | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_lastSelected",
              "type": {
                "text": "GlTreeItem | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "treeItems",
              "type": {
                "text": "GlTreeItem[]"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleKeydown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleBeforeSelected",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSelected",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<TreeItemSelectionDetail>"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "guides",
              "type": {
                "text": "'none' | 'onHover' | 'always' | undefined"
              },
              "fieldName": "guides"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "gl-tree",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlTree",
          "declaration": {
            "name": "GlTree",
            "module": "src/webviews/apps/shared/components/tree/tree.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "gl-tree",
          "declaration": {
            "name": "GlTree",
            "module": "src/webviews/apps/shared/components/tree/tree.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/styles/lit/a11y.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "srOnlyStyles",
          "default": "css` clip: rect(0 0 0 0); clip-path: inset(50%); width: 1px; height: 1px; overflow: hidden; position: absolute; white-space: nowrap; `"
        },
        {
          "kind": "variable",
          "name": "srOnly",
          "default": "css` .sr-only, .sr-only-focusable:not(:active):not(:focus-visible):not(:focus-within) { ${srOnlyStyles} } `"
        },
        {
          "kind": "variable",
          "name": "focusOutline",
          "default": "css` outline: 1px solid var(--color-focus-border); outline-offset: -1px; `"
        },
        {
          "kind": "variable",
          "name": "focusOutlineButton",
          "default": "css` outline: 1px solid var(--color-focus-border); outline-offset: 2px; `"
        },
        {
          "kind": "variable",
          "name": "focusableBaseStyles",
          "default": "css` :focus-visible { ${focusOutline} } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "srOnlyStyles",
          "declaration": {
            "name": "srOnlyStyles",
            "module": "src/webviews/apps/shared/components/styles/lit/a11y.css.ts"
          }
        },
        {
          "kind": "js",
          "name": "srOnly",
          "declaration": {
            "name": "srOnly",
            "module": "src/webviews/apps/shared/components/styles/lit/a11y.css.ts"
          }
        },
        {
          "kind": "js",
          "name": "focusOutline",
          "declaration": {
            "name": "focusOutline",
            "module": "src/webviews/apps/shared/components/styles/lit/a11y.css.ts"
          }
        },
        {
          "kind": "js",
          "name": "focusOutlineButton",
          "declaration": {
            "name": "focusOutlineButton",
            "module": "src/webviews/apps/shared/components/styles/lit/a11y.css.ts"
          }
        },
        {
          "kind": "js",
          "name": "focusableBaseStyles",
          "declaration": {
            "name": "focusableBaseStyles",
            "module": "src/webviews/apps/shared/components/styles/lit/a11y.css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/webviews/apps/shared/components/styles/lit/base.css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "elementBase",
          "default": "css` :host { box-sizing: border-box; } :host *, :host *::before, :host *::after { box-sizing: inherit; } [hidden] { display: none !important; } `"
        },
        {
          "kind": "variable",
          "name": "linkBase",
          "default": "css` a { color: var(--vscode-textLink-foreground); text-decoration: none; } a:focus { ${focusOutline} } a:hover { text-decoration: underline; } `"
        },
        {
          "kind": "variable",
          "name": "scrollableBase",
          "default": "css` ::-webkit-scrollbar { width: 10px; height: 10px; } ::-webkit-scrollbar-corner { background-color: transparent; } ::-webkit-scrollbar-thumb { background-color: transparent; border-color: inherit; border-right-style: inset; border-right-width: calc(100vw + 100vh); border-radius: unset !important; } ::-webkit-scrollbar-thumb:hover { border-color: var(--vscode-scrollbarSlider-hoverBackground); } ::-webkit-scrollbar-thumb:active { border-color: var(--vscode-scrollbarSlider-activeBackground); } .scrollable { border-color: transparent; transition: border-color 1s linear; } :host(:hover) .scrollable, :host(:focus-within) .scrollable { border-color: var(--vscode-scrollbarSlider-background); transition: none; } :host-context(.preload) .scrollable { transition: none; } `"
        },
        {
          "kind": "variable",
          "name": "inlineCode",
          "default": "css` .inline-code { background: var(--vscode-textCodeBlock-background); border-radius: 3px; padding: 0px 4px 2px 4px; font-family: var(--vscode-editor-font-family); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "elementBase",
          "declaration": {
            "name": "elementBase",
            "module": "src/webviews/apps/shared/components/styles/lit/base.css.ts"
          }
        },
        {
          "kind": "js",
          "name": "linkBase",
          "declaration": {
            "name": "linkBase",
            "module": "src/webviews/apps/shared/components/styles/lit/base.css.ts"
          }
        },
        {
          "kind": "js",
          "name": "scrollableBase",
          "declaration": {
            "name": "scrollableBase",
            "module": "src/webviews/apps/shared/components/styles/lit/base.css.ts"
          }
        },
        {
          "kind": "js",
          "name": "inlineCode",
          "declaration": {
            "name": "inlineCode",
            "module": "src/webviews/apps/shared/components/styles/lit/base.css.ts"
          }
        }
      ]
    }
  ]
}
